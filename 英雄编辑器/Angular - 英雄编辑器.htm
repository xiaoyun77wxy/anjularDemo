<!DOCTYPE html>
<!-- saved from url=(0035)https://angular.cn/tutorial/toh-pt1 -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  
  <title>Angular - 英雄编辑器</title>
  <!--<base href="/">--><base href=".">

  <meta name="viewport" content="width=device-width, initial-scale=1">

  <link rel="icon" type="image/x-icon" href="https://angular.cn/favicon.ico">
  <link rel="icon" type="image/x-icon" href="https://angular.cn/assets/images/favicons/favicon.ico">
  <link rel="icon" type="image/png" href="https://angular.cn/assets/images/favicons/favicon-32x32.png" sizes="32x32">
  <link rel="icon" type="image/png" href="https://angular.cn/assets/images/favicons/favicon-194x194.png" sizes="194x194">
  <link rel="icon" type="image/png" href="https://angular.cn/assets/images/favicons/favicon-96x96.png" sizes="96x96">
  <link rel="icon" type="image/png" href="https://angular.cn/assets/images/favicons/favicon-16x16.png" sizes="16x16">
  <link rel="apple-touch-icon" sizes="144x144" href="https://angular.cn/assets/images/favicons/apple-touch-icon-144x144.png">
  <link rel="apple-touch-icon-precomposed" sizes="144x144" href="https://angular.cn/assets/images/favicons/apple-touch-icon-144x144.png">

  <!-- NOTE: These need to be kept in sync with `ngsw-manifest.json`. -->
  <link href="./Angular - 英雄编辑器_files/Material_Icons.css" rel="stylesheet">
  <link href="./Angular - 英雄编辑器_files/Droid_Sans_Mono.css" rel="stylesheet">
  <link href="./Angular - 英雄编辑器_files/font-awesome.min.css" rel="stylesheet">
  <!-- -->

  <link rel="manifest" href="https://angular.cn/pwa-manifest.json">
  <meta name="theme-color" content="#1976d2">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-status-bar-style" content="translucent">

  <script async="" src="./Angular - 英雄编辑器_files/analytics.js.下载"></script><script>
    // Dynamically, pre-emptively, add `noindex`, which will be removed when the doc is ready and valid
    tag = document.createElement('meta'); tag.name = 'robots'; tag.content = 'noindex';
    document.head.appendChild(tag);
  </script>

  <!-- Google Analytics -->
  <script>
  // Note this is a customised version of the GA tracking snippet
  // See the comments below for more info
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;
  ~i.name.indexOf('NG_DEFER_BOOTSTRAP')|| // only load library if not running e2e tests
  m.parentNode.insertBefore(a,m)
  })(window,document,'script','assets/js/analytics.js','ga');
  </script>
  <!-- End Google Analytics -->

  <script>
    // Report fatal errors to Google Analytics
    window.onerror = function() {
      ga('send', 'exception', {exDescription: formatError.apply(null, arguments), exFatal: true});

      function formatError(msg, url, line, col, e) {
        var stack;
        msg = msg.replace(/^Error: /, '');
        if (e) {
          stack = e.stack
              // strip the leading "Error: " from the stack trace
              .replace(/^Error: /, '')
              // strip the message from the stack trace, if present
              .replace(msg + '\n', '')
              // strip leading spaces
              .replace(/^ +/gm, '')
              // strip all leading "at " for each frame
              .replace(/^at /gm, '')
              // replace long urls with just the last segment: `filename:line:column`
              .replace(/(?: \(|@)http.+\/([^/)]+)\)?(?:\n|$)/gm, '@$1\n')
              // replace "eval code" in Edge
              .replace(/ *\(eval code(:\d+:\d+)\)(?:\n|$)/gm, '@???$1\n')
        } else {
          line = line || '?';
          col = col || '?';
          stack = url + ':' + line + ':' + col;
        }
        return (msg + '\n' + stack).substr(0, 150);
      }
    };
  </script>

  <script>
    if (window.document.documentMode) {
      // polyfill IE11 in a blocking way
      var s = document.createElement('script');
      s.src = 'generated/ie-polyfills.min.js';
      document.head.appendChild(s);
    } else if (!Object.assign) {
      // polyfill other non-evergreen browsers in a blocking way
      var polyfillUrl = "https://cdn.polyfill.io/v2/polyfill.min.js?features=default,Array.prototype.find&flags=gated&unknown=polyfill";

      // send a blocking XHR to fetch the polyfill
      // then append it to the document so that its eval-ed synchronously
      // this is required because the method used for IE is not reliable with other non-evergreen browsers
      var xhr = new XMLHttpRequest();
      xhr.addEventListener("load", function() {
        var s = document.createElement('script');
        s.type = 'text/javascript';
        var code = this.responseText;
        s.appendChild(document.createTextNode(code));
        document.head.appendChild(s);
      });
      xhr.open("GET", polyfillUrl, false);
      xhr.send();
    }
  </script>

  <script>
    //load CE polyfill
    //HACK: webpack's html plugin mangles the document.write calls if we don't trick it.

    //load the ES5 shim for browsers with native CE support
    function loadCustomElementsShim(){
      document.write('<scri' + 'pt src="assets/js/native-shim.js"><' + '/script>');
    }

    //load the full custom elements polyfill for browsers without support
    function loadCustomElementsPolyfill(){
      document.write('<scri' + 'pt src="assets/js/custom-elements.min.js"><' + '/script>');
    }
    //detect if we have native CE support
    if(!window.customElements){
      loadCustomElementsPolyfill();
    }
    else {
      loadCustomElementsShim();
    }
  </script><script src="./Angular - 英雄编辑器_files/native-shim.js.下载"></script>

<link rel="stylesheet" href="./Angular - 英雄编辑器_files/styles.613b7c8de73e274bd4c6.css"><style>@media screen and (-ms-high-contrast:active){.mat-toolbar{outline:solid 1px}}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media (max-width:599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}</style><style>.mat-button,.mat-flat-button,.mat-icon-button,.mat-stroked-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;overflow:visible}.mat-button[disabled],.mat-flat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner{border:0}.mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{transition:none;opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:1}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-raised-button:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-raised-button[disabled]{box-shadow:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}.mat-flat-button:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-fab::-moz-focus-inner{border:0}.mat-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-fab[disabled]{box-shadow:none}.mat-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}.mat-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-mini-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-mini-fab[disabled]{box-shadow:none}.mat-mini-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}.mat-mini-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button .mat-icon,.mat-icon-button i{line-height:24px}.mat-button-focus-overlay,.mat-button-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-focus-overlay{background-color:rgba(0,0,0,.12);border-radius:inherit;opacity:0;transition:opacity .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1)}@media screen and (-ms-high-contrast:active){.mat-button-focus-overlay{background-color:rgba(255,255,255,.5)}}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}@media screen and (-ms-high-contrast:active){.mat-button,.mat-fab,.mat-flat-button,.mat-icon-button,.mat-mini-fab,.mat-raised-button{outline:solid 1px}}</style><style>.mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1,1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}</style><style>.mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-opened{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:background-color,visibility}@media screen and (-ms-high-contrast:active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%,0,0)}@media screen and (-ms-high-contrast:active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media screen and (-ms-high-contrast:active){.mat-drawer.mat-drawer-end,[dir=rtl] .mat-drawer{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer{transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%,0,0)}.mat-drawer:not(.mat-drawer-side){box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12)}.mat-sidenav-fixed{position:fixed}</style><script charset="utf-8" src="./Angular - 英雄编辑器_files/live-example-live-example-module-ngfactory.76888e8a441aab262101.js.下载"></script><style>.mat-progress-bar{display:block;height:5px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:'';display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2s infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2s infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(.5,0,.70173,.49582);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(.30244,.38135,.55,.95635);transform:translateX(83.67142%)}100%{transform:translateX(200.61106%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(.08)}36.65%{animation-timing-function:cubic-bezier(.33473,.12482,.78584,1);transform:scaleX(.08)}69.15%{animation-timing-function:cubic-bezier(.06,.11,.6,1);transform:scaleX(.66148)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:translateX(37.65191%)}48.35%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:translateX(84.38617%)}100%{transform:translateX(160.27778%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:scaleX(.08)}19.15%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:scaleX(.4571)}44.15%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:scaleX(.72796)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-10px)}}</style><script charset="utf-8" src="./Angular - 英雄编辑器_files/code-code-example-module-ngfactory_code-code-tabs-module-ngfactory.6a5aabadc81dbdfa0f4e.js.下载"></script><script charset="utf-8" src="./Angular - 英雄编辑器_files/code-code-tabs-module-ngfactory.8315a94f020cd25fe92d.js.下载"></script><script charset="utf-8" src="./Angular - 英雄编辑器_files/code-code-example-module-ngfactory.d0ec50584c7428d1d6ed.js.下载"></script><script charset="utf-8" src="./Angular - 英雄编辑器_files/12.50857b4475720140b255.js.下载"></script><style>.mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.mat-tab-label.mat-tab-disabled{cursor:default}.mat-tab-label.mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (max-width:599px){.mat-tab-label{padding:0 12px}}@media (max-width:959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs] .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}</style><style>.mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.mat-tab-label.mat-tab-disabled{cursor:default}.mat-tab-label.mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (max-width:599px){.mat-tab-label{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media screen and (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-header-pagination{position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-tab-labels{display:flex}</style><style>.mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}</style></head>
<body>

  <aio-shell ng-version="6.0.0" class="mode-stable sidenav-open page-tutorial-toh-pt1 folder-tutorial view-SideNav aio-notification-hide "><div id="top-of-page"></div><!----><mat-toolbar class="app-toolbar no-print mat-toolbar mat-primary mat-toolbar-multiple-rows" color="primary"><mat-toolbar-row class="notification-container mat-toolbar-row"><aio-notification actionurl="https://bit.ly/angular-survey-2018" buttontext="Go to survey" expirationdate="2018-01-19" icon="insert_comment" iconlabel="Survey" notificationid="survey-january-2018" class="ng-tns-c2-0 ng-trigger ng-trigger-hideAnimation" style="height: 0px;"><a class="content" href="https://bit.ly/angular-survey-2018"><mat-icon class="icon mat-icon" role="img" aria-hidden="true" aria-label="Survey"><svg fill="#FFFFFF" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M20 2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg></mat-icon><span class="message"> Help Angular by taking a <b>1 minute survey</b>! </span><span class="action-button">Go to survey</span></a><button class="close-button mat-icon-button" aria-label="Close" mat-icon-button=""><span class="mat-button-wrapper"><mat-icon aria-label="Dismiss notification" class="mat-icon ng-tns-c2-0" role="img" svgicon="close" aria-hidden="true"><svg fill="#ffffff" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg></mat-icon></span><div class="mat-button-ripple mat-ripple mat-button-ripple-round" matripple=""></div><div class="mat-button-focus-overlay"></div></button></aio-notification></mat-toolbar-row><mat-toolbar-row class="mat-toolbar-row"><button class="hamburger mat-button" mat-button="" title="Docs menu"><span class="mat-button-wrapper"><mat-icon class="mat-icon" role="img" svgicon="menu" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"></path></svg></mat-icon></span><div class="mat-button-ripple mat-ripple" matripple=""></div><div class="mat-button-focus-overlay"></div></button><a class="nav-link home" href="https://angular.cn/"><!----><img alt="Home" height="40" src="./Angular - 英雄编辑器_files/logo-nav@2x.png" title="Home" width="150" class="ng-star-inserted"><!----></a><!----><aio-top-menu class="ng-star-inserted"><ul role="navigation"><!----><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/features" title="特性">特性</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/docs" title="文档">文档</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/resources" title="资源">资源</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/events" title="会议">会议</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://blog.angular.io/" title="博客">博客</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/translations/cn/home" title="关于中文版">关于中文版</a></li></ul></aio-top-menu><aio-search-box class="search-container"><input aria-label="search" placeholder="搜索" type="search"></aio-search-box></mat-toolbar-row></mat-toolbar><!----><mat-sidenav-container class="sidenav-container mat-drawer-container mat-sidenav-container mat-drawer-transition has-floating-toc" role="main"><!----><div class="mat-drawer-backdrop ng-star-inserted"></div><div tabindex="-1" class="cdk-visually-hidden cdk-focus-trap-anchor"></div><mat-sidenav class="sidenav mat-drawer mat-sidenav ng-tns-c6-1 ng-trigger ng-trigger-transform mat-drawer-side ng-star-inserted" tabindex="-1" style="transform: translate3d(0px, 0px, 0px); visibility: visible;"><!----><aio-nav-menu><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-1 collapsed" href="https://angular.cn/guide/quickstart" title="Angular 破冰"> 快速上手 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-1 expanded selected" type="button" title="此《英雄指南》教程会带你用 TypeScript 一步步创建一个 Angular 应用。" aria-pressed="true"> 教程 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-1 expanded selected"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial" title="第一部分：《英雄指南》教程简介"> 1. 简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt0" title="第二部分：创建应用的外壳"> 2. 应用的“外壳” </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded selected" href="https://angular.cn/tutorial/toh-pt1" title="第三部分：构建一个简单的英雄编辑器"> 3. 英雄编辑器 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/tutorial/toh-pt2" title="第四部分：构建一个主从结构的页面，用于展现英雄列表"> 4. 显示英雄列表 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/tutorial/toh-pt3" title="第五部分：把主从结构的页面重构成多个组件"> 5. 主从组件 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/tutorial/toh-pt4" title="第六部分：创建一个可复用的服务来管理英雄数据"> 6. 服务 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/tutorial/toh-pt5" title="第七部分：添加 Angular 路由器，并且学习在视图之间导航"> 7. 路由 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/tutorial/toh-pt6" title="第八部分：通过 HTTP 来获取并保存英雄数据"> 8. HTTP </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-1 collapsed" type="button" title="学习 Angular 的核心知识" aria-pressed="false"> 核心知识 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-1 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Angular 应用的基本构造块。" aria-pressed="false"> 架构 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/architecture" title="Angular 应用的基本构造块"> 架构概览 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/architecture-modules" title="关于模块。"> 模块（NgModule）简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/architecture-components" title="关于组件、模板和视图。"> 组件简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/architecture-services" title="关于服务与依赖注入。"> 服务与 DI 简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/architecture-next-steps" title="学完基础知识之后……"> 后续步骤 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="使用数据绑定构建动态视图" aria-pressed="false"> 组件与模板 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/displaying-data" title="属性绑定可以帮助应用把数据显示在界面上"> 显示数据 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/template-syntax" title="学习如何写模板，以便借助数据绑定机制显示数据并响应事件。"> 模板语法 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/lifecycle-hooks" title="Angular 调用指令和组件的生命周期钩子函数，包括它的创建、变更和销毁时。"> 生命周期钩子 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/component-interaction" title="在不同的指令和组件之间共享信息"> 组件交互 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/component-styles" title="添加专属于某个组件的样式"> 组件样式 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/elements" title="把组件转换成自定义元素。"> Angular 自定义元素 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dynamic-component-loader" title="动态加载组件"> 动态组件 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/attribute-directives" title="属性型指令把行为添加到现有元素上。"> 属性型指令 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/structural-directives" title="结构型指令可以操纵页面的布局"> 结构型指令 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/pipes" title="管道可以在模板中转换显示的内容。"> 管道 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/animations" title="Angular 动画体系指南"> 动画 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Angular 的表单" aria-pressed="false"> 表单 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/user-input" title="用户输入触发 DOM 事件。我们通过事件绑定来监听它们，把更新过的数据导入回我们的组件和 model。"> 用户输入 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/forms" title="表单可以创建集中、高效、引人注目的输入体验。Angular 表单可以协调一组数据绑定控件，跟踪变更，验证输入，并表达错误信息。"> 模板驱动表单 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/form-validation" title="验证用户的表单输入"> 表单验证 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/reactive-forms" title="使用 FormBuilder 、分组和数组创建响应式表单。"> 响应式表单 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dynamic-form" title="使用FormGroup渲染动态表单"> 动态表单 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Observable 与 RxJS" aria-pressed="false"> Observable 与 RxJS <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/observables" title=""> 可观察对象(Observable) </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/rx-library" title=""> RxJS 库 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/observables-in-angular" title=""> Angular 中的可观察对象 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/practical-observable-usage" title=""> 用法实战 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/comparing-observables" title=""> 与其它技术的比较 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/bootstrapping" title="在应用的根模块（AppModule）中告诉 Angular 如何构造并引导引用。"> 引导启动 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Angular 中的模块" aria-pressed="false"> Angular 模块 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ngmodules" title="使用 NgModule 让你的应用更高效"> NgModule 简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ngmodule-vs-jsmodule" title="JavaScript 模块和 NgModule 之间的差异"> JS 模块 vs NgModule </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/frequent-ngmodules" title="介绍最常用的 Angular 模块"> 常用模块 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/module-types" title="介绍特性模块的几种类型"> 特性模块的分类 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/entry-components" title="关于 Angular 中入口组件的一切"> 入口组件 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/feature-modules" title="创建特性模块，以组织你的代码"> 特性模块 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/providers" title="服务提供商与 Angular 模块"> 服务提供商 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/singleton-services" title="创建单例应用"> 单例应用 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/lazy-loading-ngmodules" title="惰性加载模块，以提高应用的性能"> 惰性加载的特性模块 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/sharing-ngmodules" title="共享 Angular 模块让你的应用现代化。"> 共享 Angular 模块 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ngmodule-api" title="理解 NgModule 的那些细节。"> NgModule API </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ngmodule-faq" title="回答关于 NgModules 的常见问题。"> NgModule 常见问题 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="依赖注入：创建并注入各种服务。" aria-pressed="false"> 依赖注入 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dependency-injection-pattern" title="学习 Angular 依赖注入系统背后的依赖注入模式"> 依赖注入模式 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dependency-injection" title="Angular 的依赖注入系统能够为 Angular 创建的类创建并交付它们所依赖的服务。"> Angular 依赖注入 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/hierarchical-dependency-injection" title="Angular 的多级注入体系会建立与组件平行的注入器树。"> 多级注入器 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dependency-injection-in-action" title="依赖注入的使用技巧"> DI 实用技巧 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/http" title="通过 HTTP 协议与远程服务器对话。"> HttpClient </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/router" title="揭示如何通过 Angular 路由进行基本的屏幕导航。"> 路由与导航 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/testing" title="测试 Angular 应用的技巧与实践。"> 测试 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/cheatsheet" title="关于 Angular 常用编码技术的快速指南。"> 速查表 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-1 collapsed" type="button" title="把 Angular 用到你的实际工作中的一些技巧" aria-pressed="false"> 其它技术 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-1 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/i18n" title="把应用模板中的文本翻译成多种语言。"> 国际化 (i18n) </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/language-service" title="使用 Angular 语言服务来为开发提速。"> 语言服务 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/security" title="Angular 应用开发中的安全技术。"> 安全 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="环境准备与部署" aria-pressed="false"> 环境准备与部署 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/setup" title="在你自己的机器上安装 Angular QuickStart 种子，以便更快、更高效的开发。"> 搭建本地开发环境 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/setup-systemjs-anatomy" title="基于 SystemJS 的本地开发环境内幕。"> 搭建方式剖析 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/browser-support" title="浏览器支持与 Polyfills 指南"> 浏览器支持 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/npm-packages" title="建议的 npm 包，以及如何指定包的依赖。"> npm 包 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/typescript-configuration" title="给 Angular 开发者的 TypeScript 配置。"> TypeScript 配置 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/aot-compiler" title="学习如何使用 AOT 预编译器。"> 预先（AOT）编译 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/deployment" title="学习如何部署你的 Angular 应用。"> 部署 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/custom-elements" title="把 Angular 组件用作自定义元素。"> 自定义元素 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Angular 的 Service Worker：控制应用的资源缓存。" aria-pressed="false"> Service Worker <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-intro" title="Angular 对 Service Worker 的实现提升了慢速或不稳定的网络连接下的用户体验。"> 简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-getting-started" title="在 CLI 项目中启用 Service Worker，并在浏览器中查看效果。"> 快速起步 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-communications" title="那些能让你和 Angular 的 Service Worker 通讯的服务类。"> 与 Service Worker 通讯 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-devops" title="使用 Service Worker 运行应用、管理应用更新、调试以及杀掉正在运行的应用。"> 生产环境下的 Service Worker </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-config" title="配置 Service Worker 的缓存行为。"> Service Worker 配置 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Angular 的发布实践，更新计划以及与更新有关的资源。" aria-pressed="false"> 保持最新 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/updating" title="关于如何把 Angular 应用升级到最新版的信息。"> 更新你的项目 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/releases" title="Angular 的版本、发布、支持与弃用策略。"> Angular 的版本发布 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="把 AngularJS 应用增量式的升级到 Angular。" aria-pressed="false"> 从 AngularJS 升级 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/upgrade" title="把 AngularJS 应用增量式的升级到 Angular。"> 升级步骤 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ajs-quick-reference" title="学习如何把 AngularJS 的概念映射到 Angular 中。"> AngularJS 与 Angular 的概念对照 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/universal" title="使用 Angular Universal 在服务端渲染 HTML。">  服务端渲染 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/visual-studio-2015" title="在 Visual Studio 2015 中使用快速起步中的文件"> Visual Studio 2015 快速上手 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/styleguide" title="写出 Angular 风格的程序"> 风格指南 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/glossary" title="Angular 中最重要的词汇的简要定义。"> 词汇表 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-1 collapsed" href="https://angular.cn/api" title="关于 Angular 中类和值的详细信息。"> API 参考手册 </a></div><!----></aio-nav-item></aio-nav-menu><div class="doc-version"><aio-select><div class="form-select-menu"><button class="form-select-button"><strong></strong><!---->stable (v6.0.0) </button><!----></div></aio-select></div></mat-sidenav><div tabindex="-1" class="cdk-visually-hidden cdk-focus-trap-anchor"></div><!----><mat-sidenav-content cdkscrollable="" class="mat-drawer-content mat-sidenav-content ng-star-inserted" style="margin-left: 262px; margin-right: 0px;"><section class="sidenav-content" role="content" id="tutorial-toh-pt1"><aio-mode-banner><!----></aio-mode-banner><aio-doc-viewer class=""><div style="opacity: 1; transition: all 200ms ease-in-out;">
<div class="content">
<h1 translation-result="" id="the-hero-editor">英雄编辑器<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/tutorial/toh-pt1#the-hero-editor"><i class="material-icons">link</i></a></h1><aio-toc class="embedded"></aio-toc><h1 translation-origin="off" id="the-hero-editor">The Hero Editor<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/tutorial/toh-pt1#the-hero-editor"><i class="material-icons">link</i></a></h1>

<p translation-result="">应用程序现在有了基本的标题。
接下来你要创建一个新的组件来显示英雄信息并且把这个组件放到应用程序的外壳里去。</p><p translation-origin="off">The application now has a basic title.
Next you will create a new component to display hero information
and place that component in the application shell.</p>

<h2 translation-result="" id="create-the-heroes-component">创建英雄列表组件<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/tutorial/toh-pt1#create-the-heroes-component"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="create-the-heroes-component">Create the heroes component<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/tutorial/toh-pt1#create-the-heroes-component"><i class="material-icons">link</i></a></h2>

<p translation-result="">使用 Angular CLI 创建一个名为 <code>heroes</code> 的新组件。</p><p translation-origin="off">Using the Angular CLI, generate a new component named <code>heroes</code>.</p>

<code-example language="sh" class="code-shell" ng-version="6.0.0"><div style="display: none">
  ng generate component heroes
</div><!----><aio-code><pre class="prettyprint lang-sh">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="pln">ng generate component heroes</span></code>
    </pre></aio-code></code-example>
<p translation-result="">CLI 创建了一个新的文件夹 <code>src/app/heroes/</code>，并生成了 <code>HeroesComponent</code> 的三个文件。</p><p translation-origin="off">The CLI creates a new folder, <code>src/app/heroes/</code> and generates
the three files of the  <code>HeroesComponent</code>.</p>

<p translation-result=""><code>HeroesComponent</code> 的类文件如下：</p><p translation-origin="off">The <code>HeroesComponent</code> class file is as follows:</p>

<code-example path="toh-pt1/src/app/heroes/heroes.component.ts" region="v1" title="app/heroes/heroes.component.ts (initial version)" linenums="false" ng-version="6.0.0"><div style="display: none">
import { <a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a>, <a href="https://angular.cn/api/core/OnInit" class="code-anchor">OnInit</a> } from '@angular/core';

@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a>({
  selector: 'app-heroes',
  templateUrl: './heroes.component.html',
  styleUrls: ['./heroes.component.css']
})
export class HeroesComponent implements <a href="https://angular.cn/api/core/OnInit" class="code-anchor">OnInit</a> {

  constructor() { }

  ngOnInit() {
  }

}

</div><!----><header class="ng-star-inserted">app/heroes/heroes.component.ts (initial version)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from app/heroes/heroes.component.ts (initial version)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><a href="https://angular.cn/api/core/Component" class="code-anchor"><span class="typ">Component</span></a><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/core/OnInit" class="code-anchor"><span class="typ">OnInit</span></a><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'@angular/core'</span><span class="pun">;</span><span class="pln">

</span><span class="lit">@</span><a href="https://angular.cn/api/core/Component" class="code-anchor"><span class="lit">Component</span></a><span class="pun">({</span><span class="pln">
  selector</span><span class="pun">:</span><span class="pln"> </span><span class="str">'app-heroes'</span><span class="pun">,</span><span class="pln">
  templateUrl</span><span class="pun">:</span><span class="pln"> </span><span class="str">'./heroes.component.html'</span><span class="pun">,</span><span class="pln">
  styleUrls</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="str">'./heroes.component.css'</span><span class="pun">]</span><span class="pln">
</span><span class="pun">})</span><span class="pln">
</span><span class="kwd">export</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">HeroesComponent</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><a href="https://angular.cn/api/core/OnInit" class="code-anchor"><span class="typ">OnInit</span></a><span class="pln"> </span><span class="pun">{</span><span class="pln">

  </span><span class="kwd">constructor</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="pun">}</span><span class="pln">

  ngOnInit</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

</span><span class="pun">}</span></code>
    </pre></aio-code></code-example>
<p translation-result="">你要从 Angular 核心库中导入 <code><a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a></code> 符号，并为组件类加上 <code>@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a></code> 装饰器。</p><p translation-origin="off">You always import the <code><a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a></code> symbol from the Angular core library
and annotate the component class with <code>@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a></code>.</p>

<p translation-result=""><code>@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a></code> 是个装饰器函数，用于为该组件指定 Angular 所需的元数据。</p><p translation-origin="off"><code>@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a></code> is a decorator function that specifies the Angular metadata for the component.</p>

<p translation-result="">CLI 自动生成了三个元数据属性：</p><p translation-origin="off">The CLI generated three metadata properties:</p>

<ol>
<li>
<p translation-result=""><code>selector</code>— 组件的选择器（CSS 元素选择器）</p><p translation-origin="off"><code>selector</code>— the component's CSS element selector</p>

</li>
<li>
<p translation-result=""><code>templateUrl</code>— 组件模板文件的位置。</p><p translation-origin="off"><code>templateUrl</code>— the location of the component's template file.</p>

</li>
<li>
<p translation-result=""><code>styleUrls</code>— 组件私有 CSS 样式表文件的位置。</p><p translation-origin="off"><code>styleUrls</code>— the location of the component's private CSS styles.</p>

</li>
</ol>
<a id="selector"></a>
<p translation-result=""><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Type_selectors">CSS 元素选择器</a> <code>app-heroes</code> 用来在父组件的模板中匹配 HTML 元素的名称，以识别出该组件。</p><p translation-origin="off">The <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Type_selectors">CSS element selector</a>,
<code>'app-heroes'</code>, matches the name of the HTML element that identifies this component within a parent component's template.</p>

<p translation-result=""><code>ngOnInit</code> 是一个<a href="https://angular.cn/guide/lifecycle-hooks#oninit">生命周期钩子</a>，Angular 在创建完组件后很快就会调用 <code>ngOnInit</code>。这里是放置初始化逻辑的好地方。</p><p translation-origin="off">The <code>ngOnInit</code> is a <a href="https://angular.cn/guide/lifecycle-hooks#oninit">lifecycle hook</a>
Angular calls <code>ngOnInit</code> shortly after creating a component.
It's a good place to put initialization logic.</p>

<p translation-result="">始终要 <code>export</code> 这个组件类，以便在其它地方（比如 <code>AppModule</code>）导入它。</p><p translation-origin="off">Always <code>export</code> the component class so you can <code>import</code> it elsewhere ... like in the <code>AppModule</code>.</p>

<h3 translation-result="" id="add-a-emheroem-property">添加 <code>hero</code> 属性<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/tutorial/toh-pt1#add-a-emheroem-property"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="add-a-hero-property">Add a <em>hero</em> property<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/tutorial/toh-pt1#add-a-hero-property"><i class="material-icons">link</i></a></h3>

<p translation-result="">往 <code>HeroesComponent</code> 中添加一个 <code>hero</code> 属性，用来表示一个名叫 “Windstorm” 的英雄。</p><p translation-origin="off">Add a <code>hero</code> property to the <code>HeroesComponent</code> for a hero named "Windstorm."</p>

<code-example path="toh-pt1/src/app/heroes/heroes.component.ts" region="add-hero" title="heroes.component.ts (hero property)" linenums="false" ng-version="6.0.0"><div style="display: none">
hero = 'Windstorm';

</div><!----><header class="ng-star-inserted">heroes.component.ts (hero property)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from heroes.component.ts (hero property)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="pln">hero </span><span class="pun">=</span><span class="pln"> </span><span class="str">'Windstorm'</span><span class="pun">;</span></code>
    </pre></aio-code></code-example>
<h3 translation-result="" id="show-the-hero">显示英雄<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/tutorial/toh-pt1#show-the-hero"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="show-the-hero">Show the hero<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/tutorial/toh-pt1#show-the-hero"><i class="material-icons">link</i></a></h3>

<p translation-result="">打开模板文件 <code>heroes.component.html</code>。删除 Angular CLI 自动生成的默认内容，改为到 <code>hero</code> 属性的数据绑定。</p><p translation-origin="off">Open the <code>heroes.component.html</code> template file.
Delete the default text generated by the Angular CLI and
replace it with a data binding to the new <code>hero</code> property.  </p>

<code-example path="toh-pt1/src/app/heroes/heroes.component.1.html" title="heroes.component.html" region="show-hero-1" linenums="false" ng-version="6.0.0"><div style="display: none">
{{hero}}

</div><!----><header class="ng-star-inserted">heroes.component.html</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from heroes.component.html">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="pun">{{</span><span class="pln">hero</span><span class="pun">}}</span></code>
    </pre></aio-code></code-example>
<h2 translation-result="" id="show-the-emheroescomponentem-view">显示 <code>HeroesComponent</code> 视图<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/tutorial/toh-pt1#show-the-emheroescomponentem-view"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="show-the-heroescomponent-view">Show the <em>HeroesComponent</em> view<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/tutorial/toh-pt1#show-the-heroescomponent-view"><i class="material-icons">link</i></a></h2>

<p translation-result="">要显示 <code>HeroesComponent</code> 你必须把它加到壳组件 <code>AppComponent</code> 的模板中。</p><p translation-origin="off">To display the <code>HeroesComponent</code>, you must add it to the template of the shell <code>AppComponent</code>.</p>

<p translation-result="">别忘了，<code>app-heroes</code> 就是 <code>HeroesComponent</code> 的 <a href="https://angular.cn/tutorial/toh-pt1#selector">元素选择器</a>。
所以，只要把 <code>&lt;app-heroes&gt;</code> 元素添加到 <code>AppComponent</code> 的模板文件中就可以了，就放在标题下方。</p><p translation-origin="off">Remember that <code>app-heroes</code> is the <a href="https://angular.cn/tutorial/toh-pt1#selector">element selector</a> for the <code>HeroesComponent</code>.
So add an <code>&lt;app-heroes&gt;</code> element to the <code>AppComponent</code> template file, just below the title.</p>

<code-example path="toh-pt1/src/app/app.component.html" title="src/app/app.component.html" linenums="false" ng-version="6.0.0"><div style="display: none">
&lt;h1&gt;{{title}}&lt;/h1&gt;
&lt;app-heroes&gt;&lt;/app-heroes&gt;


</div><!----><header class="ng-star-inserted">src/app/app.component.html</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/app.component.html">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="tag">&lt;h1&gt;</span><span class="pln">{{title}}</span><span class="tag">&lt;/h1&gt;</span><span class="pln">
</span><span class="tag">&lt;app-heroes&gt;&lt;/app-heroes&gt;</span></code>
    </pre></aio-code></code-example>
<p translation-result="">如果 CLI 的 <code>ng serve</code> 命令仍在运行，浏览器就会自动刷新，并且同时显示出应用的标题和英雄的名字。</p><p translation-origin="off">Assuming that the CLI <code>ng serve</code> command is still running,
the browser should refresh and display both the application title and the hero name.</p>

<h2 translation-result="" id="create-a-hero-class">创建 <code>Hero</code> 类<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/tutorial/toh-pt1#create-a-hero-class"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="create-a-hero-class">Create a Hero class<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/tutorial/toh-pt1#create-a-hero-class"><i class="material-icons">link</i></a></h2>

<p translation-result="">真实的英雄当然不止一个名字。</p><p translation-origin="off">A real hero is more than a name.</p>

<p translation-result="">在 <code>src/app</code> 文件夹中为 <code>Hero</code> 类创建一个文件，并添加 <code>id</code> 和 <code>name</code> 属性。</p><p translation-origin="off">Create a <code>Hero</code> class in its own file in the <code>src/app</code> folder.
Give it <code>id</code> and <code>name</code> properties.</p>

<code-example path="toh-pt1/src/app/hero.ts" title="src/app/hero.ts" linenums="false" ng-version="6.0.0"><div style="display: none">
export class Hero {
  id: number;
  name: string;
}


</div><!----><header class="ng-star-inserted">src/app/hero.ts</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/hero.ts">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="kwd">export</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Hero</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  id</span><span class="pun">:</span><span class="pln"> number</span><span class="pun">;</span><span class="pln">
  name</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">string</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></code>
    </pre></aio-code></code-example>
<p translation-result="">回到 <code>HeroesComponent</code> 类，并且导入这个 <code>Hero</code> 类。</p><p translation-origin="off">Return to the <code>HeroesComponent</code> class and import the <code>Hero</code> class.</p>

<p translation-result="">把组件的 <code>hero</code> 属性的类型重构为 <code>Hero</code>。
然后以 <code>1</code> 为 <code>id</code>、以 “Windstorm” 为名字初始化它。</p><p translation-origin="off">Refactor the component's <code>hero</code> property to be of type <code>Hero</code>.
Initialize it with an <code>id</code> of <code>1</code> and the name <code>Windstorm</code>.</p>

<p translation-result="">修改后的 <code>HeroesComponent</code> 类应该是这样的：</p><p translation-origin="off">The revised <code>HeroesComponent</code> class file should look like this:</p>

<code-example path="toh-pt1/src/app/heroes/heroes.component.ts" linenums="false" title="src/app/heroes/heroes.component.ts" ng-version="6.0.0"><div style="display: none">
import { <a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a>, <a href="https://angular.cn/api/core/OnInit" class="code-anchor">OnInit</a> } from '@angular/core';
import { Hero } from '../hero';

@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a>({
  selector: 'app-heroes',
  templateUrl: './heroes.component.html',
  styleUrls: ['./heroes.component.css']
})
export class HeroesComponent implements <a href="https://angular.cn/api/core/OnInit" class="code-anchor">OnInit</a> {
  hero: Hero = {
    id: 1,
    name: 'Windstorm'
  };

  constructor() { }

  ngOnInit() {
  }

}

</div><!----><header class="ng-star-inserted">src/app/heroes/heroes.component.ts</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/heroes/heroes.component.ts">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><a href="https://angular.cn/api/core/Component" class="code-anchor"><span class="typ">Component</span></a><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/core/OnInit" class="code-anchor"><span class="typ">OnInit</span></a><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'@angular/core'</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="typ">Hero</span><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'../hero'</span><span class="pun">;</span><span class="pln">

</span><span class="lit">@</span><a href="https://angular.cn/api/core/Component" class="code-anchor"><span class="lit">Component</span></a><span class="pun">({</span><span class="pln">
  selector</span><span class="pun">:</span><span class="pln"> </span><span class="str">'app-heroes'</span><span class="pun">,</span><span class="pln">
  templateUrl</span><span class="pun">:</span><span class="pln"> </span><span class="str">'./heroes.component.html'</span><span class="pun">,</span><span class="pln">
  styleUrls</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="str">'./heroes.component.css'</span><span class="pun">]</span><span class="pln">
</span><span class="pun">})</span><span class="pln">
</span><span class="kwd">export</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">HeroesComponent</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><a href="https://angular.cn/api/core/OnInit" class="code-anchor"><span class="typ">OnInit</span></a><span class="pln"> </span><span class="pun">{</span><span class="pln">
  hero</span><span class="pun">:</span><span class="pln"> </span><span class="typ">Hero</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    id</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln">
    name</span><span class="pun">:</span><span class="pln"> </span><span class="str">'Windstorm'</span><span class="pln">
  </span><span class="pun">};</span><span class="pln">

  </span><span class="kwd">constructor</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="pun">}</span><span class="pln">

  ngOnInit</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

</span><span class="pun">}</span></code>
    </pre></aio-code></code-example>
<p translation-result="">页面显示变得不正常了，因为你刚刚把 <code>hero</code> 从字符串改成了对象。</p><p translation-origin="off">The page no longer displays properly because you changed the hero from a string to an object.</p>

<h2 translation-result="" id="show-the-hero-object">显示 <code>hero</code> 对象<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/tutorial/toh-pt1#show-the-hero-object"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="show-the-hero-object">Show the hero object<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/tutorial/toh-pt1#show-the-hero-object"><i class="material-icons">link</i></a></h2>

<p translation-result="">修改模板中的绑定，以显示英雄的名字，并在详情中显示 <code>id</code> 和 <code>name</code>，就像这样：</p><p translation-origin="off">Update the binding in the template to announce the hero's name
and show both <code>id</code> and <code>name</code> in a details layout like this:</p>

<code-example path="toh-pt1/src/app/heroes/heroes.component.1.html" region="show-hero-2" title="heroes.component.html (HeroesComponent&#39;s template)" linenums="false" ng-version="6.0.0"><div style="display: none">
&lt;h2&gt;{{ hero.name }} Details&lt;/h2&gt;
&lt;div&gt;&lt;span&gt;id: &lt;/span&gt;{{hero.id}}&lt;/div&gt;
&lt;div&gt;&lt;span&gt;name: &lt;/span&gt;{{hero.name}}&lt;/div&gt;

</div><!----><header class="ng-star-inserted">heroes.component.html (HeroesComponent's template)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from heroes.component.html (HeroesComponent&#39;s template)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="tag">&lt;h2&gt;</span><span class="pln">{{ hero.name }} Details</span><span class="tag">&lt;/h2&gt;</span><span class="pln">
</span><span class="tag">&lt;div&gt;&lt;span&gt;</span><span class="pln">id: </span><span class="tag">&lt;/span&gt;</span><span class="pln">{{hero.id}}</span><span class="tag">&lt;/div&gt;</span><span class="pln">
</span><span class="tag">&lt;div&gt;&lt;span&gt;</span><span class="pln">name: </span><span class="tag">&lt;/span&gt;</span><span class="pln">{{hero.name}}</span><span class="tag">&lt;/div&gt;</span></code>
    </pre></aio-code></code-example>
<p translation-result="">浏览器自动刷新，并显示这位英雄的信息。</p><p translation-origin="off">The browser refreshes and display's the hero's information.</p>

<h2 translation-result="" id="format-with-the-emuppercasepipeem">使用 <code>UppercasePipe</code> 进行格式化<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/tutorial/toh-pt1#format-with-the-emuppercasepipeem"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="format-with-the-uppercasepipe">Format with the <em>UppercasePipe</em><a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/tutorial/toh-pt1#format-with-the-uppercasepipe"><i class="material-icons">link</i></a></h2>

<p translation-result="">把 <code>hero.name</code> 的绑定修改成这样：</p><p translation-origin="off">Modify the <code>hero.name</code> binding like this.</p>

<code-example path="toh-pt1/src/app/heroes/heroes.component.html" region="pipe" ng-version="6.0.0"><div style="display: none">
&lt;h2&gt;{{ hero.name | <a href="https://angular.cn/api/common/UpperCasePipe" class="code-anchor">uppercase</a> }} Details&lt;/h2&gt;

</div><!----><aio-code><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="tag">&lt;h2&gt;</span><span class="pln">{{ hero.name | </span><a href="https://angular.cn/api/common/UpperCasePipe" class="code-anchor"><span class="pln">uppercase</span></a><span class="pln"> }} Details</span><span class="tag">&lt;/h2&gt;</span></code>
    </pre></aio-code></code-example>
<p translation-result="">浏览器刷新了。现在，英雄的名字显示成了大写字母。</p><p translation-origin="off">The browser refreshes and now the hero's name is displayed in capital letters.</p>

<p translation-result="">绑定表达式中的 <code><a href="https://angular.cn/api/common/UpperCasePipe" class="code-anchor">uppercase</a></code> 位于管道操作符（ | ）的右边，用来调用内置管道 <code>UppercasePipe</code>。</p><p translation-origin="off">The word <code><a href="https://angular.cn/api/common/UpperCasePipe" class="code-anchor">uppercase</a></code> in the interpolation binding,
right after the pipe operator ( | ),
activates the built-in <code>UppercasePipe</code>.</p>

<p translation-result=""><a href="https://angular.cn/guide/pipes">管道</a> 是格式化字符串、金额、日期和其它显示数据的好办法。
Angular 发布了一些内置管道，而且你还可以创建自己的管道。</p><p translation-origin="off"><a href="https://angular.cn/guide/pipes">Pipes</a> are a good way to format strings, currency amounts, dates and other display data.
Angular ships with several built-in pipes and you can create your own.</p>

<h2 translation-result="" id="edit-the-hero">编辑英雄名字<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/tutorial/toh-pt1#edit-the-hero"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="edit-the-hero">Edit the hero<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/tutorial/toh-pt1#edit-the-hero"><i class="material-icons">link</i></a></h2>

<p translation-result="">用户应该能在一个 <code>&lt;input&gt;</code> 输入框中编辑英雄的名字。</p><p translation-origin="off">Users should be able to edit the hero name in an <code>&lt;input&gt;</code> textbox.</p>

<p translation-result="">当用户输入时，这个输入框应该能同时<em>显示</em>和<em>修改</em>英雄的 <code>name</code> 属性。
也就是说，数据流从组件类<strong>流出到屏幕</strong>，并且从屏幕<strong>流回到组件类</strong>。</p><p translation-origin="off">The textbox should both <em>display</em> the hero's <code>name</code> property
and <em>update</em> that property as the user types.
That means data flow from the component class <em>out to the screen</em> and
from the screen <em>back to the class</em>.</p>

<p translation-result="">要想让这种数据流动自动化，就要在表单元素 <code>&lt;input&gt;</code> 和组件的 <code>hero.name</code> 属性之间建立双向数据绑定。</p><p translation-origin="off">To automate that data flow, setup a two-way data binding between the <code>&lt;input&gt;</code> form element and the <code>hero.name</code> property.</p>

<h3 translation-result="" id="two-way-binding">双向绑定<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/tutorial/toh-pt1#two-way-binding"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="two-way-binding">Two-way binding<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/tutorial/toh-pt1#two-way-binding"><i class="material-icons">link</i></a></h3>

<p translation-result="">把模板中的英雄名字重构成这样：</p><p translation-origin="off">Refactor the details area in the <code>HeroesComponent</code> template so it looks like this:</p>

<code-example path="toh-pt1/src/app/heroes/heroes.component.1.html" region="name-input" title="src/app/heroes/heroes.component.html (HeroesComponent&#39;s template)" linenums="false" ng-version="6.0.0"><div style="display: none">
&lt;div&gt;
    &lt;label&gt;name:
      &lt;input [(<a href="https://angular.cn/api/forms/NgModel" class="code-anchor">ngModel</a>)]="hero.name" placeholder="name"&gt;
    &lt;/label&gt;
&lt;/div&gt;

</div><!----><header class="ng-star-inserted">src/app/heroes/heroes.component.html (HeroesComponent's template)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/heroes/heroes.component.html (HeroesComponent&#39;s template)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="tag">&lt;div&gt;</span><span class="pln">
    </span><span class="tag">&lt;label&gt;</span><span class="pln">name:
      </span><span class="tag">&lt;input</span><span class="pln"> [(</span><a href="https://angular.cn/api/forms/NgModel" class="code-anchor"><span class="atn">ngModel</span></a><span class="pln">)]</span><span class="pun">=</span><span class="atv">"hero.name"</span><span class="pln"> </span><span class="atn">placeholder</span><span class="pun">=</span><span class="atv">"name"</span><span class="tag">&gt;</span><span class="pln">
    </span><span class="tag">&lt;/label&gt;</span><span class="pln">
</span><span class="tag">&lt;/div&gt;</span></code>
    </pre></aio-code></code-example>
<p translation-result=""><strong>[(ngModel)]</strong> 是 Angular 的双向数据绑定语法。</p><p translation-origin="off"><strong>[(ngModel)]</strong> is Angular's two-way data binding syntax. </p>

<p translation-result="">这里把 <code>hero.name</code> 属性绑定到了 HTML 的 textbox 元素上，以便数据流可以<strong>双向流动</strong>：从 <code>hero.name</code> 属性流动到 textbox，并且从 textbox 流回到 <code>hero.name</code> 。</p><p translation-origin="off">Here it binds the <code>hero.name</code> property to the HTML textbox so that data can flow <em>in both directions:</em> from the <code>hero.name</code> property to the textbox, and from the textbox back to the <code>hero.name</code>.</p>

<h3 translation-result="" id="the-missing-emformsmoduleem">缺少 <code><a href="https://angular.cn/api/forms/FormsModule" class="code-anchor">FormsModule</a></code><a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/tutorial/toh-pt1#the-missing-emformsmoduleem"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="the-missing-formsmodule">The missing <em>FormsModule</em><a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/tutorial/toh-pt1#the-missing-formsmodule"><i class="material-icons">link</i></a></h3>

<p translation-result="">注意，当你加上 <code>[(<a href="https://angular.cn/api/forms/NgModel" class="code-anchor">ngModel</a>)]</code> 之后这个应用无法工作了。</p><p translation-origin="off">Notice that the app stopped working when you added <code>[(<a href="https://angular.cn/api/forms/NgModel" class="code-anchor">ngModel</a>)]</code>.</p>

<p translation-result="">打开浏览器的开发工具，就会在控制台中看到如下信息：</p><p translation-origin="off">To see the error, open the browser development tools and look in the console
for a message like</p>

<code-example language="sh" class="code-shell" ng-version="6.0.0"><div style="display: none">
Template parse errors:
Can't bind to '<a href="https://angular.cn/api/forms/NgModel" class="code-anchor">ngModel</a>' since it isn't <a href="https://angular.cn/api/router/RouterLinkWithHref" class="code-anchor">a</a> known property of 'input'.
</div><!----><aio-code><pre class="prettyprint lang-sh">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="typ">Template</span><span class="pln"> parse errors</span><span class="pun">:</span><span class="pln">
</span><span class="typ">Can</span><span class="str">'t bind to '</span><a href="https://angular.cn/api/forms/NgModel" class="code-anchor"><span class="pln">ngModel</span></a><span class="str">' since it isn'</span><span class="pln">t </span><a href="https://angular.cn/api/router/RouterLinkWithHref" class="code-anchor"><span class="pln">a</span></a><span class="pln"> known property of </span><span class="str">'input'</span><span class="pun">.</span></code>
    </pre></aio-code></code-example>
<p translation-result="">虽然 <code><a href="https://angular.cn/api/forms/NgModel" class="code-anchor">ngModel</a></code> 是一个有效的 Angular 指令，不过它在默认情况下是不可用的。</p><p translation-origin="off">Although <code><a href="https://angular.cn/api/forms/NgModel" class="code-anchor">ngModel</a></code> is a valid Angular directive, it isn't available by default. </p>

<p translation-result="">它属于一个可选模块 <code><a href="https://angular.cn/api/forms/FormsModule" class="code-anchor">FormsModule</a></code>，你必须自行添加此模块才能使用该指令。</p><p translation-origin="off">It belongs to the optional <code><a href="https://angular.cn/api/forms/FormsModule" class="code-anchor">FormsModule</a></code> and you must <em>opt-in</em> to using it.</p>

<h2 translation-origin="off" id="appmodule"><em>AppModule</em><a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/tutorial/toh-pt1#appmodule"><i class="material-icons">link</i></a></h2>
<p translation-result="">Angular 需要知道如何把应用程序的各个部分组合到一起，以及该应用需要哪些其它文件和库。
这些信息被称为<em>元数据（metadata）</em>。</p><p translation-origin="off">Angular needs to know how the pieces of your application fit together
and what other files and libraries the app requires.
This information is called <em>metadata</em></p>

<p translation-result="">有些元数据位于 <code>@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a></code> 装饰器中，你会把它加到组件类上。
另一些关键性的元数据位于 <a href="https://angular.cn/guide/ngmodules"><code>@NgModule</code></a> 装饰器中。</p><p translation-origin="off">Some of the metadata is in the <code>@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a></code> decorators that you added to your component classes.
Other critical metadata is in <a href="https://angular.cn/guide/ngmodules"><code>@NgModule</code></a> decorators.</p>

<p translation-result="">最重要的 <code>@<a href="https://angular.cn/api/core/NgModule" class="code-anchor">NgModule</a></code> 装饰器位于顶级类 <strong>AppModule</strong> 上。</p><p translation-origin="off">The most important <code>@<a href="https://angular.cn/api/core/NgModule" class="code-anchor">NgModule</a></code>decorator annotates the top-level <strong>AppModule</strong> class.</p>

<p translation-result="">Angular CLI 在创建项目的时候就在 <code>src/app/app.module.ts</code> 中生成了一个 <code>AppModule</code> 类。
这里也就是你要添加 <code><a href="https://angular.cn/api/forms/FormsModule" class="code-anchor">FormsModule</a></code> 的地方。</p><p translation-origin="off">The Angular CLI generated an <code>AppModule</code> class in <code>src/app/app.module.ts</code> when it created the project.
This is where you <em>opt-in</em> to the <code><a href="https://angular.cn/api/forms/FormsModule" class="code-anchor">FormsModule</a></code>.</p>

<h3 translation-result="" id="import-emformsmoduleem">导入 <code><a href="https://angular.cn/api/forms/FormsModule" class="code-anchor">FormsModule</a></code><a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/tutorial/toh-pt1#import-emformsmoduleem"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="import-formsmodule">Import <em>FormsModule</em><a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/tutorial/toh-pt1#import-formsmodule"><i class="material-icons">link</i></a></h3>

<p translation-result="">打开 <code>AppModule</code> (<code>app.module.ts</code>) 并从 <code>@angular/forms</code> 库中导入 <code><a href="https://angular.cn/api/forms/FormsModule" class="code-anchor">FormsModule</a></code> 符号。</p><p translation-origin="off">Open <code>AppModule</code> (<code>app.module.ts</code>) and import the <code><a href="https://angular.cn/api/forms/FormsModule" class="code-anchor">FormsModule</a></code> symbol from the <code>@angular/forms</code> library. </p>

<code-example path="toh-pt1/src/app/app.module.ts" title="app.module.ts (FormsModule symbol import)" region="formsmodule-js-import" ng-version="6.0.0"><div style="display: none">
import { <a href="https://angular.cn/api/forms/FormsModule" class="code-anchor">FormsModule</a> } from '@angular/forms'; // &lt;-- <a href="https://angular.cn/api/forms/NgModel" class="code-anchor">NgModel</a> lives here

</div><!----><header class="ng-star-inserted">app.module.ts (FormsModule symbol import)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from app.module.ts (FormsModule symbol import)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><a href="https://angular.cn/api/forms/FormsModule" class="code-anchor"><span class="typ">FormsModule</span></a><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'@angular/forms'</span><span class="pun">;</span><span class="pln"> </span><span class="com">// &lt;-- </span><a href="https://angular.cn/api/forms/NgModel" class="code-anchor"><span class="com">NgModel</span></a><span class="com"> lives here</span></code>
    </pre></aio-code></code-example>
<p translation-result="">然后把 <code><a href="https://angular.cn/api/forms/FormsModule" class="code-anchor">FormsModule</a></code> 添加到 <code>@<a href="https://angular.cn/api/core/NgModule" class="code-anchor">NgModule</a></code> 元数据的 <code>imports</code> 数组中，这里是该应用所需外部模块的列表。</p><p translation-origin="off">Then add <code><a href="https://angular.cn/api/forms/FormsModule" class="code-anchor">FormsModule</a></code> to the <code>@<a href="https://angular.cn/api/core/NgModule" class="code-anchor">NgModule</a></code> metadata's <code>imports</code> array, which contains a list of external modules that the app needs.</p>

<code-example path="toh-pt1/src/app/app.module.ts" title="app.module.ts ( @NgModule imports)" region="ng-imports" ng-version="6.0.0"><div style="display: none">
imports: [
  <a href="https://angular.cn/api/platform-browser/BrowserModule" class="code-anchor">BrowserModule</a>,
  <a href="https://angular.cn/api/forms/FormsModule" class="code-anchor">FormsModule</a>
],

</div><!----><header class="ng-star-inserted">app.module.ts ( @NgModule imports)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from app.module.ts ( @NgModule imports)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="pln">imports</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
  </span><a href="https://angular.cn/api/platform-browser/BrowserModule" class="code-anchor"><span class="typ">BrowserModule</span></a><span class="pun">,</span><span class="pln">
  </span><a href="https://angular.cn/api/forms/FormsModule" class="code-anchor"><span class="typ">FormsModule</span></a><span class="pln">
</span><span class="pun">],</span></code>
    </pre></aio-code></code-example>
<p translation-result="">刷新浏览器，应用又能正常工作了。你可以编辑英雄的名字，并且会看到这个改动立刻体现在这个输入框上方的 <code>&lt;h2&gt;</code> 中。</p><p translation-origin="off">When the browser refreshes, the app should work again. You can edit the hero's name and see the changes reflected immediately in the <code>&lt;h2&gt;</code> above the textbox.</p>

<h3 translation-result="" id="declare-emheroescomponentem">声明 <code>HeroesComponent</code><a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/tutorial/toh-pt1#declare-emheroescomponentem"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="declare-heroescomponent">Declare <em>HeroesComponent</em><a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/tutorial/toh-pt1#declare-heroescomponent"><i class="material-icons">link</i></a></h3>

<p translation-result="">每个组件都必须声明在（且只能声明在）一个 <a href="https://angular.cn/guide/ngmodules">NgModule</a> 中。</p><p translation-origin="off">Every component must be declared in <em>exactly one</em> <a href="https://angular.cn/guide/ngmodules">NgModule</a>.</p>

<p translation-result=""><em>你</em>没有声明过 <code>HeroesComponent</code>，可为什么本应用却正常呢？</p><p translation-origin="off"><em>You</em> didn't declare the <code>HeroesComponent</code>.
So why did the application work?</p>

<p translation-result="">这是因为 Angular CLI 在生成 <code>HeroesComponent</code> 组件的时候就自动把它加到了 <code>AppModule</code> 中。</p><p translation-origin="off">It worked because the Angular CLI declared <code>HeroesComponent</code> in the <code>AppModule</code> when it generated that component.</p>

<p translation-result="">打开 <code>src/app/app.module.ts</code> 你就会发现 <code>HeroesComponent</code> 已经在顶部导入过了。</p><p translation-origin="off">Open <code>src/app/app.module.ts</code> and find <code>HeroesComponent</code> imported near the top.</p>

<code-example path="toh-pt1/src/app/app.module.ts" region="heroes-import" ng-version="6.0.0"><div style="display: none">
import { HeroesComponent } from './heroes/heroes.component';

</div><!----><aio-code><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="typ">HeroesComponent</span><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'./heroes/heroes.component'</span><span class="pun">;</span></code>
    </pre></aio-code></code-example>
<p translation-result=""><code>HeroesComponent</code> 也已经声明在了 <code>@<a href="https://angular.cn/api/core/NgModule#declarations" class="code-anchor">NgModule.declarations</a></code> 数组中。</p><p translation-origin="off">The <code>HeroesComponent</code> is declared in the <code>@<a href="https://angular.cn/api/core/NgModule#declarations" class="code-anchor">NgModule.declarations</a></code> array.</p>

<code-example path="toh-pt1/src/app/app.module.ts" region="declarations" ng-version="6.0.0"><div style="display: none">
declarations: [
  AppComponent,
  HeroesComponent
],

</div><!----><aio-code><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="pln">declarations</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
  </span><span class="typ">AppComponent</span><span class="pun">,</span><span class="pln">
  </span><span class="typ">HeroesComponent</span><span class="pln">
</span><span class="pun">],</span></code>
    </pre></aio-code></code-example>
<p translation-result="">注意 <code>AppModule</code> 声明了应用中的所有组件，<code>AppComponent</code> 和 <code>HeroesComponent</code>。</p><p translation-origin="off">Note that <code>AppModule</code>  declares both application components, <code>AppComponent</code> and <code>HeroesComponent</code>.</p>

<h2 translation-result="" id="final-code-review-1">查看最终代码<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/tutorial/toh-pt1#final-code-review-1"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="final-code-review">Final code review<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/tutorial/toh-pt1#final-code-review"><i class="material-icons">link</i></a></h2>

<p translation-result="">应用跑起来应该是这样的：<live-example ng-version="6.0.0"><span><!----><!----><!----><!----><span class="ng-star-inserted"><a target="_blank" href="https://angular.cn/generated/live-examples/toh-pt1/stackblitz.html" title="在线例子">在线例子</a><!----><span class="ng-star-inserted"> / <a download="" title="下载范例" href="https://angular.cn/generated/zips/toh-pt1/toh-pt1.zip">下载范例</a></span></span></span></live-example>。本页中所提及的代码如下：</p><p translation-origin="off">Your app should look like this <live-example ng-version="6.0.0"><span><!----><!----><!----><!----><span class="ng-star-inserted"><a target="_blank" href="https://angular.cn/generated/live-examples/toh-pt1/stackblitz.html" title="在线例子">在线例子</a><!----><span class="ng-star-inserted"> / <a download="" title="下载范例" href="https://angular.cn/generated/zips/toh-pt1/toh-pt1.zip">下载范例</a></span></span></span></live-example>. Here are the code files discussed on this page.</p>

<code-tabs ng-version="6.0.0"><div style="display: none">

  <code-pane title="src/app/heroes/heroes.component.ts" path="toh-pt1/src/app/heroes/heroes.component.ts">
import { <a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a>, <a href="https://angular.cn/api/core/OnInit" class="code-anchor">OnInit</a> } from '@angular/core';
import { Hero } from '../hero';

@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a>({
  selector: 'app-heroes',
  templateUrl: './heroes.component.html',
  styleUrls: ['./heroes.component.css']
})
export class HeroesComponent implements <a href="https://angular.cn/api/core/OnInit" class="code-anchor">OnInit</a> {
  hero: Hero = {
    id: 1,
    name: 'Windstorm'
  };

  constructor() { }

  ngOnInit() {
  }

}

</code-pane>

  <code-pane title="src/app/heroes/heroes.component.html" path="toh-pt1/src/app/heroes/heroes.component.html">
&lt;h2&gt;{{ hero.name | <a href="https://angular.cn/api/common/UpperCasePipe" class="code-anchor">uppercase</a> }} Details&lt;/h2&gt;
&lt;div&gt;&lt;span&gt;id: &lt;/span&gt;{{hero.id}}&lt;/div&gt;
&lt;div&gt;
    &lt;label&gt;name:
      &lt;input [(<a href="https://angular.cn/api/forms/NgModel" class="code-anchor">ngModel</a>)]="hero.name" placeholder="name"&gt;
    &lt;/label&gt;
&lt;/div&gt;


</code-pane>

  <code-pane title="src/app/app.module.ts" path="toh-pt1/src/app/app.module.ts">
import { <a href="https://angular.cn/api/platform-browser/BrowserModule" class="code-anchor">BrowserModule</a> } from '@angular/platform-browser';
import { <a href="https://angular.cn/api/core/NgModule" class="code-anchor">NgModule</a> } from '@angular/core';
import { <a href="https://angular.cn/api/forms/FormsModule" class="code-anchor">FormsModule</a> } from '@angular/forms'; // &lt;-- <a href="https://angular.cn/api/forms/NgModel" class="code-anchor">NgModel</a> lives here

import { AppComponent } from './app.component';
import { HeroesComponent } from './heroes/heroes.component';

@<a href="https://angular.cn/api/core/NgModule" class="code-anchor">NgModule</a>({
  declarations: [
    AppComponent,
    HeroesComponent
  ],
  imports: [
    <a href="https://angular.cn/api/platform-browser/BrowserModule" class="code-anchor">BrowserModule</a>,
    <a href="https://angular.cn/api/forms/FormsModule" class="code-anchor">FormsModule</a>
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }


</code-pane>

  <code-pane title="src/app/app.component.ts" path="toh-pt1/src/app/app.component.ts">
import { <a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a> } from '@angular/core';

@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a>({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {
  title = 'Tour of Heroes';
}


</code-pane>

  <code-pane title="src/app/app.component.html" path="toh-pt1/src/app/app.component.html">
&lt;h1&gt;{{title}}&lt;/h1&gt;
&lt;app-heroes&gt;&lt;/app-heroes&gt;


</code-pane>

  <code-pane title="src/app/hero.ts" path="toh-pt1/src/app/hero.ts">
export class Hero {
  id: number;
  name: string;
}


</code-pane>

</div><mat-tab-group class="code-tab-group mat-tab-group mat-primary" disableripple=""><mat-tab-header class="mat-tab-header mat-tab-header-pagination-controls-enabled"><div aria-hidden="true" class="mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4 mat-ripple mat-tab-header-pagination-disabled" mat-ripple=""><div class="mat-tab-header-pagination-chevron"></div></div><div class="mat-tab-label-container"><div class="mat-tab-list" role="tablist" style="transform: translate3d(0px, 0px, 0px);"><div class="mat-tab-labels"><!----><div class="mat-tab-label mat-ripple mat-tab-label-active ng-star-inserted" mat-ripple="" mattablabelwrapper="" role="tab" id="mat-tab-label-1-0" tabindex="0" aria-controls="mat-tab-content-1-0" aria-selected="true"><div class="mat-tab-label-content"><!----><!----><span class="ng-star-inserted">src/app/heroes/heroes.component.ts</span><!----><!----></div></div><div class="mat-tab-label mat-ripple ng-star-inserted" mat-ripple="" mattablabelwrapper="" role="tab" id="mat-tab-label-1-1" tabindex="-1" aria-controls="mat-tab-content-1-1" aria-selected="false"><div class="mat-tab-label-content"><!----><!----><span class="ng-star-inserted">src/app/heroes/heroes.component.html</span><!----><!----></div></div><div class="mat-tab-label mat-ripple ng-star-inserted" mat-ripple="" mattablabelwrapper="" role="tab" id="mat-tab-label-1-2" tabindex="-1" aria-controls="mat-tab-content-1-2" aria-selected="false"><div class="mat-tab-label-content"><!----><!----><span class="ng-star-inserted">src/app/app.module.ts</span><!----><!----></div></div><div class="mat-tab-label mat-ripple ng-star-inserted" mat-ripple="" mattablabelwrapper="" role="tab" id="mat-tab-label-1-3" tabindex="-1" aria-controls="mat-tab-content-1-3" aria-selected="false"><div class="mat-tab-label-content"><!----><!----><span class="ng-star-inserted">src/app/app.component.ts</span><!----><!----></div></div><div class="mat-tab-label mat-ripple ng-star-inserted" mat-ripple="" mattablabelwrapper="" role="tab" id="mat-tab-label-1-4" tabindex="-1" aria-controls="mat-tab-content-1-4" aria-selected="false"><div class="mat-tab-label-content"><!----><!----><span class="ng-star-inserted">src/app/app.component.html</span><!----><!----></div></div><div class="mat-tab-label mat-ripple ng-star-inserted" mat-ripple="" mattablabelwrapper="" role="tab" id="mat-tab-label-1-5" tabindex="-1" aria-controls="mat-tab-content-1-5" aria-selected="false"><div class="mat-tab-label-content"><!----><!----><span class="ng-star-inserted">src/app/hero.ts</span><!----><!----></div></div></div><mat-ink-bar class="mat-ink-bar" style="visibility: visible; left: 0px; width: 283px;"></mat-ink-bar></div></div><div aria-hidden="true" class="mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4 mat-ripple" mat-ripple=""><div class="mat-tab-header-pagination-chevron"></div></div></mat-tab-header><div class="mat-tab-body-wrapper"><!----><mat-tab-body class="mat-tab-body ng-tns-c10-5 mat-tab-body-active ng-star-inserted" role="tabpanel" id="mat-tab-content-1-0" aria-labelledby="mat-tab-label-1-0"><div class="mat-tab-body-content ng-trigger ng-trigger-translateTab" style="transform: none;"><!----><!----><aio-code class="ng-star-inserted" style=""><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/heroes/heroes.component.ts">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><ol class="linenums"><li class="L0"><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><a href="https://angular.cn/api/core/Component" class="code-anchor"><span class="typ">Component</span></a><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/core/OnInit" class="code-anchor"><span class="typ">OnInit</span></a><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'@angular/core'</span><span class="pun">;</span></li><li class="L1"><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="typ">Hero</span><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'../hero'</span><span class="pun">;</span></li><li class="L2"><span class="pln">&nbsp;</span></li><li class="L3"><span class="lit">@</span><a href="https://angular.cn/api/core/Component" class="code-anchor"><span class="lit">Component</span></a><span class="pun">({</span></li><li class="L4"><span class="pln">  selector</span><span class="pun">:</span><span class="pln"> </span><span class="str">'app-heroes'</span><span class="pun">,</span></li><li class="L5"><span class="pln">  templateUrl</span><span class="pun">:</span><span class="pln"> </span><span class="str">'./heroes.component.html'</span><span class="pun">,</span></li><li class="L6"><span class="pln">  styleUrls</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="str">'./heroes.component.css'</span><span class="pun">]</span></li><li class="L7"><span class="pun">})</span></li><li class="L8"><span class="kwd">export</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">HeroesComponent</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><a href="https://angular.cn/api/core/OnInit" class="code-anchor"><span class="typ">OnInit</span></a><span class="pln"> </span><span class="pun">{</span></li><li class="L9"><span class="pln">  hero</span><span class="pun">:</span><span class="pln"> </span><span class="typ">Hero</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span></li><li class="L0"><span class="pln">    id</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span></li><li class="L1"><span class="pln">    name</span><span class="pun">:</span><span class="pln"> </span><span class="str">'Windstorm'</span></li><li class="L2"><span class="pln">  </span><span class="pun">};</span></li><li class="L3"><span class="pln">&nbsp;</span></li><li class="L4"><span class="pln">  </span><span class="kwd">constructor</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="pun">}</span></li><li class="L5"><span class="pln">&nbsp;</span></li><li class="L6"><span class="pln">  ngOnInit</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span></li><li class="L7"><span class="pln">  </span><span class="pun">}</span></li><li class="L8"><span class="pln">&nbsp;</span></li><li class="L9"><span class="pun">}</span></li></ol></code>
    </pre></aio-code><!----></div></mat-tab-body><mat-tab-body class="mat-tab-body ng-tns-c10-6 ng-star-inserted" role="tabpanel" id="mat-tab-content-1-1" aria-labelledby="mat-tab-label-1-1"><div class="mat-tab-body-content ng-trigger ng-trigger-translateTab" style="transform: translate3d(100%, 0px, 0px);"><!----></div></mat-tab-body><mat-tab-body class="mat-tab-body ng-tns-c10-7 ng-star-inserted" role="tabpanel" id="mat-tab-content-1-2" aria-labelledby="mat-tab-label-1-2"><div class="mat-tab-body-content ng-trigger ng-trigger-translateTab" style="transform: translate3d(100%, 0px, 0px);"><!----></div></mat-tab-body><mat-tab-body class="mat-tab-body ng-tns-c10-8 ng-star-inserted" role="tabpanel" id="mat-tab-content-1-3" aria-labelledby="mat-tab-label-1-3"><div class="mat-tab-body-content ng-trigger ng-trigger-translateTab" style="transform: translate3d(100%, 0px, 0px);"><!----></div></mat-tab-body><mat-tab-body class="mat-tab-body ng-tns-c10-9 ng-star-inserted" role="tabpanel" id="mat-tab-content-1-4" aria-labelledby="mat-tab-label-1-4"><div class="mat-tab-body-content ng-trigger ng-trigger-translateTab" style="transform: translate3d(100%, 0px, 0px);"><!----></div></mat-tab-body><mat-tab-body class="mat-tab-body ng-tns-c10-10 ng-star-inserted" role="tabpanel" id="mat-tab-content-1-5" aria-labelledby="mat-tab-label-1-5"><div class="mat-tab-body-content ng-trigger ng-trigger-translateTab" style="transform: translate3d(100%, 0px, 0px);"><!----></div></mat-tab-body></div></mat-tab-group></code-tabs>
<h2 translation-result="" id="summary-11">小结<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/tutorial/toh-pt1#summary-11"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="summary">Summary<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/tutorial/toh-pt1#summary"><i class="material-icons">link</i></a></h2>

<ul>
<li>
<p translation-result=""> 你使用 CLI 创建了第二个组件 <code>HeroesComponent</code>。</p><p translation-origin="off">You used the CLI to create a second <code>HeroesComponent</code>.</p>

</li>
<li>
<p translation-result=""> 你把 <code>HeroesComponent</code> 添加到了壳组件 <code>AppComponent</code> 中，以便显示它。</p><p translation-origin="off">You displayed the <code>HeroesComponent</code> by adding it to the <code>AppComponent</code> shell. </p>

</li>
<li>
<p translation-result=""> 你使用 <code>UppercasePipe</code> 来格式化英雄的名字。</p><p translation-origin="off">You applied the <code>UppercasePipe</code> to format the name.</p>

</li>
<li>
<p translation-result=""> 你用 <code><a href="https://angular.cn/api/forms/NgModel" class="code-anchor">ngModel</a></code> 指令实现了双向数据绑定。</p><p translation-origin="off">You used two-way data binding with the <code><a href="https://angular.cn/api/forms/NgModel" class="code-anchor">ngModel</a></code> directive.</p>

</li>
<li>
<p translation-result=""> 你知道了 <code>AppModule</code>。</p><p translation-origin="off">You learned about the <code>AppModule</code>.</p>

</li>
<li>
<p translation-result=""> 你把 <code><a href="https://angular.cn/api/forms/FormsModule" class="code-anchor">FormsModule</a></code> 导入了 <code>AppModule</code>，以便 Angular 能识别并应用 <code><a href="https://angular.cn/api/forms/NgModel" class="code-anchor">ngModel</a></code> 指令。</p><p translation-origin="off">You imported the <code><a href="https://angular.cn/api/forms/FormsModule" class="code-anchor">FormsModule</a></code> in the <code>AppModule</code> so that Angular would recognize and apply the <code><a href="https://angular.cn/api/forms/NgModel" class="code-anchor">ngModel</a></code> directive. </p>

</li>
<li>
<p translation-result="">   你知道了把组件声明到 <code>AppModule</code> 是很重要的，并认识到 CLI 会自动帮你声明它。</p><p translation-origin="off">You learned the importance of declaring components in the <code>AppModule</code>
and appreciated that the CLI declared it for you.</p>

</li>
</ul>

</div>
<!-- links to this doc:
-->
<!-- links from this doc:
 - api/common/UpperCasePipe
 - api/core/Component
 - api/core/NgModule
 - api/core/NgModule#declarations
 - api/core/OnInit
 - api/forms/FormsModule
 - api/forms/NgModel
 - api/platform-browser/BrowserModule
 - api/router/RouterLinkWithHref
 - guide/lifecycle-hooks#oninit
 - guide/ngmodules
 - guide/pipes
 - tutorial/toh-pt1#add-a-emheroem-property
 - tutorial/toh-pt1#add-a-hero-property
 - tutorial/toh-pt1#appmodule
 - tutorial/toh-pt1#create-a-hero-class
 - tutorial/toh-pt1#create-the-heroes-component
 - tutorial/toh-pt1#declare-emheroescomponentem
 - tutorial/toh-pt1#declare-heroescomponent
 - tutorial/toh-pt1#edit-the-hero
 - tutorial/toh-pt1#final-code-review
 - tutorial/toh-pt1#final-code-review-1
 - tutorial/toh-pt1#format-with-the-emuppercasepipeem
 - tutorial/toh-pt1#format-with-the-uppercasepipe
 - tutorial/toh-pt1#import-emformsmoduleem
 - tutorial/toh-pt1#import-formsmodule
 - tutorial/toh-pt1#selector
 - tutorial/toh-pt1#show-the-emheroescomponentem-view
 - tutorial/toh-pt1#show-the-hero
 - tutorial/toh-pt1#show-the-hero-object
 - tutorial/toh-pt1#show-the-heroescomponent-view
 - tutorial/toh-pt1#summary
 - tutorial/toh-pt1#summary-11
 - tutorial/toh-pt1#the-hero-editor
 - tutorial/toh-pt1#the-missing-emformsmoduleem
 - tutorial/toh-pt1#the-missing-formsmodule
 - tutorial/toh-pt1#two-way-binding
 - https://developer.mozilla.org/en-US/docs/Web/CSS/Type_selectors
--></div></aio-doc-viewer><aio-dt><!----></aio-dt></section></mat-sidenav-content></mat-sidenav-container><!----><div class="toc-container no-print ng-star-inserted" style="max-height: 3052px;"><aio-toc><!----><div class="toc-inner no-print collapsed ng-star-inserted"><!----><!----><ul class="toc-list"><!----><!----><!----><li title="英雄编辑器link" class="h1 active ng-star-inserted"><a href="https://angular.cn/tutorial/toh-pt1#the-hero-editor">英雄编辑器</a></li><!----><!----><!----><li title="创建英雄列表组件link" class="h2 ng-star-inserted"><a href="https://angular.cn/tutorial/toh-pt1#create-the-heroes-component">创建英雄列表组件</a></li><!----><!----><!----><li title="添加 hero 属性link" class="h3 ng-star-inserted"><a href="https://angular.cn/tutorial/toh-pt1#add-a-emheroem-property">添加 <code>hero</code> 属性</a></li><!----><!----><!----><li title="显示英雄link" class="h3 ng-star-inserted"><a href="https://angular.cn/tutorial/toh-pt1#show-the-hero">显示英雄</a></li><!----><!----><!----><li title="显示 HeroesComponent 视图link" class="h2 ng-star-inserted"><a href="https://angular.cn/tutorial/toh-pt1#show-the-emheroescomponentem-view">显示 <code>HeroesComponent</code> 视图</a></li><!----><!----><!----><li title="创建 Hero 类link" class="h2 ng-star-inserted"><a href="https://angular.cn/tutorial/toh-pt1#create-a-hero-class">创建 <code>Hero</code> 类</a></li><!----><!----><!----><li title="显示 hero 对象link" class="h2 ng-star-inserted"><a href="https://angular.cn/tutorial/toh-pt1#show-the-hero-object">显示 <code>hero</code> 对象</a></li><!----><!----><!----><li title="使用 UppercasePipe 进行格式化link" class="h2 ng-star-inserted"><a href="https://angular.cn/tutorial/toh-pt1#format-with-the-emuppercasepipeem">使用 <code>UppercasePipe</code> 进行格式化</a></li><!----><!----><!----><li title="编辑英雄名字link" class="h2 ng-star-inserted"><a href="https://angular.cn/tutorial/toh-pt1#edit-the-hero">编辑英雄名字</a></li><!----><!----><!----><li title="双向绑定link" class="h3 ng-star-inserted"><a href="https://angular.cn/tutorial/toh-pt1#two-way-binding">双向绑定</a></li><!----><!----><!----><li title="缺少 FormsModulelink" class="h3 ng-star-inserted"><a href="https://angular.cn/tutorial/toh-pt1#the-missing-emformsmoduleem">缺少 <code>FormsModule</code></a></li><!----><!----><!----><li title="AppModulelink" class="h2 ng-star-inserted"><a href="https://angular.cn/tutorial/toh-pt1#appmodule"><em>AppModule</em></a></li><!----><!----><!----><li title="导入 FormsModulelink" class="h3 ng-star-inserted"><a href="https://angular.cn/tutorial/toh-pt1#import-emformsmoduleem">导入 <code>FormsModule</code></a></li><!----><!----><!----><li title="声明 HeroesComponentlink" class="h3 ng-star-inserted"><a href="https://angular.cn/tutorial/toh-pt1#declare-emheroescomponentem">声明 <code>HeroesComponent</code></a></li><!----><!----><!----><li title="查看最终代码link" class="h2 ng-star-inserted"><a href="https://angular.cn/tutorial/toh-pt1#final-code-review-1">查看最终代码</a></li><!----><!----><!----><li title="小结link" class="h2 ng-star-inserted"><a href="https://angular.cn/tutorial/toh-pt1#summary-11">小结</a></li><!----></ul><!----></div></aio-toc></div><footer class="no-print"><aio-footer><div class="grid-fluid"><!----><div class="footer-block ng-star-inserted"><h3>资源</h3><ul><!----><li class="ng-star-inserted"><a class="link" href="https://angular.cn/about" title="Angular 贡献者。">关于</a></li><li class="ng-star-inserted"><a class="link" href="https://angular.cn/resources" title="网络上的 Angular 工具、培训、博客等">资源列表</a></li><li class="ng-star-inserted"><a class="link" href="https://angular.cn/presskit" title="我们的联系方式、LOGO 和品牌">宣传资料</a></li><li class="ng-star-inserted"><a class="link" href="https://blog.angular.io/" title="Angular 官方博客">博客</a></li></ul></div><div class="footer-block ng-star-inserted"><h3>帮助</h3><ul><!----><li class="ng-star-inserted"><a class="link" href="https://stackoverflow.com/questions/tagged/angular" title="Stack Overflow: 这里的社区会回答你关于 Angular 的技术问题">Stack Overflow</a></li><li class="ng-star-inserted"><a class="link" href="https://gitter.im/angular/angular" title="和老鸟聊 Angular">Gitter</a></li><li class="ng-star-inserted"><a class="link" href="https://github.com/angular/angular/issues" title="在 github 上报告问题和建议。">报告问题</a></li><li class="ng-star-inserted"><a class="link" href="https://github.com/angular/code-of-conduct/blob/master/CODE_OF_CONDUCT.md" title="让我们彼此尊重">行为规范</a></li></ul></div><div class="footer-block ng-star-inserted"><h3>社区</h3><ul><!----><li class="ng-star-inserted"><a class="link" href="https://angular.cn/events" title="Post issues and suggestions on github.">活动</a></li><li class="ng-star-inserted"><a class="link" href="http://www.meetup.com/topics/angularjs/" title="参加聚会，向别的开发人员学习">聚会</a></li><li class="ng-star-inserted"><a class="link" href="https://twitter.com/angular" title="Twitter">Twitter</a></li><li class="ng-star-inserted"><a class="link" href="https://github.com/angular/angular" title="GitHub">GitHub</a></li><li class="ng-star-inserted"><a class="link" href="https://angular.cn/contribute" title="向 Angular 做贡献">做贡献</a></li></ul></div><div class="footer-block ng-star-inserted"><h3>多语言</h3><ul><!----><li class="ng-star-inserted"><a class="link" href="https://angular.io/" title="English Version.">English Version</a></li><li class="ng-star-inserted"><a class="link" href="https://angular.jp/" title="日本語版">日本語版</a></li></ul></div></div><p> Powered by Google ©2010-2018. 代码授权方式：<a href="https://angular.cn/license" title="License text">MIT-style License</a>. 文档授权方式：<a href="http://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a>. </p><p><span class="text-caption">本网站由第三方公司洛阳永欣维护 &nbsp;<a href="http://www.miitbeian.gov.cn/">豫ICP备16019859号-1</a></span></p><p> 当前版本：6.0.1-build.180+sha.8494cf4. </p></aio-footer></footer></aio-shell>

  <noscript>
    &lt;div class="background-sky hero"&gt;&lt;/div&gt;
    &lt;section id="intro"&gt;
      &lt;div class="hero-logo"&gt;
        &lt;img src="assets/images/logos/angular/angular.svg" width="250" height="250"&gt;
      &lt;/div&gt;
      &lt;div class="homepage-container"&gt;
        &lt;div class="hero-headline"&gt;一套框架，多种平台&lt;br&gt;移动 &amp;amp; 桌面&lt;/div&gt;
      &lt;/div&gt;
    &lt;/section&gt;
    &lt;h2 style="color: red; text-align: center; margin-top: -50px;"&gt;
      &lt;b&gt;&lt;i&gt;该网站需要浏览器支持 JavaScript &lt;/i&gt;&lt;/b&gt;
    &lt;/h2&gt;
  </noscript>


<script type="text/javascript" src="./Angular - 英雄编辑器_files/runtime.e7e60529879ffb07e28e.js.下载"></script><script type="text/javascript" src="./Angular - 英雄编辑器_files/polyfills.56dafdd128abda80a86c.js.下载"></script><script type="text/javascript" src="./Angular - 英雄编辑器_files/main.e580488e21fdad9d749c.js.下载"></script><div class="cdk-visually-hidden" aria-atomic="true" aria-live="polite"></div></body></html>