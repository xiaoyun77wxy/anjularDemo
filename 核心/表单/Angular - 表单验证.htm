<!DOCTYPE html>
<!-- saved from url=(0040)https://angular.cn/guide/form-validation -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  
  <title>Angular - 表单验证</title>
  <!--<base href="/">--><base href=".">

  <meta name="viewport" content="width=device-width, initial-scale=1">

  <link rel="icon" type="image/x-icon" href="https://angular.cn/favicon.ico">
  <link rel="icon" type="image/x-icon" href="https://angular.cn/assets/images/favicons/favicon.ico">
  <link rel="icon" type="image/png" href="https://angular.cn/assets/images/favicons/favicon-32x32.png" sizes="32x32">
  <link rel="icon" type="image/png" href="https://angular.cn/assets/images/favicons/favicon-194x194.png" sizes="194x194">
  <link rel="icon" type="image/png" href="https://angular.cn/assets/images/favicons/favicon-96x96.png" sizes="96x96">
  <link rel="icon" type="image/png" href="https://angular.cn/assets/images/favicons/favicon-16x16.png" sizes="16x16">
  <link rel="apple-touch-icon" sizes="144x144" href="https://angular.cn/assets/images/favicons/apple-touch-icon-144x144.png">
  <link rel="apple-touch-icon-precomposed" sizes="144x144" href="https://angular.cn/assets/images/favicons/apple-touch-icon-144x144.png">

  <!-- NOTE: These need to be kept in sync with `ngsw-manifest.json`. -->
  <link href="./Angular - 表单验证_files/Material_Icons.css" rel="stylesheet">
  <link href="./Angular - 表单验证_files/Droid_Sans_Mono.css" rel="stylesheet">
  <link href="./Angular - 表单验证_files/font-awesome.min.css" rel="stylesheet">
  <!-- -->

  <link rel="manifest" href="https://angular.cn/pwa-manifest.json">
  <meta name="theme-color" content="#1976d2">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-status-bar-style" content="translucent">

  <script async="" src="./Angular - 表单验证_files/analytics.js.下载"></script><script>
    // Dynamically, pre-emptively, add `noindex`, which will be removed when the doc is ready and valid
    tag = document.createElement('meta'); tag.name = 'robots'; tag.content = 'noindex';
    document.head.appendChild(tag);
  </script>

  <!-- Google Analytics -->
  <script>
  // Note this is a customised version of the GA tracking snippet
  // See the comments below for more info
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;
  ~i.name.indexOf('NG_DEFER_BOOTSTRAP')|| // only load library if not running e2e tests
  m.parentNode.insertBefore(a,m)
  })(window,document,'script','assets/js/analytics.js','ga');
  </script>
  <!-- End Google Analytics -->

  <script>
    // Report fatal errors to Google Analytics
    window.onerror = function() {
      ga('send', 'exception', {exDescription: formatError.apply(null, arguments), exFatal: true});

      function formatError(msg, url, line, col, e) {
        var stack;
        msg = msg.replace(/^Error: /, '');
        if (e) {
          stack = e.stack
              // strip the leading "Error: " from the stack trace
              .replace(/^Error: /, '')
              // strip the message from the stack trace, if present
              .replace(msg + '\n', '')
              // strip leading spaces
              .replace(/^ +/gm, '')
              // strip all leading "at " for each frame
              .replace(/^at /gm, '')
              // replace long urls with just the last segment: `filename:line:column`
              .replace(/(?: \(|@)http.+\/([^/)]+)\)?(?:\n|$)/gm, '@$1\n')
              // replace "eval code" in Edge
              .replace(/ *\(eval code(:\d+:\d+)\)(?:\n|$)/gm, '@???$1\n')
        } else {
          line = line || '?';
          col = col || '?';
          stack = url + ':' + line + ':' + col;
        }
        return (msg + '\n' + stack).substr(0, 150);
      }
    };
  </script>

  <script>
    if (window.document.documentMode) {
      // polyfill IE11 in a blocking way
      var s = document.createElement('script');
      s.src = 'generated/ie-polyfills.min.js';
      document.head.appendChild(s);
    } else if (!Object.assign) {
      // polyfill other non-evergreen browsers in a blocking way
      var polyfillUrl = "https://cdn.polyfill.io/v2/polyfill.min.js?features=default,Array.prototype.find&flags=gated&unknown=polyfill";

      // send a blocking XHR to fetch the polyfill
      // then append it to the document so that its eval-ed synchronously
      // this is required because the method used for IE is not reliable with other non-evergreen browsers
      var xhr = new XMLHttpRequest();
      xhr.addEventListener("load", function() {
        var s = document.createElement('script');
        s.type = 'text/javascript';
        var code = this.responseText;
        s.appendChild(document.createTextNode(code));
        document.head.appendChild(s);
      });
      xhr.open("GET", polyfillUrl, false);
      xhr.send();
    }
  </script>

  <script>
    //load CE polyfill
    //HACK: webpack's html plugin mangles the document.write calls if we don't trick it.

    //load the ES5 shim for browsers with native CE support
    function loadCustomElementsShim(){
      document.write('<scri' + 'pt src="assets/js/native-shim.js"><' + '/script>');
    }

    //load the full custom elements polyfill for browsers without support
    function loadCustomElementsPolyfill(){
      document.write('<scri' + 'pt src="assets/js/custom-elements.min.js"><' + '/script>');
    }
    //detect if we have native CE support
    if(!window.customElements){
      loadCustomElementsPolyfill();
    }
    else {
      loadCustomElementsShim();
    }
  </script><script src="./Angular - 表单验证_files/native-shim.js.下载"></script>

<link rel="stylesheet" href="./Angular - 表单验证_files/styles.613b7c8de73e274bd4c6.css"><style>@media screen and (-ms-high-contrast:active){.mat-toolbar{outline:solid 1px}}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media (max-width:599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}</style><style>.mat-button,.mat-flat-button,.mat-icon-button,.mat-stroked-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;overflow:visible}.mat-button[disabled],.mat-flat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner{border:0}.mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{transition:none;opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:1}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-raised-button:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-raised-button[disabled]{box-shadow:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}.mat-flat-button:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-fab::-moz-focus-inner{border:0}.mat-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-fab[disabled]{box-shadow:none}.mat-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}.mat-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-mini-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-mini-fab[disabled]{box-shadow:none}.mat-mini-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}.mat-mini-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button .mat-icon,.mat-icon-button i{line-height:24px}.mat-button-focus-overlay,.mat-button-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-focus-overlay{background-color:rgba(0,0,0,.12);border-radius:inherit;opacity:0;transition:opacity .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1)}@media screen and (-ms-high-contrast:active){.mat-button-focus-overlay{background-color:rgba(255,255,255,.5)}}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}@media screen and (-ms-high-contrast:active){.mat-button,.mat-fab,.mat-flat-button,.mat-icon-button,.mat-mini-fab,.mat-raised-button{outline:solid 1px}}</style><style>.mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1,1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}</style><style>.mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-opened{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:background-color,visibility}@media screen and (-ms-high-contrast:active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%,0,0)}@media screen and (-ms-high-contrast:active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media screen and (-ms-high-contrast:active){.mat-drawer.mat-drawer-end,[dir=rtl] .mat-drawer{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer{transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%,0,0)}.mat-drawer:not(.mat-drawer-side){box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12)}.mat-sidenav-fixed{position:fixed}</style><script charset="utf-8" src="./Angular - 表单验证_files/live-example-live-example-module-ngfactory.76888e8a441aab262101.js.下载"></script><style>.mat-progress-bar{display:block;height:5px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:'';display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2s infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2s infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(.5,0,.70173,.49582);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(.30244,.38135,.55,.95635);transform:translateX(83.67142%)}100%{transform:translateX(200.61106%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(.08)}36.65%{animation-timing-function:cubic-bezier(.33473,.12482,.78584,1);transform:scaleX(.08)}69.15%{animation-timing-function:cubic-bezier(.06,.11,.6,1);transform:scaleX(.66148)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:translateX(37.65191%)}48.35%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:translateX(84.38617%)}100%{transform:translateX(160.27778%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:scaleX(.08)}19.15%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:scaleX(.4571)}44.15%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:scaleX(.72796)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-10px)}}</style><script charset="utf-8" src="./Angular - 表单验证_files/code-code-example-module-ngfactory_code-code-tabs-module-ngfactory.6a5aabadc81dbdfa0f4e.js.下载"></script><script charset="utf-8" src="./Angular - 表单验证_files/code-code-tabs-module-ngfactory.8315a94f020cd25fe92d.js.下载"></script><script charset="utf-8" src="./Angular - 表单验证_files/code-code-example-module-ngfactory.d0ec50584c7428d1d6ed.js.下载"></script><script charset="utf-8" src="./Angular - 表单验证_files/12.50857b4475720140b255.js.下载"></script><style>.mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.mat-tab-label.mat-tab-disabled{cursor:default}.mat-tab-label.mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (max-width:599px){.mat-tab-label{padding:0 12px}}@media (max-width:959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs] .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}</style><style>.mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.mat-tab-label.mat-tab-disabled{cursor:default}.mat-tab-label.mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (max-width:599px){.mat-tab-label{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media screen and (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-header-pagination{position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-tab-labels{display:flex}</style><style>.mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}</style></head>
<body>

  <aio-shell ng-version="6.0.0" class="mode-stable sidenav-open page-guide-form-validation folder-guide view-SideNav aio-notification-hide "><div id="top-of-page"></div><!----><mat-toolbar class="app-toolbar no-print mat-toolbar mat-primary mat-toolbar-multiple-rows" color="primary"><mat-toolbar-row class="notification-container mat-toolbar-row"><aio-notification actionurl="https://bit.ly/angular-survey-2018" buttontext="Go to survey" expirationdate="2018-01-19" icon="insert_comment" iconlabel="Survey" notificationid="survey-january-2018" class="ng-tns-c2-0 ng-trigger ng-trigger-hideAnimation" style="height: 0px;"><a class="content" href="https://bit.ly/angular-survey-2018"><mat-icon class="icon mat-icon" role="img" aria-hidden="true" aria-label="Survey"><svg fill="#FFFFFF" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M20 2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg></mat-icon><span class="message"> Help Angular by taking a <b>1 minute survey</b>! </span><span class="action-button">Go to survey</span></a><button class="close-button mat-icon-button" aria-label="Close" mat-icon-button=""><span class="mat-button-wrapper"><mat-icon aria-label="Dismiss notification" class="mat-icon ng-tns-c2-0" role="img" svgicon="close" aria-hidden="true"><svg fill="#ffffff" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg></mat-icon></span><div class="mat-button-ripple mat-ripple mat-button-ripple-round" matripple=""></div><div class="mat-button-focus-overlay"></div></button></aio-notification></mat-toolbar-row><mat-toolbar-row class="mat-toolbar-row"><button class="hamburger mat-button" mat-button="" title="Docs menu"><span class="mat-button-wrapper"><mat-icon class="mat-icon" role="img" svgicon="menu" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"></path></svg></mat-icon></span><div class="mat-button-ripple mat-ripple" matripple=""></div><div class="mat-button-focus-overlay"></div></button><a class="nav-link home" href="https://angular.cn/"><!----><img alt="Home" height="40" src="./Angular - 表单验证_files/logo-nav@2x.png" title="Home" width="150" class="ng-star-inserted"><!----></a><!----><aio-top-menu class="ng-star-inserted"><ul role="navigation"><!----><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/features" title="特性">特性</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/docs" title="文档">文档</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/resources" title="资源">资源</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/events" title="会议">会议</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://blog.angular.io/" title="博客">博客</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/translations/cn/home" title="关于中文版">关于中文版</a></li></ul></aio-top-menu><aio-search-box class="search-container"><input aria-label="search" placeholder="搜索" type="search"></aio-search-box></mat-toolbar-row></mat-toolbar><!----><mat-sidenav-container class="sidenav-container mat-drawer-container mat-sidenav-container mat-drawer-transition has-floating-toc" role="main"><!----><div class="mat-drawer-backdrop ng-star-inserted"></div><div tabindex="-1" class="cdk-visually-hidden cdk-focus-trap-anchor"></div><mat-sidenav class="sidenav mat-drawer mat-sidenav ng-tns-c6-1 ng-trigger ng-trigger-transform mat-drawer-side ng-star-inserted" tabindex="-1" style="transform: translate3d(0px, 0px, 0px); visibility: visible;"><!----><aio-nav-menu><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-1 collapsed" href="https://angular.cn/guide/quickstart" title="Angular 破冰"> 快速上手 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-1 expanded" type="button" title="此《英雄指南》教程会带你用 TypeScript 一步步创建一个 Angular 应用。" aria-pressed="true"> 教程 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-1 expanded"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial" title="第一部分：《英雄指南》教程简介"> 1. 简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt0" title="第二部分：创建应用的外壳"> 2. 应用的“外壳” </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt1" title="第三部分：构建一个简单的英雄编辑器"> 3. 英雄编辑器 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt2" title="第四部分：构建一个主从结构的页面，用于展现英雄列表"> 4. 显示英雄列表 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt3" title="第五部分：把主从结构的页面重构成多个组件"> 5. 主从组件 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt4" title="第六部分：创建一个可复用的服务来管理英雄数据"> 6. 服务 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt5" title="第七部分：添加 Angular 路由器，并且学习在视图之间导航"> 7. 路由 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt6" title="第八部分：通过 HTTP 来获取并保存英雄数据"> 8. HTTP </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-1 expanded selected" type="button" title="学习 Angular 的核心知识" aria-pressed="true"> 核心知识 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-1 expanded selected"><!----><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 expanded" type="button" title="Angular 应用的基本构造块。" aria-pressed="true"> 架构 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 expanded"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/architecture" title="Angular 应用的基本构造块"> 架构概览 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/architecture-modules" title="关于模块。"> 模块（NgModule）简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/architecture-components" title="关于组件、模板和视图。"> 组件简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/architecture-services" title="关于服务与依赖注入。"> 服务与 DI 简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/architecture-next-steps" title="学完基础知识之后……"> 后续步骤 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 expanded" type="button" title="使用数据绑定构建动态视图" aria-pressed="true"> 组件与模板 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 expanded"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/displaying-data" title="属性绑定可以帮助应用把数据显示在界面上"> 显示数据 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/template-syntax" title="学习如何写模板，以便借助数据绑定机制显示数据并响应事件。"> 模板语法 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/lifecycle-hooks" title="Angular 调用指令和组件的生命周期钩子函数，包括它的创建、变更和销毁时。"> 生命周期钩子 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/component-interaction" title="在不同的指令和组件之间共享信息"> 组件交互 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/component-styles" title="添加专属于某个组件的样式"> 组件样式 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/elements" title="把组件转换成自定义元素。"> Angular 自定义元素 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/dynamic-component-loader" title="动态加载组件"> 动态组件 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/attribute-directives" title="属性型指令把行为添加到现有元素上。"> 属性型指令 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/structural-directives" title="结构型指令可以操纵页面的布局"> 结构型指令 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/pipes" title="管道可以在模板中转换显示的内容。"> 管道 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/animations" title="Angular 动画体系指南"> 动画 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 expanded selected" type="button" title="Angular 的表单" aria-pressed="true"> 表单 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 expanded selected"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/user-input" title="用户输入触发 DOM 事件。我们通过事件绑定来监听它们，把更新过的数据导入回我们的组件和 model。"> 用户输入 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/forms" title="表单可以创建集中、高效、引人注目的输入体验。Angular 表单可以协调一组数据绑定控件，跟踪变更，验证输入，并表达错误信息。"> 模板驱动表单 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded selected" href="https://angular.cn/guide/form-validation" title="验证用户的表单输入"> 表单验证 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/reactive-forms" title="使用 FormBuilder 、分组和数组创建响应式表单。"> 响应式表单 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dynamic-form" title="使用FormGroup渲染动态表单"> 动态表单 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Observable 与 RxJS" aria-pressed="false"> Observable 与 RxJS <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/observables" title=""> 可观察对象(Observable) </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/rx-library" title=""> RxJS 库 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/observables-in-angular" title=""> Angular 中的可观察对象 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/practical-observable-usage" title=""> 用法实战 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/comparing-observables" title=""> 与其它技术的比较 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/bootstrapping" title="在应用的根模块（AppModule）中告诉 Angular 如何构造并引导引用。"> 引导启动 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Angular 中的模块" aria-pressed="false"> Angular 模块 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ngmodules" title="使用 NgModule 让你的应用更高效"> NgModule 简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ngmodule-vs-jsmodule" title="JavaScript 模块和 NgModule 之间的差异"> JS 模块 vs NgModule </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/frequent-ngmodules" title="介绍最常用的 Angular 模块"> 常用模块 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/module-types" title="介绍特性模块的几种类型"> 特性模块的分类 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/entry-components" title="关于 Angular 中入口组件的一切"> 入口组件 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/feature-modules" title="创建特性模块，以组织你的代码"> 特性模块 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/providers" title="服务提供商与 Angular 模块"> 服务提供商 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/singleton-services" title="创建单例应用"> 单例应用 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/lazy-loading-ngmodules" title="惰性加载模块，以提高应用的性能"> 惰性加载的特性模块 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/sharing-ngmodules" title="共享 Angular 模块让你的应用现代化。"> 共享 Angular 模块 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ngmodule-api" title="理解 NgModule 的那些细节。"> NgModule API </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ngmodule-faq" title="回答关于 NgModules 的常见问题。"> NgModule 常见问题 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="依赖注入：创建并注入各种服务。" aria-pressed="false"> 依赖注入 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dependency-injection-pattern" title="学习 Angular 依赖注入系统背后的依赖注入模式"> 依赖注入模式 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dependency-injection" title="Angular 的依赖注入系统能够为 Angular 创建的类创建并交付它们所依赖的服务。"> Angular 依赖注入 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/hierarchical-dependency-injection" title="Angular 的多级注入体系会建立与组件平行的注入器树。"> 多级注入器 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dependency-injection-in-action" title="依赖注入的使用技巧"> DI 实用技巧 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/http" title="通过 HTTP 协议与远程服务器对话。"> HttpClient </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/router" title="揭示如何通过 Angular 路由进行基本的屏幕导航。"> 路由与导航 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/testing" title="测试 Angular 应用的技巧与实践。"> 测试 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/cheatsheet" title="关于 Angular 常用编码技术的快速指南。"> 速查表 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-1 collapsed" type="button" title="把 Angular 用到你的实际工作中的一些技巧" aria-pressed="false"> 其它技术 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-1 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/i18n" title="把应用模板中的文本翻译成多种语言。"> 国际化 (i18n) </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/language-service" title="使用 Angular 语言服务来为开发提速。"> 语言服务 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/security" title="Angular 应用开发中的安全技术。"> 安全 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="环境准备与部署" aria-pressed="false"> 环境准备与部署 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/setup" title="在你自己的机器上安装 Angular QuickStart 种子，以便更快、更高效的开发。"> 搭建本地开发环境 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/setup-systemjs-anatomy" title="基于 SystemJS 的本地开发环境内幕。"> 搭建方式剖析 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/browser-support" title="浏览器支持与 Polyfills 指南"> 浏览器支持 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/npm-packages" title="建议的 npm 包，以及如何指定包的依赖。"> npm 包 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/typescript-configuration" title="给 Angular 开发者的 TypeScript 配置。"> TypeScript 配置 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/aot-compiler" title="学习如何使用 AOT 预编译器。"> 预先（AOT）编译 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/deployment" title="学习如何部署你的 Angular 应用。"> 部署 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/custom-elements" title="把 Angular 组件用作自定义元素。"> 自定义元素 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Angular 的 Service Worker：控制应用的资源缓存。" aria-pressed="false"> Service Worker <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-intro" title="Angular 对 Service Worker 的实现提升了慢速或不稳定的网络连接下的用户体验。"> 简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-getting-started" title="在 CLI 项目中启用 Service Worker，并在浏览器中查看效果。"> 快速起步 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-communications" title="那些能让你和 Angular 的 Service Worker 通讯的服务类。"> 与 Service Worker 通讯 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-devops" title="使用 Service Worker 运行应用、管理应用更新、调试以及杀掉正在运行的应用。"> 生产环境下的 Service Worker </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-config" title="配置 Service Worker 的缓存行为。"> Service Worker 配置 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Angular 的发布实践，更新计划以及与更新有关的资源。" aria-pressed="false"> 保持最新 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/updating" title="关于如何把 Angular 应用升级到最新版的信息。"> 更新你的项目 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/releases" title="Angular 的版本、发布、支持与弃用策略。"> Angular 的版本发布 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="把 AngularJS 应用增量式的升级到 Angular。" aria-pressed="false"> 从 AngularJS 升级 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/upgrade" title="把 AngularJS 应用增量式的升级到 Angular。"> 升级步骤 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ajs-quick-reference" title="学习如何把 AngularJS 的概念映射到 Angular 中。"> AngularJS 与 Angular 的概念对照 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/universal" title="使用 Angular Universal 在服务端渲染 HTML。">  服务端渲染 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/visual-studio-2015" title="在 Visual Studio 2015 中使用快速起步中的文件"> Visual Studio 2015 快速上手 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/styleguide" title="写出 Angular 风格的程序"> 风格指南 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/glossary" title="Angular 中最重要的词汇的简要定义。"> 词汇表 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-1 collapsed" href="https://angular.cn/api" title="关于 Angular 中类和值的详细信息。"> API 参考手册 </a></div><!----></aio-nav-item></aio-nav-menu><div class="doc-version"><aio-select><div class="form-select-menu"><button class="form-select-button"><strong></strong><!---->stable (v6.0.0) </button><!----></div></aio-select></div></mat-sidenav><div tabindex="-1" class="cdk-visually-hidden cdk-focus-trap-anchor"></div><!----><mat-sidenav-content cdkscrollable="" class="mat-drawer-content mat-sidenav-content ng-star-inserted" style="margin-left: 262px; margin-right: 0px;"><section class="sidenav-content" role="content" id="guide-form-validation"><aio-mode-banner><!----></aio-mode-banner><aio-doc-viewer class=""><div style="opacity: 1; transition: all 200ms ease-in-out;">
<div class="content">
<h1 translation-result="" id="form-validation">表单验证<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/form-validation#form-validation"><i class="material-icons">link</i></a></h1><aio-toc class="embedded"></aio-toc><h1 translation-origin="off" id="form-validation">Form Validation<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/form-validation#form-validation"><i class="material-icons">link</i></a></h1>

<p translation-result="">通过验证用户输入的准确性和完整性，来增强整体数据质量。</p><p translation-origin="off">Improve overall data quality by validating user input for accuracy and completeness.</p>

<p translation-result="">本文展示了如何在界面中如何验证用户输入，并显示有用的验证信息，先使用模板驱动表单方式，再使用响应式表单方式。</p><p translation-origin="off">This page shows how to validate user input in the UI and display useful validation messages
using both reactive and template-driven forms. It assumes some basic knowledge of the two
forms modules.</p>

<div class="l-sub-section">
<p translation-result="">参见<a href="https://angular.cn/guide/forms">表单</a>和<a href="https://angular.cn/guide/reactive-forms">响应式表单</a>了解关于这些选择的更多知识。</p><p translation-origin="off">If you're new to forms, start by reviewing the <a href="https://angular.cn/guide/forms">Forms</a> and
<a href="https://angular.cn/guide/reactive-forms">Reactive Forms</a> guides.</p>

</div>
<h2 translation-result="" id="template-driven-validation">模板驱动验证<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/form-validation#template-driven-validation"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="template-driven-validation">Template-driven validation<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/form-validation#template-driven-validation"><i class="material-icons">link</i></a></h2>

<p translation-result="">为了往模板驱动表单中添加验证机制，你要添加一些验证属性，就像<a href="https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation">原生的 HTML 表单验证器</a>。
Angular 会用指令来匹配这些具有验证功能的指令。</p><p translation-origin="off">To add validation to a template-driven form, you add the same validation attributes as you
would with <a href="https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation">native HTML form validation</a>.
Angular uses directives to match these attributes with validator functions in the framework.</p>

<p translation-result="">每当表单控件中的值发生变化时，Angular 就会进行验证，并生成一个验证错误的列表（对应着 INVALID 状态）或者 null（对应着 VALID 状态）。</p><p translation-origin="off">Every time the value of a form control changes, Angular runs validation and generates
either a list of validation errors, which results in an INVALID status, or null, which results in a VALID status.</p>

<p translation-result="">你可以通过把 <code><a href="https://angular.cn/api/forms/NgModel" class="code-anchor">ngModel</a></code> 导出成局部模板变量来查看该控件的状态。
比如下面这个例子就把 <code><a href="https://angular.cn/api/forms/NgModel" class="code-anchor">NgModel</a></code> 导出成了一个名叫 <code>name</code> 的变量：</p><p translation-origin="off">You can then inspect the control's state by exporting <code><a href="https://angular.cn/api/forms/NgModel" class="code-anchor">ngModel</a></code> to a local template variable.
The following example exports <code><a href="https://angular.cn/api/forms/NgModel" class="code-anchor">NgModel</a></code> into a variable called <code>name</code>:</p>

<code-example path="form-validation/src/app/template/hero-form-template.component.html" region="name-with-error-msg" title="template/hero-form-template.component.html (name)" linenums="false" ng-version="6.0.0"><div style="display: none">
&lt;input id="name" name="name" class="form-control"
       required <a href="https://angular.cn/api/forms/MinLengthValidator" class="code-anchor">minlength</a>="4" appForbiddenName="bob"
       [(<a href="https://angular.cn/api/forms/NgModel" class="code-anchor">ngModel</a>)]="hero.name" #name="<a href="https://angular.cn/api/forms/NgModel" class="code-anchor">ngModel</a>" &gt;

&lt;div *<a href="https://angular.cn/api/common/NgIf" class="code-anchor">ngIf</a>="name.invalid &amp;&amp; (name.dirty || name.touched)"
     class="alert alert-danger"&gt;

  &lt;div *<a href="https://angular.cn/api/common/NgIf" class="code-anchor">ngIf</a>="name.errors.required"&gt;
    Name is required.
  &lt;/div&gt;
  &lt;div *<a href="https://angular.cn/api/common/NgIf" class="code-anchor">ngIf</a>="name.errors.minlength"&gt;
    Name must be at least 4 characters long.
  &lt;/div&gt;
  &lt;div *<a href="https://angular.cn/api/common/NgIf" class="code-anchor">ngIf</a>="name.errors.forbiddenName"&gt;
    Name cannot be Bob.
  &lt;/div&gt;

&lt;/div&gt;

</div><!----><header class="ng-star-inserted">template/hero-form-template.component.html (name)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from template/hero-form-template.component.html (name)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="tag">&lt;input</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"name"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"name"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"form-control"</span><span class="pln">
       </span><span class="atn">required</span><span class="pln"> </span><a href="https://angular.cn/api/forms/MinLengthValidator" class="code-anchor"><span class="atn">minlength</span></a><span class="pun">=</span><span class="atv">"4"</span><span class="pln"> </span><span class="atn">appForbiddenName</span><span class="pun">=</span><span class="atv">"bob"</span><span class="pln">
       [(</span><a href="https://angular.cn/api/forms/NgModel" class="code-anchor"><span class="atn">ngModel</span></a><span class="pln">)]</span><span class="pun">=</span><span class="atv">"hero.name"</span><span class="pln"> #</span><span class="atn">name</span><span class="pun">=</span><span class="atv">"</span><a href="https://angular.cn/api/forms/NgModel" class="code-anchor"><span class="atv">ngModel</span></a><span class="atv">"</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln">

</span><span class="tag">&lt;div</span><span class="pln"> *</span><a href="https://angular.cn/api/common/NgIf" class="code-anchor"><span class="atn">ngIf</span></a><span class="pun">=</span><span class="atv">"name.invalid &amp;&amp; (name.dirty || name.touched)"</span><span class="pln">
     </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"alert alert-danger"</span><span class="tag">&gt;</span><span class="pln">

  </span><span class="tag">&lt;div</span><span class="pln"> *</span><a href="https://angular.cn/api/common/NgIf" class="code-anchor"><span class="atn">ngIf</span></a><span class="pun">=</span><span class="atv">"name.errors.required"</span><span class="tag">&gt;</span><span class="pln">
    Name is required.
  </span><span class="tag">&lt;/div&gt;</span><span class="pln">
  </span><span class="tag">&lt;div</span><span class="pln"> *</span><a href="https://angular.cn/api/common/NgIf" class="code-anchor"><span class="atn">ngIf</span></a><span class="pun">=</span><span class="atv">"name.errors.minlength"</span><span class="tag">&gt;</span><span class="pln">
    Name must be at least 4 characters long.
  </span><span class="tag">&lt;/div&gt;</span><span class="pln">
  </span><span class="tag">&lt;div</span><span class="pln"> *</span><a href="https://angular.cn/api/common/NgIf" class="code-anchor"><span class="atn">ngIf</span></a><span class="pun">=</span><span class="atv">"name.errors.forbiddenName"</span><span class="tag">&gt;</span><span class="pln">
    Name cannot be Bob.
  </span><span class="tag">&lt;/div&gt;</span><span class="pln">

</span><span class="tag">&lt;/div&gt;</span></code>
    </pre></aio-code></code-example>
<p translation-result="">请注意以下几点：</p><p translation-origin="off">Note the following:</p>

<ul>
<li>
<p translation-result="">   <code>&lt;input&gt;</code> 元素带有一些 HTML 验证属性：<code>required</code> 和 <code><a href="https://angular.cn/api/forms/MinLengthValidator" class="code-anchor">minlength</a></code>。它还带有一个自定义的验证器指令 <code>forbiddenName</code>。要了解更多信息，参见<a href="https://angular.cn/guide/form-validation#custom-validators">自定义验证器</a>一节。</p><p translation-origin="off">The <code>&lt;input&gt;</code> element carries the HTML validation attributes: <code>required</code> and <code><a href="https://angular.cn/api/forms/MinLengthValidator" class="code-anchor">minlength</a></code>. It
also carries a custom validator directive, <code>forbiddenName</code>. For more
information, see <a href="https://angular.cn/guide/form-validation#custom-validators">Custom validators</a> section.</p>

</li>
<li>
<p translation-result="">   <code>#name="<a href="https://angular.cn/api/forms/NgModel" class="code-anchor">ngModel</a>"</code> 把 <code><a href="https://angular.cn/api/forms/NgModel" class="code-anchor">NgModel</a></code> 导出成了一个名叫 <code>name</code> 的局部变量。<code><a href="https://angular.cn/api/forms/NgModel" class="code-anchor">NgModel</a></code> 把自己控制的 <code><a href="https://angular.cn/api/forms/FormControl" class="code-anchor">FormControl</a></code> 实例的属性映射出去，让你能在模板中检查控件的状态，比如 <code>valid</code> 和 <code>dirty</code>。要了解完整的控件属性，参见 API 参考手册中的<a href="https://angular.cn/api/forms/AbstractControl">AbstractControl</a>。</p><p translation-origin="off"><code>#name="<a href="https://angular.cn/api/forms/NgModel" class="code-anchor">ngModel</a>"</code> exports <code><a href="https://angular.cn/api/forms/NgModel" class="code-anchor">NgModel</a></code> into a local variable called <code>name</code>. <code><a href="https://angular.cn/api/forms/NgModel" class="code-anchor">NgModel</a></code> mirrors many of the properties of its underlying
<code><a href="https://angular.cn/api/forms/FormControl" class="code-anchor">FormControl</a></code> instance, so you can use this in the template to check for control states such as <code>valid</code> and <code>dirty</code>. For a full list of control properties, see the <a href="https://angular.cn/api/forms/AbstractControl">AbstractControl</a>
API reference.</p>

</li>
<li>
<p translation-result="">   <code>&lt;div&gt;</code> 元素的 <code>*<a href="https://angular.cn/api/common/NgIf" class="code-anchor">ngIf</a></code> 揭露了一套嵌套消息 <code>divs</code>，但是只在有“name”错误和控制器为 <code>dirty</code> 或者 <code>touched</code>。</p><p translation-origin="off">The <code>*<a href="https://angular.cn/api/common/NgIf" class="code-anchor">ngIf</a></code> on the <code>&lt;div&gt;</code> element reveals a set of nested message <code>divs</code>
but only if the <code>name</code> is invalid and the control is either <code>dirty</code> or <code>touched</code>.</p>

</li>
<li>
<p translation-result="">   每个嵌套的 <code>&lt;div&gt;</code> 为其中一个可能出现的验证错误显示一条自定义消息。比如 <code>required</code>、<code><a href="https://angular.cn/api/forms/MinLengthValidator" class="code-anchor">minlength</a></code> 和 <code>forbiddenName</code>。</p><p translation-origin="off">Each nested <code>&lt;div&gt;</code> can present a custom message for one of the possible validation errors.
There are messages for <code>required</code>, <code><a href="https://angular.cn/api/forms/MinLengthValidator" class="code-anchor">minlength</a></code>, and <code>forbiddenName</code>.</p>

</li>
</ul>
<div class="l-sub-section">
<h4 translation-result="" id="why-check-emdirtyem-and-emtouchedem">为何检查 <strong>dirty</strong> 和 <strong>touched</strong>？<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/form-validation#why-check-emdirtyem-and-emtouchedem"><i class="material-icons">link</i></a></h4><h4 translation-origin="off" id="why-check-dirty-and-touched">Why check <em>dirty</em> and <em>touched</em>?<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/form-validation#why-check-dirty-and-touched"><i class="material-icons">link</i></a></h4>

<p translation-result="">你肯定不希望应用在用户还没有编辑过表单的时候就给他们显示错误提示。
对 <code>dirty</code> 和 <code>touched</code> 的检查可以避免这种问题。改变控件的值会改变控件的 <code>dirty</code>（脏）状态，而当控件失去焦点时，就会改变控件的 <code>touched</code>（碰过）状态。</p><p translation-origin="off">You may not want your application to display errors before the user has a chance to edit the form.
The checks for <code>dirty</code> and <code>touched</code> prevent errors from showing until the user
does one of two things: changes the value,
turning the control dirty; or blurs the form control element, setting the control to touched.</p>

</div>
<h2 translation-result="" id="reactive-form-validation">响应式表单的验证<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/form-validation#reactive-form-validation"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="reactive-form-validation">Reactive form validation<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/form-validation#reactive-form-validation"><i class="material-icons">link</i></a></h2>

<p translation-result="">在响应式表单中，真正的源码都在组件类中。不应该通过模板上的属性来添加验证器，而应该在组件类中直接把验证器函数添加到表单控件模型上（<code><a href="https://angular.cn/api/forms/FormControl" class="code-anchor">FormControl</a></code>）。然后，一旦控件发生了变化，Angular 就会调用这些函数。</p><p translation-origin="off">In a reactive form, the source of truth is the component class. Instead of adding validators through attributes in the template, you add validator functions directly to the form control model in the component class. Angular then calls these functions whenever the value of the control changes.</p>

<h3 translation-result="" id="validator-functions">验证器函数<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/form-validation#validator-functions"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="validator-functions">Validator functions<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/form-validation#validator-functions"><i class="material-icons">link</i></a></h3>

<p translation-result="">有两种验证器函数：同步验证器和异步验证器。</p><p translation-origin="off">There are two types of validator functions: sync validators and async validators.  </p>

<ul>
<li>
<p translation-result=""> <strong>同步验证器</strong>函数接受一个控件实例，然后返回一组验证错误或 <code>null</code>。你可以在实例化一个 <code><a href="https://angular.cn/api/forms/FormControl" class="code-anchor">FormControl</a></code> 时把它作为构造函数的第二个参数传进去。</p><p translation-origin="off"><strong>Sync validators</strong>: functions that take a control instance and immediately return either a set of validation errors or <code>null</code>. You can pass these in as the second argument when you instantiate a <code><a href="https://angular.cn/api/forms/FormControl" class="code-anchor">FormControl</a></code>.</p>

</li>
<li>
<p translation-result="">   <strong>异步验证器</strong>函数接受一个控件实例，并返回一个承诺（Promise）或可观察对象（Observable），它们稍后会发出一组验证错误或者 <code>null</code>。你可以在实例化一个 <code><a href="https://angular.cn/api/forms/FormControl" class="code-anchor">FormControl</a></code> 时把它作为构造函数的第三个参数传进去。</p><p translation-origin="off"><strong>Async validators</strong>: functions that take a control instance and return a Promise
or Observable that later emits a set of validation errors or <code>null</code>. You can
pass these in as the third argument when you instantiate a <code><a href="https://angular.cn/api/forms/FormControl" class="code-anchor">FormControl</a></code>. </p>

</li>
</ul>
<p translation-result="">注意：出于性能方面的考虑，只有在所有同步验证器都通过之后，Angular 才会运行异步验证器。当每一个异步验证器都执行完之后，才会设置这些验证错误。</p><p translation-origin="off">Note: for performance reasons, Angular only runs async validators if all sync validators pass. Each must complete before errors are set.</p>

<h3 translation-result="" id="built-in-validators">内置验证器<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/form-validation#built-in-validators"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="built-in-validators">Built-in validators<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/form-validation#built-in-validators"><i class="material-icons">link</i></a></h3>

<p translation-result="">你可以<a href="https://angular.cn/guide/form-validation#custom-validators">写自己的验证器</a>，也可以使用一些 Angular 内置的验证器。</p><p translation-origin="off">You can choose to <a href="https://angular.cn/guide/form-validation#custom-validators">write your own validator functions</a>, or you can use some of
Angular's built-in validators. </p>

<p translation-result="">模板驱动表单中可用的那些属性型验证器（如 <code>required</code>、<code><a href="https://angular.cn/api/forms/MinLengthValidator" class="code-anchor">minlength</a></code> 等）对应于 <code><a href="https://angular.cn/api/forms/Validators" class="code-anchor">Validators</a></code> 类中的同名函数。要想查看内置验证器的全列表，参见 API 参考手册中的<a href="https://angular.cn/api/forms/Validators">验证器</a>部分。</p><p translation-origin="off">The same built-in validators that are available as attributes in template-driven forms, such as <code>required</code> and <code><a href="https://angular.cn/api/forms/MinLengthValidator" class="code-anchor">minlength</a></code>, are all available to use as functions from the <code><a href="https://angular.cn/api/forms/Validators" class="code-anchor">Validators</a></code> class. For a full list of built-in validators, see the <a href="https://angular.cn/api/forms/Validators">Validators</a> API reference.</p>

<p translation-result="">要想把这个英雄表单改造成一个响应式表单，你还是用那些内置验证器，但这次改为用它们的函数形态。</p><p translation-origin="off">To update the hero form to be a reactive form, you can use some of the same
built-in validators—this time, in function form. See below:</p>

<a id="reactive-component-class"></a>
<code-example path="form-validation/src/app/reactive/hero-form-reactive.component.ts" region="form-group" title="reactive/hero-form-reactive.component.ts (validator functions)" linenums="false" ng-version="6.0.0"><div style="display: none">
ngOnInit(): void {
  this.heroForm = new <a href="https://angular.cn/api/forms/FormGroup" class="code-anchor">FormGroup</a>({
    'name': new <a href="https://angular.cn/api/forms/FormControl" class="code-anchor">FormControl</a>(this.hero.name, [
      Validators.required,
      Validators.minLength(4),
      forbiddenNameValidator(/bob/i) // &lt;-- Here's how you pass in the custom validator.
    ]),
    'alterEgo': new <a href="https://angular.cn/api/forms/FormControl" class="code-anchor">FormControl</a>(this.hero.alterEgo),
    'power': new <a href="https://angular.cn/api/forms/FormControl" class="code-anchor">FormControl</a>(this.hero.power, Validators.required)
  });
}

get name() { return this.heroForm.get('name'); }

get power() { return this.heroForm.get('power'); }

</div><!----><header class="ng-star-inserted">reactive/hero-form-reactive.component.ts (validator functions)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from reactive/hero-form-reactive.component.ts (validator functions)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="pln">ngOnInit</span><span class="pun">():</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">heroForm </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><a href="https://angular.cn/api/forms/FormGroup" class="code-anchor"><span class="typ">FormGroup</span></a><span class="pun">({</span><span class="pln">
    </span><span class="str">'name'</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><a href="https://angular.cn/api/forms/FormControl" class="code-anchor"><span class="typ">FormControl</span></a><span class="pun">(</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">hero</span><span class="pun">.</span><span class="pln">name</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
      </span><span class="typ">Validators</span><span class="pun">.</span><span class="pln">required</span><span class="pun">,</span><span class="pln">
      </span><span class="typ">Validators</span><span class="pun">.</span><span class="pln">minLength</span><span class="pun">(</span><span class="lit">4</span><span class="pun">),</span><span class="pln">
      forbiddenNameValidator</span><span class="pun">(</span><span class="str">/bob/</span><span class="pln">i</span><span class="pun">)</span><span class="pln"> </span><span class="com">// &lt;-- Here's how you pass in the custom validator.</span><span class="pln">
    </span><span class="pun">]),</span><span class="pln">
    </span><span class="str">'alterEgo'</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><a href="https://angular.cn/api/forms/FormControl" class="code-anchor"><span class="typ">FormControl</span></a><span class="pun">(</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">hero</span><span class="pun">.</span><span class="pln">alterEgo</span><span class="pun">),</span><span class="pln">
    </span><span class="str">'power'</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><a href="https://angular.cn/api/forms/FormControl" class="code-anchor"><span class="typ">FormControl</span></a><span class="pun">(</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">hero</span><span class="pun">.</span><span class="pln">power</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Validators</span><span class="pun">.</span><span class="pln">required</span><span class="pun">)</span><span class="pln">
  </span><span class="pun">});</span><span class="pln">
</span><span class="pun">}</span><span class="pln">

</span><span class="kwd">get</span><span class="pln"> name</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">heroForm</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="str">'name'</span><span class="pun">);</span><span class="pln"> </span><span class="pun">}</span><span class="pln">

</span><span class="kwd">get</span><span class="pln"> power</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">heroForm</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="str">'power'</span><span class="pun">);</span><span class="pln"> </span><span class="pun">}</span></code>
    </pre></aio-code></code-example>
<p translation-result="">注意</p><p translation-origin="off">Note that:</p>

<ul>
<li>
<p translation-result=""> <code>name</code> 控件设置了两个内置验证器：<code>Validators.required</code> 和 <code>Validators.minLength(4)</code>。要了解更多信息，参见本章的<a href="https://angular.cn/guide/form-validation#custom-validators">自定义验证器</a>一节。</p><p translation-origin="off">The name control sets up two built-in validators—<code>Validators.required</code> and <code>Validators.minLength(4)</code>—and one custom validator, <code>forbiddenNameValidator</code>. For more details see the <a href="https://angular.cn/guide/form-validation#custom-validators">Custom validators</a> section in this guide.</p>

</li>
<li>
<p translation-result=""> 由于这些验证器都是同步验证器，因此你要把它们作为第二个参数传进去。</p><p translation-origin="off">As these validators are all sync validators, you pass them in as the second argument. </p>

</li>
<li>
<p translation-result=""> 可以通过把这些函数放进一个数组后传进去，可以支持多重验证器。</p><p translation-origin="off">Support multiple validators by passing the functions in as an array.</p>

</li>
<li>
<p translation-result="">   这个例子添加了一些 getter 方法。在响应式表单中，你通常会通过它所属的控件组（FormGroup）的 <code>get</code> 方法来访问表单控件，但有时候为模板定义一些 getter 作为简短形式。</p><p translation-origin="off">This example adds a few getter methods. In a reactive form, you can always access any form control through the <code>get</code> method on its parent group, but sometimes it's useful to define getters as shorthands
for the template.</p>

</li>
</ul>
<p translation-result="">如果你到模板中找到 name 输入框，就会发现它和模板驱动的例子很相似。</p><p translation-origin="off">If you look at the template for the name input again, it is fairly similar to the template-driven example. </p>

<code-example path="form-validation/src/app/reactive/hero-form-reactive.component.html" region="name-with-error-msg" title="reactive/hero-form-reactive.component.html (name with error msg)" linenums="false" ng-version="6.0.0"><div style="display: none">
&lt;input id="name" class="form-control"
       <a href="https://angular.cn/api/forms/FormControlName" class="code-anchor">formControlName</a>="name" required &gt;

&lt;div *<a href="https://angular.cn/api/common/NgIf" class="code-anchor">ngIf</a>="name.invalid &amp;&amp; (name.dirty || name.touched)"
     class="alert alert-danger"&gt;

  &lt;div *<a href="https://angular.cn/api/common/NgIf" class="code-anchor">ngIf</a>="name.errors.required"&gt;
    Name is required.
  &lt;/div&gt;
  &lt;div *<a href="https://angular.cn/api/common/NgIf" class="code-anchor">ngIf</a>="name.errors.minlength"&gt;
    Name must be at least 4 characters long.
  &lt;/div&gt;
  &lt;div *<a href="https://angular.cn/api/common/NgIf" class="code-anchor">ngIf</a>="name.errors.forbiddenName"&gt;
    Name cannot be Bob.
  &lt;/div&gt;
&lt;/div&gt;

</div><!----><header class="ng-star-inserted">reactive/hero-form-reactive.component.html (name with error msg)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from reactive/hero-form-reactive.component.html (name with error msg)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="tag">&lt;input</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"name"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"form-control"</span><span class="pln">
       </span><a href="https://angular.cn/api/forms/FormControlName" class="code-anchor"><span class="atn">formControlName</span></a><span class="pun">=</span><span class="atv">"name"</span><span class="pln"> </span><span class="atn">required</span><span class="pln"> </span><span class="tag">&gt;</span><span class="pln">

</span><span class="tag">&lt;div</span><span class="pln"> *</span><a href="https://angular.cn/api/common/NgIf" class="code-anchor"><span class="atn">ngIf</span></a><span class="pun">=</span><span class="atv">"name.invalid &amp;&amp; (name.dirty || name.touched)"</span><span class="pln">
     </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"alert alert-danger"</span><span class="tag">&gt;</span><span class="pln">

  </span><span class="tag">&lt;div</span><span class="pln"> *</span><a href="https://angular.cn/api/common/NgIf" class="code-anchor"><span class="atn">ngIf</span></a><span class="pun">=</span><span class="atv">"name.errors.required"</span><span class="tag">&gt;</span><span class="pln">
    Name is required.
  </span><span class="tag">&lt;/div&gt;</span><span class="pln">
  </span><span class="tag">&lt;div</span><span class="pln"> *</span><a href="https://angular.cn/api/common/NgIf" class="code-anchor"><span class="atn">ngIf</span></a><span class="pun">=</span><span class="atv">"name.errors.minlength"</span><span class="tag">&gt;</span><span class="pln">
    Name must be at least 4 characters long.
  </span><span class="tag">&lt;/div&gt;</span><span class="pln">
  </span><span class="tag">&lt;div</span><span class="pln"> *</span><a href="https://angular.cn/api/common/NgIf" class="code-anchor"><span class="atn">ngIf</span></a><span class="pun">=</span><span class="atv">"name.errors.forbiddenName"</span><span class="tag">&gt;</span><span class="pln">
    Name cannot be Bob.
  </span><span class="tag">&lt;/div&gt;</span><span class="pln">
</span><span class="tag">&lt;/div&gt;</span></code>
    </pre></aio-code></code-example>
<p translation-result="">关键改动是：</p><p translation-origin="off">Key takeaways:</p>

<ul>
<li>
<p translation-result="">   该表单不再导出任何指令，而是使用组件类中定义的 <code>name</code> 读取器。</p><p translation-origin="off">The form no longer exports any directives, and instead uses the <code>name</code> getter defined in
the component class.</p>

</li>
<li>
<p translation-result="">   <code>required</code> 属性仍然存在，虽然验证不再需要它，但你仍然要在模板中保留它，以支持 CSS 样式或可访问性。</p><p translation-origin="off">The <code>required</code> attribute is still present. While it's not necessary for validation purposes,
you may want to keep it in your template for CSS styling or accessibility reasons.</p>

</li>
</ul>
<h2 translation-result="" id="custom-validators">自定义验证器<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/form-validation#custom-validators"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="custom-validators">Custom validators<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/form-validation#custom-validators"><i class="material-icons">link</i></a></h2>

<p translation-result="">由于内置验证器无法适用于所有应用场景，有时候你还是得创建自定义验证器。</p><p translation-origin="off">Since the built-in validators won't always match the exact use case of your application, sometimes you'll want to create a custom validator. </p>

<p translation-result="">考虑前面的<a href="https://angular.cn/guide/form-validation#reactive-component-class">例子</a>中的 <code>forbiddenNameValidator</code> 函数。该函数的定义看起来是这样的：</p><p translation-origin="off">Consider the <code>forbiddenNameValidator</code> function from previous
<a href="https://angular.cn/guide/form-validation#reactive-component-class">examples</a> in
this guide. Here's what the definition of that function looks like:</p>

<code-example path="form-validation/src/app/shared/forbidden-name.directive.ts" region="custom-validator" title="shared/forbidden-name.directive.ts (forbiddenNameValidator)" linenums="false" ng-version="6.0.0"><div style="display: none">
/** A hero's name can't match the given regular expression */
export function forbiddenNameValidator(nameRe: RegExp): <a href="https://angular.cn/api/forms/ValidatorFn" class="code-anchor">ValidatorFn</a> {
  return (control: <a href="https://angular.cn/api/forms/AbstractControl" class="code-anchor">AbstractControl</a>): {[key: string]: any} =&gt; {
    const forbidden = nameRe.test(control.value);
    return forbidden ? {'forbiddenName': {value: control.value}} : null;
  };
}

</div><!----><header class="ng-star-inserted">shared/forbidden-name.directive.ts (forbiddenNameValidator)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from shared/forbidden-name.directive.ts (forbiddenNameValidator)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="com">/** A hero's name can't match the given regular expression */</span><span class="pln">
</span><span class="kwd">export</span><span class="pln"> </span><span class="kwd">function</span><span class="pln"> forbiddenNameValidator</span><span class="pun">(</span><span class="pln">nameRe</span><span class="pun">:</span><span class="pln"> </span><span class="typ">RegExp</span><span class="pun">):</span><span class="pln"> </span><a href="https://angular.cn/api/forms/ValidatorFn" class="code-anchor"><span class="typ">ValidatorFn</span></a><span class="pln"> </span><span class="pun">{</span><span class="pln">
  </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">(</span><span class="pln">control</span><span class="pun">:</span><span class="pln"> </span><a href="https://angular.cn/api/forms/AbstractControl" class="code-anchor"><span class="typ">AbstractControl</span></a><span class="pun">):</span><span class="pln"> </span><span class="pun">{[</span><span class="pln">key</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">string</span><span class="pun">]:</span><span class="pln"> any</span><span class="pun">}</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">const</span><span class="pln"> forbidden </span><span class="pun">=</span><span class="pln"> nameRe</span><span class="pun">.</span><span class="pln">test</span><span class="pun">(</span><span class="pln">control</span><span class="pun">.</span><span class="kwd">value</span><span class="pun">);</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> forbidden </span><span class="pun">?</span><span class="pln"> </span><span class="pun">{</span><span class="str">'forbiddenName'</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="kwd">value</span><span class="pun">:</span><span class="pln"> control</span><span class="pun">.</span><span class="kwd">value</span><span class="pun">}}</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">};</span><span class="pln">
</span><span class="pun">}</span></code>
    </pre></aio-code></code-example>
<p translation-result="">这个函数实际上是一个工厂，它接受一个用来检测指定名字是否已被禁用的正则表达式，并返回一个验证器函数。</p><p translation-origin="off">The function is actually a factory that takes a regular expression to detect a <em>specific</em> forbidden name and returns a validator function.</p>

<p translation-result="">在本例中，禁止的名字是“bob”；
验证器会拒绝任何带有“bob”的英雄名字。
在其他地方，只要配置的正则表达式可以匹配上，它可能拒绝“alice”或者任何其他名字。</p><p translation-origin="off">In this sample, the forbidden name is "bob", so the validator will reject any hero name containing "bob".
Elsewhere it could reject "alice" or any name that the configuring regular expression matches.</p>

<p translation-result=""><code>forbiddenNameValidator</code> 工厂函数返回配置好的验证器函数。
该函数接受一个 Angular 控制器对象，并在控制器值有效时返回 null，或无效时返回验证错误对象。
验证错误对象通常有一个名为验证秘钥（<code>forbiddenName</code>）的属性。其值为一个任意词典，你可以用来插入错误信息（<code>{name}</code>）。</p><p translation-origin="off">The <code>forbiddenNameValidator</code> factory returns the configured validator function.
That function takes an Angular control object and returns <em>either</em>
null if the control value is valid <em>or</em> a validation error object.
The validation error object typically has a property whose name is the validation key, <code>'forbiddenName'</code>,
and whose value is an arbitrary dictionary of values that you could insert into an error message, <code>{name}</code>.</p>

<p translation-result="">自定义异步验证器和同步验证器很像，只是它们必须返回一个稍后会输出 null 或“验证错误对象”的承诺（Promise）或可观察对象，如果是可观察对象，那么它必须在某个时间点被完成（complete），那时候这个表单就会使用它输出的最后一个值作为验证结果。（译注：HTTP 服务是自动完成的，但是某些自定义的可观察对象可能需要手动调用 complete 方法）</p><p translation-origin="off">Custom async validators are similar to sync validators, but they must instead return a Promise or Observable
that later emits null or a validation error object. In the case of an Observable, the Observable must complete,
at which point the form uses the last value emitted for validation.</p>

<h3 translation-result="" id="adding-to-reactive-forms">添加响应式表单<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/form-validation#adding-to-reactive-forms"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="adding-to-reactive-forms">Adding to reactive forms<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/form-validation#adding-to-reactive-forms"><i class="material-icons">link</i></a></h3>

<p translation-result="">在响应式表单组件中，添加自定义验证器相当简单。你所要做的一切就是直接把这个函数传给 <code><a href="https://angular.cn/api/forms/FormControl" class="code-anchor">FormControl</a></code> 。</p><p translation-origin="off">In reactive forms, custom validators are fairly simple to add. All you have to do is pass the function directly
to the <code><a href="https://angular.cn/api/forms/FormControl" class="code-anchor">FormControl</a></code>.</p>

<code-example path="form-validation/src/app/reactive/hero-form-reactive.component.ts" region="custom-validator" title="reactive/hero-form-reactive.component.ts (validator functions)" linenums="false" ng-version="6.0.0"><div style="display: none">
this.heroForm = new <a href="https://angular.cn/api/forms/FormGroup" class="code-anchor">FormGroup</a>({
  'name': new <a href="https://angular.cn/api/forms/FormControl" class="code-anchor">FormControl</a>(this.hero.name, [
    Validators.required,
    Validators.minLength(4),
    forbiddenNameValidator(/bob/i) // &lt;-- Here's how you pass in the custom validator.
  ]),
  'alterEgo': new <a href="https://angular.cn/api/forms/FormControl" class="code-anchor">FormControl</a>(this.hero.alterEgo),
  'power': new <a href="https://angular.cn/api/forms/FormControl" class="code-anchor">FormControl</a>(this.hero.power, Validators.required)
});

</div><!----><header class="ng-star-inserted">reactive/hero-form-reactive.component.ts (validator functions)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from reactive/hero-form-reactive.component.ts (validator functions)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="kwd">this</span><span class="pun">.</span><span class="pln">heroForm </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><a href="https://angular.cn/api/forms/FormGroup" class="code-anchor"><span class="typ">FormGroup</span></a><span class="pun">({</span><span class="pln">
  </span><span class="str">'name'</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><a href="https://angular.cn/api/forms/FormControl" class="code-anchor"><span class="typ">FormControl</span></a><span class="pun">(</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">hero</span><span class="pun">.</span><span class="pln">name</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
    </span><span class="typ">Validators</span><span class="pun">.</span><span class="pln">required</span><span class="pun">,</span><span class="pln">
    </span><span class="typ">Validators</span><span class="pun">.</span><span class="pln">minLength</span><span class="pun">(</span><span class="lit">4</span><span class="pun">),</span><span class="pln">
    forbiddenNameValidator</span><span class="pun">(</span><span class="str">/bob/</span><span class="pln">i</span><span class="pun">)</span><span class="pln"> </span><span class="com">// &lt;-- Here's how you pass in the custom validator.</span><span class="pln">
  </span><span class="pun">]),</span><span class="pln">
  </span><span class="str">'alterEgo'</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><a href="https://angular.cn/api/forms/FormControl" class="code-anchor"><span class="typ">FormControl</span></a><span class="pun">(</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">hero</span><span class="pun">.</span><span class="pln">alterEgo</span><span class="pun">),</span><span class="pln">
  </span><span class="str">'power'</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><a href="https://angular.cn/api/forms/FormControl" class="code-anchor"><span class="typ">FormControl</span></a><span class="pun">(</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">hero</span><span class="pun">.</span><span class="pln">power</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Validators</span><span class="pun">.</span><span class="pln">required</span><span class="pun">)</span><span class="pln">
</span><span class="pun">});</span></code>
    </pre></aio-code></code-example>
<h3 translation-result="" id="adding-to-template-driven-forms">添加到模板驱动表单<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/form-validation#adding-to-template-driven-forms"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="adding-to-template-driven-forms">Adding to template-driven forms<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/form-validation#adding-to-template-driven-forms"><i class="material-icons">link</i></a></h3>

<p translation-result="">在模板驱动表单中，你不用直接访问 <code><a href="https://angular.cn/api/forms/FormControl" class="code-anchor">FormControl</a></code> 实例。所以不能像响应式表单中那样把验证器传进去，而应该在模板中添加一个指令。</p><p translation-origin="off">In template-driven forms, you don't have direct access to the <code><a href="https://angular.cn/api/forms/FormControl" class="code-anchor">FormControl</a></code> instance, so you can't pass the
validator in like you can for reactive forms. Instead, you need to add a directive to the template.</p>

<p translation-result=""><code>ForbiddenValidatorDirective</code> 指令相当于 <code>forbiddenNameValidator</code> 的包装器。</p><p translation-origin="off">The corresponding <code>ForbiddenValidatorDirective</code> serves as a wrapper around the <code>forbiddenNameValidator</code>.</p>

<p translation-result="">Angular 在验证流程中的识别出指令的作用，是因为指令把自己注册到了 <code><a href="https://angular.cn/api/forms/NG_VALIDATORS" class="code-anchor">NG_VALIDATORS</a></code> 提供商中，该提供商拥有一组可扩展的验证器。</p><p translation-origin="off">Angular recognizes the directive's role in the validation process because the directive registers itself
with the <code><a href="https://angular.cn/api/forms/NG_VALIDATORS" class="code-anchor">NG_VALIDATORS</a></code> provider, a provider with an extensible collection of validators.</p>

<code-example path="form-validation/src/app/shared/forbidden-name.directive.ts" region="directive-providers" title="shared/forbidden-name.directive.ts (providers)" linenums="false" ng-version="6.0.0"><div style="display: none">
providers: [{provide: <a href="https://angular.cn/api/forms/NG_VALIDATORS" class="code-anchor">NG_VALIDATORS</a>, useExisting: ForbiddenValidatorDirective, multi: true}]

</div><!----><header class="ng-star-inserted">shared/forbidden-name.directive.ts (providers)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from shared/forbidden-name.directive.ts (providers)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="pln">providers</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[{</span><span class="pln">provide</span><span class="pun">:</span><span class="pln"> </span><a href="https://angular.cn/api/forms/NG_VALIDATORS" class="code-anchor"><span class="pln">NG_VALIDATORS</span></a><span class="pun">,</span><span class="pln"> useExisting</span><span class="pun">:</span><span class="pln"> </span><span class="typ">ForbiddenValidatorDirective</span><span class="pun">,</span><span class="pln"> multi</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">}]</span></code>
    </pre></aio-code></code-example>
<p translation-result="">然后该指令类实现了 <code><a href="https://angular.cn/api/forms/Validator" class="code-anchor">Validator</a></code> 接口，以便它能简单的与 Angular 表单集成在一起。这个指令的其余部分有助于你理解它们是如何协作的：</p><p translation-origin="off">The directive class then implements the <code><a href="https://angular.cn/api/forms/Validator" class="code-anchor">Validator</a></code> interface, so that it can easily integrate
with Angular forms. Here is the rest of the directive to help you get an idea of how it all
comes together:</p>

<code-example path="form-validation/src/app/shared/forbidden-name.directive.ts" region="directive" title="shared/forbidden-name.directive.ts (directive)" ng-version="6.0.0"><div style="display: none">
@<a href="https://angular.cn/api/core/Directive" class="code-anchor">Directive</a>({
  selector: '[appForbiddenName]',
  providers: [{provide: <a href="https://angular.cn/api/forms/NG_VALIDATORS" class="code-anchor">NG_VALIDATORS</a>, useExisting: ForbiddenValidatorDirective, multi: true}]
})
export class ForbiddenValidatorDirective implements <a href="https://angular.cn/api/forms/Validator" class="code-anchor">Validator</a> {
  @<a href="https://angular.cn/api/core/Input" class="code-anchor">Input</a>('appForbiddenName') forbiddenName: string;

  validate(control: <a href="https://angular.cn/api/forms/AbstractControl" class="code-anchor">AbstractControl</a>): {[key: string]: any} {
    return this.forbiddenName ? forbiddenNameValidator(new RegExp(this.forbiddenName, 'i'))(control)
                              : null;
  }
}

</div><!----><header class="ng-star-inserted">shared/forbidden-name.directive.ts (directive)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from shared/forbidden-name.directive.ts (directive)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><ol class="linenums"><li class="L0"><span class="lit">@</span><a href="https://angular.cn/api/core/Directive" class="code-anchor"><span class="lit">Directive</span></a><span class="pun">({</span></li><li class="L1"><span class="pln">  selector</span><span class="pun">:</span><span class="pln"> </span><span class="str">'[appForbiddenName]'</span><span class="pun">,</span></li><li class="L2"><span class="pln">  providers</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[{</span><span class="pln">provide</span><span class="pun">:</span><span class="pln"> </span><a href="https://angular.cn/api/forms/NG_VALIDATORS" class="code-anchor"><span class="pln">NG_VALIDATORS</span></a><span class="pun">,</span><span class="pln"> useExisting</span><span class="pun">:</span><span class="pln"> </span><span class="typ">ForbiddenValidatorDirective</span><span class="pun">,</span><span class="pln"> multi</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">}]</span></li><li class="L3"><span class="pun">})</span></li><li class="L4"><span class="kwd">export</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">ForbiddenValidatorDirective</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><a href="https://angular.cn/api/forms/Validator" class="code-anchor"><span class="typ">Validator</span></a><span class="pln"> </span><span class="pun">{</span></li><li class="L5"><span class="pln">  </span><span class="lit">@</span><a href="https://angular.cn/api/core/Input" class="code-anchor"><span class="lit">Input</span></a><span class="pun">(</span><span class="str">'appForbiddenName'</span><span class="pun">)</span><span class="pln"> forbiddenName</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">string</span><span class="pun">;</span></li><li class="L6"><span class="pln">&nbsp;</span></li><li class="L7"><span class="pln">  validate</span><span class="pun">(</span><span class="pln">control</span><span class="pun">:</span><span class="pln"> </span><a href="https://angular.cn/api/forms/AbstractControl" class="code-anchor"><span class="typ">AbstractControl</span></a><span class="pun">):</span><span class="pln"> </span><span class="pun">{[</span><span class="pln">key</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">string</span><span class="pun">]:</span><span class="pln"> any</span><span class="pun">}</span><span class="pln"> </span><span class="pun">{</span></li><li class="L8"><span class="pln">    </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">forbiddenName </span><span class="pun">?</span><span class="pln"> forbiddenNameValidator</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">RegExp</span><span class="pun">(</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">forbiddenName</span><span class="pun">,</span><span class="pln"> </span><span class="str">'i'</span><span class="pun">))(</span><span class="pln">control</span><span class="pun">)</span></li><li class="L9"><span class="pln">                              </span><span class="pun">:</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span></li><li class="L0"><span class="pln">  </span><span class="pun">}</span></li><li class="L1"><span class="pun">}</span></li></ol></code>
    </pre></aio-code></code-example>
<p translation-result="">一旦 <code>ForbiddenValidatorDirective</code> 写好了，你只要把 <code>forbiddenName</code> 选择器添加到输入框上就可以激活这个验证器了。比如：</p><p translation-origin="off">Once the <code>ForbiddenValidatorDirective</code> is ready, you can simply add its selector, <code>appForbiddenName</code>, to any input element to activate it. For example:</p>

<code-example path="form-validation/src/app/template/hero-form-template.component.html" region="name-input" title="template/hero-form-template.component.html (forbidden-name-input)" linenums="false" ng-version="6.0.0"><div style="display: none">
&lt;input id="name" name="name" class="form-control"
       required <a href="https://angular.cn/api/forms/MinLengthValidator" class="code-anchor">minlength</a>="4" appForbiddenName="bob"
       [(<a href="https://angular.cn/api/forms/NgModel" class="code-anchor">ngModel</a>)]="hero.name" #name="<a href="https://angular.cn/api/forms/NgModel" class="code-anchor">ngModel</a>" &gt;

</div><!----><header class="ng-star-inserted">template/hero-form-template.component.html (forbidden-name-input)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from template/hero-form-template.component.html (forbidden-name-input)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="tag">&lt;input</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"name"</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"name"</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"form-control"</span><span class="pln">
       </span><span class="atn">required</span><span class="pln"> </span><a href="https://angular.cn/api/forms/MinLengthValidator" class="code-anchor"><span class="atn">minlength</span></a><span class="pun">=</span><span class="atv">"4"</span><span class="pln"> </span><span class="atn">appForbiddenName</span><span class="pun">=</span><span class="atv">"bob"</span><span class="pln">
       [(</span><a href="https://angular.cn/api/forms/NgModel" class="code-anchor"><span class="atn">ngModel</span></a><span class="pln">)]</span><span class="pun">=</span><span class="atv">"hero.name"</span><span class="pln"> #</span><span class="atn">name</span><span class="pun">=</span><span class="atv">"</span><a href="https://angular.cn/api/forms/NgModel" class="code-anchor"><span class="atv">ngModel</span></a><span class="atv">"</span><span class="pln"> </span><span class="tag">&gt;</span></code>
    </pre></aio-code></code-example>
<div class="l-sub-section">
<p translation-result="">你可能注意到了自定义验证器指令是用 <code>useExisting</code> 而不是 <code>useClass</code> 来实例化的。注册的验证器必须是这个 <code>ForbiddenValidatorDirective</code> 实例本身，也就是表单中 <code>forbiddenName</code> 属性被绑定到了"bob"的那个。如果用 <code>useClass</code> 来代替 <code>useExisting</code>，就会注册一个新的类实例，而它是没有 <code>forbiddenName</code> 的。</p><p translation-origin="off">You may have noticed that the custom validation directive is instantiated with <code>useExisting</code>
rather than <code>useClass</code>. The registered validator must be <em>this instance</em> of
the <code>ForbiddenValidatorDirective</code>—the instance in the form with
its <code>forbiddenName</code> property bound to “bob". If you were to replace
<code>useExisting</code> with <code>useClass</code>, then you’d be registering a new class instance, one that
doesn’t have a <code>forbiddenName</code>.</p>

</div>
<h2 translation-result="" id="control-status-css-classes">表示控件状态的 CSS 类<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/form-validation#control-status-css-classes"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="control-status-css-classes">Control status CSS classes<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/form-validation#control-status-css-classes"><i class="material-icons">link</i></a></h2>

<p translation-result="">像 AngularJS 中一样，Angular 会自动把很多控件属性作为 CSS 类映射到控件所在的元素上。你可以使用这些类来根据表单状态给表单控件元素添加样式。目前支持下列类：</p><p translation-origin="off">Like in AngularJS, Angular automatically mirrors many control properties onto the form control element as CSS classes. You can use these classes to style form control elements according to the state of the form. The following classes are currently supported:</p>

<ul>
<li>
<p translation-origin="off"><code>.ng-valid</code></p>
</li>
<li>
<p translation-origin="off"><code>.ng-invalid</code></p>
</li>
<li>
<p translation-origin="off"><code>.ng-pending</code></p>
</li>
<li>
<p translation-origin="off"><code>.ng-pristine</code></p>
</li>
<li>
<p translation-origin="off"><code>.ng-dirty</code></p>
</li>
<li>
<p translation-origin="off"><code>.ng-untouched</code></p>
</li>
<li>
<p translation-origin="off"><code>.ng-touched</code></p>
</li>
</ul>
<p translation-result="">这个英雄表单使用 <code>.ng-valid</code> 和 <code>.ng-invalid</code> 来设置每个表单控件的边框颜色。</p><p translation-origin="off">The hero form uses the <code>.ng-valid</code> and <code>.ng-invalid</code> classes to
set the color of each form control's border.</p>

<code-example path="form-validation/src/assets/forms.css" title="forms.css (status classes)" ng-version="6.0.0"><div style="display: none">

.ng-valid[required], .ng-valid.required  {
  border-left: 5px solid #42A948; /* green */
}

.ng-invalid:not(form)  {
  border-left: 5px solid #a94442; /* red */
}


</div><!----><header class="ng-star-inserted">forms.css (status classes)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from forms.css (status classes)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="pun">.</span><span class="pln">ng</span><span class="pun">-</span><span class="pln">valid</span><span class="pun">[</span><span class="pln">required</span><span class="pun">],</span><span class="pln"> </span><span class="pun">.</span><span class="pln">ng</span><span class="pun">-</span><span class="pln">valid</span><span class="pun">.</span><span class="pln">required  </span><span class="pun">{</span><span class="pln">
  border</span><span class="pun">-</span><span class="pln">left</span><span class="pun">:</span><span class="pln"> </span><span class="lit">5px</span><span class="pln"> solid </span><span class="com">#42A948; /* green */</span><span class="pln">
</span><span class="pun">}</span><span class="pln">

</span><span class="pun">.</span><span class="pln">ng</span><span class="pun">-</span><span class="pln">invalid</span><span class="pun">:</span><span class="kwd">not</span><span class="pun">(</span><span class="pln">form</span><span class="pun">)</span><span class="pln">  </span><span class="pun">{</span><span class="pln">
  border</span><span class="pun">-</span><span class="pln">left</span><span class="pun">:</span><span class="pln"> </span><span class="lit">5px</span><span class="pln"> solid </span><span class="com">#a94442; /* red */</span><span class="pln">
</span><span class="pun">}</span></code>
    </pre></aio-code></code-example>
<p translation-result=""><strong>你可以运行<live-example ng-version="6.0.0"><span><!----><!----><!----><!----><span class="ng-star-inserted"><a target="_blank" href="https://angular.cn/generated/live-examples/form-validation/stackblitz.html" title="在线例子">在线例子</a><!----><span class="ng-star-inserted"> / <a download="" title="下载范例" href="https://angular.cn/generated/zips/form-validation/form-validation.zip">下载范例</a></span></span></span></live-example>来查看完整的响应式和模板驱动表单的代码。</strong></p><p translation-origin="off"><strong>You can run the <live-example ng-version="6.0.0"><span><!----><!----><!----><!----><span class="ng-star-inserted"><a target="_blank" href="https://angular.cn/generated/live-examples/form-validation/stackblitz.html" title="在线例子">在线例子</a><!----><span class="ng-star-inserted"> / <a download="" title="下载范例" href="https://angular.cn/generated/zips/form-validation/form-validation.zip">下载范例</a></span></span></span></live-example> to see the complete reactive and template-driven example code.</strong></p>


</div>
<!-- links to this doc:
 - guide/reactive-forms
-->
<!-- links from this doc:
 - api/common/NgIf
 - api/core/Directive
 - api/core/Input
 - api/forms/AbstractControl
 - api/forms/FormControl
 - api/forms/FormControlName
 - api/forms/FormGroup
 - api/forms/MinLengthValidator
 - api/forms/NG_VALIDATORS
 - api/forms/NgModel
 - api/forms/Validator
 - api/forms/ValidatorFn
 - api/forms/Validators
 - guide/form-validation#adding-to-reactive-forms
 - guide/form-validation#adding-to-template-driven-forms
 - guide/form-validation#built-in-validators
 - guide/form-validation#control-status-css-classes
 - guide/form-validation#custom-validators
 - guide/form-validation#form-validation
 - guide/form-validation#reactive-component-class
 - guide/form-validation#reactive-form-validation
 - guide/form-validation#template-driven-validation
 - guide/form-validation#validator-functions
 - guide/form-validation#why-check-dirty-and-touched
 - guide/form-validation#why-check-emdirtyem-and-emtouchedem
 - guide/forms
 - guide/reactive-forms
 - https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation
--></div></aio-doc-viewer><aio-dt><!----></aio-dt></section></mat-sidenav-content></mat-sidenav-container><!----><div class="toc-container no-print ng-star-inserted" style="max-height: 3682px;"><aio-toc><!----><div class="toc-inner no-print collapsed ng-star-inserted"><!----><!----><ul class="toc-list"><!----><!----><!----><li title="表单验证link" class="h1 active ng-star-inserted"><a href="https://angular.cn/guide/form-validation#form-validation">表单验证</a></li><!----><!----><!----><li title="模板驱动验证link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/form-validation#template-driven-validation">模板驱动验证</a></li><!----><!----><!----><li title="响应式表单的验证link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/form-validation#reactive-form-validation">响应式表单的验证</a></li><!----><!----><!----><li title="验证器函数link" class="h3 ng-star-inserted"><a href="https://angular.cn/guide/form-validation#validator-functions">验证器函数</a></li><!----><!----><!----><li title="内置验证器link" class="h3 ng-star-inserted"><a href="https://angular.cn/guide/form-validation#built-in-validators">内置验证器</a></li><!----><!----><!----><li title="自定义验证器link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/form-validation#custom-validators">自定义验证器</a></li><!----><!----><!----><li title="添加响应式表单link" class="h3 ng-star-inserted"><a href="https://angular.cn/guide/form-validation#adding-to-reactive-forms">添加响应式表单</a></li><!----><!----><!----><li title="添加到模板驱动表单link" class="h3 ng-star-inserted"><a href="https://angular.cn/guide/form-validation#adding-to-template-driven-forms">添加到模板驱动表单</a></li><!----><!----><!----><li title="表示控件状态的 CSS 类link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/form-validation#control-status-css-classes">表示控件状态的 CSS 类</a></li><!----></ul><!----></div></aio-toc></div><footer class="no-print"><aio-footer><div class="grid-fluid"><!----><div class="footer-block ng-star-inserted"><h3>资源</h3><ul><!----><li class="ng-star-inserted"><a class="link" href="https://angular.cn/about" title="Angular 贡献者。">关于</a></li><li class="ng-star-inserted"><a class="link" href="https://angular.cn/resources" title="网络上的 Angular 工具、培训、博客等">资源列表</a></li><li class="ng-star-inserted"><a class="link" href="https://angular.cn/presskit" title="我们的联系方式、LOGO 和品牌">宣传资料</a></li><li class="ng-star-inserted"><a class="link" href="https://blog.angular.io/" title="Angular 官方博客">博客</a></li></ul></div><div class="footer-block ng-star-inserted"><h3>帮助</h3><ul><!----><li class="ng-star-inserted"><a class="link" href="https://stackoverflow.com/questions/tagged/angular" title="Stack Overflow: 这里的社区会回答你关于 Angular 的技术问题">Stack Overflow</a></li><li class="ng-star-inserted"><a class="link" href="https://gitter.im/angular/angular" title="和老鸟聊 Angular">Gitter</a></li><li class="ng-star-inserted"><a class="link" href="https://github.com/angular/angular/issues" title="在 github 上报告问题和建议。">报告问题</a></li><li class="ng-star-inserted"><a class="link" href="https://github.com/angular/code-of-conduct/blob/master/CODE_OF_CONDUCT.md" title="让我们彼此尊重">行为规范</a></li></ul></div><div class="footer-block ng-star-inserted"><h3>社区</h3><ul><!----><li class="ng-star-inserted"><a class="link" href="https://angular.cn/events" title="Post issues and suggestions on github.">活动</a></li><li class="ng-star-inserted"><a class="link" href="http://www.meetup.com/topics/angularjs/" title="参加聚会，向别的开发人员学习">聚会</a></li><li class="ng-star-inserted"><a class="link" href="https://twitter.com/angular" title="Twitter">Twitter</a></li><li class="ng-star-inserted"><a class="link" href="https://github.com/angular/angular" title="GitHub">GitHub</a></li><li class="ng-star-inserted"><a class="link" href="https://angular.cn/contribute" title="向 Angular 做贡献">做贡献</a></li></ul></div><div class="footer-block ng-star-inserted"><h3>多语言</h3><ul><!----><li class="ng-star-inserted"><a class="link" href="https://angular.io/" title="English Version.">English Version</a></li><li class="ng-star-inserted"><a class="link" href="https://angular.jp/" title="日本語版">日本語版</a></li></ul></div></div><p> Powered by Google ©2010-2018. 代码授权方式：<a href="https://angular.cn/license" title="License text">MIT-style License</a>. 文档授权方式：<a href="http://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a>. </p><p><span class="text-caption">本网站由第三方公司洛阳永欣维护 &nbsp;<a href="http://www.miitbeian.gov.cn/">豫ICP备16019859号-1</a></span></p><p> 当前版本：6.0.1-build.180+sha.8494cf4. </p></aio-footer></footer></aio-shell>

  <noscript>
    &lt;div class="background-sky hero"&gt;&lt;/div&gt;
    &lt;section id="intro"&gt;
      &lt;div class="hero-logo"&gt;
        &lt;img src="assets/images/logos/angular/angular.svg" width="250" height="250"&gt;
      &lt;/div&gt;
      &lt;div class="homepage-container"&gt;
        &lt;div class="hero-headline"&gt;一套框架，多种平台&lt;br&gt;移动 &amp;amp; 桌面&lt;/div&gt;
      &lt;/div&gt;
    &lt;/section&gt;
    &lt;h2 style="color: red; text-align: center; margin-top: -50px;"&gt;
      &lt;b&gt;&lt;i&gt;该网站需要浏览器支持 JavaScript &lt;/i&gt;&lt;/b&gt;
    &lt;/h2&gt;
  </noscript>


<script type="text/javascript" src="./Angular - 表单验证_files/runtime.e7e60529879ffb07e28e.js.下载"></script><script type="text/javascript" src="./Angular - 表单验证_files/polyfills.56dafdd128abda80a86c.js.下载"></script><script type="text/javascript" src="./Angular - 表单验证_files/main.e580488e21fdad9d749c.js.下载"></script><div class="cdk-visually-hidden" aria-atomic="true" aria-live="polite"></div></body></html>