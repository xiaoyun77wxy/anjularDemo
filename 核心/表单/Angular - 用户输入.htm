<!DOCTYPE html>
<!-- saved from url=(0035)https://angular.cn/guide/user-input -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  
  <title>Angular - 用户输入</title>
  <!--<base href="/">--><base href=".">

  <meta name="viewport" content="width=device-width, initial-scale=1">

  <link rel="icon" type="image/x-icon" href="https://angular.cn/favicon.ico">
  <link rel="icon" type="image/x-icon" href="https://angular.cn/assets/images/favicons/favicon.ico">
  <link rel="icon" type="image/png" href="https://angular.cn/assets/images/favicons/favicon-32x32.png" sizes="32x32">
  <link rel="icon" type="image/png" href="https://angular.cn/assets/images/favicons/favicon-194x194.png" sizes="194x194">
  <link rel="icon" type="image/png" href="https://angular.cn/assets/images/favicons/favicon-96x96.png" sizes="96x96">
  <link rel="icon" type="image/png" href="https://angular.cn/assets/images/favicons/favicon-16x16.png" sizes="16x16">
  <link rel="apple-touch-icon" sizes="144x144" href="https://angular.cn/assets/images/favicons/apple-touch-icon-144x144.png">
  <link rel="apple-touch-icon-precomposed" sizes="144x144" href="https://angular.cn/assets/images/favicons/apple-touch-icon-144x144.png">

  <!-- NOTE: These need to be kept in sync with `ngsw-manifest.json`. -->
  <link href="./Angular - 用户输入_files/Material_Icons.css" rel="stylesheet">
  <link href="./Angular - 用户输入_files/Droid_Sans_Mono.css" rel="stylesheet">
  <link href="./Angular - 用户输入_files/font-awesome.min.css" rel="stylesheet">
  <!-- -->

  <link rel="manifest" href="https://angular.cn/pwa-manifest.json">
  <meta name="theme-color" content="#1976d2">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-status-bar-style" content="translucent">

  <script async="" src="./Angular - 用户输入_files/analytics.js.下载"></script><script>
    // Dynamically, pre-emptively, add `noindex`, which will be removed when the doc is ready and valid
    tag = document.createElement('meta'); tag.name = 'robots'; tag.content = 'noindex';
    document.head.appendChild(tag);
  </script>

  <!-- Google Analytics -->
  <script>
  // Note this is a customised version of the GA tracking snippet
  // See the comments below for more info
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;
  ~i.name.indexOf('NG_DEFER_BOOTSTRAP')|| // only load library if not running e2e tests
  m.parentNode.insertBefore(a,m)
  })(window,document,'script','assets/js/analytics.js','ga');
  </script>
  <!-- End Google Analytics -->

  <script>
    // Report fatal errors to Google Analytics
    window.onerror = function() {
      ga('send', 'exception', {exDescription: formatError.apply(null, arguments), exFatal: true});

      function formatError(msg, url, line, col, e) {
        var stack;
        msg = msg.replace(/^Error: /, '');
        if (e) {
          stack = e.stack
              // strip the leading "Error: " from the stack trace
              .replace(/^Error: /, '')
              // strip the message from the stack trace, if present
              .replace(msg + '\n', '')
              // strip leading spaces
              .replace(/^ +/gm, '')
              // strip all leading "at " for each frame
              .replace(/^at /gm, '')
              // replace long urls with just the last segment: `filename:line:column`
              .replace(/(?: \(|@)http.+\/([^/)]+)\)?(?:\n|$)/gm, '@$1\n')
              // replace "eval code" in Edge
              .replace(/ *\(eval code(:\d+:\d+)\)(?:\n|$)/gm, '@???$1\n')
        } else {
          line = line || '?';
          col = col || '?';
          stack = url + ':' + line + ':' + col;
        }
        return (msg + '\n' + stack).substr(0, 150);
      }
    };
  </script>

  <script>
    if (window.document.documentMode) {
      // polyfill IE11 in a blocking way
      var s = document.createElement('script');
      s.src = 'generated/ie-polyfills.min.js';
      document.head.appendChild(s);
    } else if (!Object.assign) {
      // polyfill other non-evergreen browsers in a blocking way
      var polyfillUrl = "https://cdn.polyfill.io/v2/polyfill.min.js?features=default,Array.prototype.find&flags=gated&unknown=polyfill";

      // send a blocking XHR to fetch the polyfill
      // then append it to the document so that its eval-ed synchronously
      // this is required because the method used for IE is not reliable with other non-evergreen browsers
      var xhr = new XMLHttpRequest();
      xhr.addEventListener("load", function() {
        var s = document.createElement('script');
        s.type = 'text/javascript';
        var code = this.responseText;
        s.appendChild(document.createTextNode(code));
        document.head.appendChild(s);
      });
      xhr.open("GET", polyfillUrl, false);
      xhr.send();
    }
  </script>

  <script>
    //load CE polyfill
    //HACK: webpack's html plugin mangles the document.write calls if we don't trick it.

    //load the ES5 shim for browsers with native CE support
    function loadCustomElementsShim(){
      document.write('<scri' + 'pt src="assets/js/native-shim.js"><' + '/script>');
    }

    //load the full custom elements polyfill for browsers without support
    function loadCustomElementsPolyfill(){
      document.write('<scri' + 'pt src="assets/js/custom-elements.min.js"><' + '/script>');
    }
    //detect if we have native CE support
    if(!window.customElements){
      loadCustomElementsPolyfill();
    }
    else {
      loadCustomElementsShim();
    }
  </script><script src="./Angular - 用户输入_files/native-shim.js.下载"></script>

<link rel="stylesheet" href="./Angular - 用户输入_files/styles.613b7c8de73e274bd4c6.css"><style>@media screen and (-ms-high-contrast:active){.mat-toolbar{outline:solid 1px}}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media (max-width:599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}</style><style>.mat-button,.mat-flat-button,.mat-icon-button,.mat-stroked-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;overflow:visible}.mat-button[disabled],.mat-flat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner{border:0}.mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{transition:none;opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:1}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-raised-button:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-raised-button[disabled]{box-shadow:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}.mat-flat-button:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-fab::-moz-focus-inner{border:0}.mat-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-fab[disabled]{box-shadow:none}.mat-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}.mat-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-mini-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-mini-fab[disabled]{box-shadow:none}.mat-mini-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}.mat-mini-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button .mat-icon,.mat-icon-button i{line-height:24px}.mat-button-focus-overlay,.mat-button-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-focus-overlay{background-color:rgba(0,0,0,.12);border-radius:inherit;opacity:0;transition:opacity .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1)}@media screen and (-ms-high-contrast:active){.mat-button-focus-overlay{background-color:rgba(255,255,255,.5)}}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}@media screen and (-ms-high-contrast:active){.mat-button,.mat-fab,.mat-flat-button,.mat-icon-button,.mat-mini-fab,.mat-raised-button{outline:solid 1px}}</style><style>.mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1,1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}</style><style>.mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-opened{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:background-color,visibility}@media screen and (-ms-high-contrast:active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%,0,0)}@media screen and (-ms-high-contrast:active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media screen and (-ms-high-contrast:active){.mat-drawer.mat-drawer-end,[dir=rtl] .mat-drawer{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer{transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%,0,0)}.mat-drawer:not(.mat-drawer-side){box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12)}.mat-sidenav-fixed{position:fixed}</style><script charset="utf-8" src="./Angular - 用户输入_files/live-example-live-example-module-ngfactory.76888e8a441aab262101.js.下载"></script><style>.mat-progress-bar{display:block;height:5px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:'';display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2s infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2s infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(.5,0,.70173,.49582);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(.30244,.38135,.55,.95635);transform:translateX(83.67142%)}100%{transform:translateX(200.61106%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(.08)}36.65%{animation-timing-function:cubic-bezier(.33473,.12482,.78584,1);transform:scaleX(.08)}69.15%{animation-timing-function:cubic-bezier(.06,.11,.6,1);transform:scaleX(.66148)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:translateX(37.65191%)}48.35%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:translateX(84.38617%)}100%{transform:translateX(160.27778%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:scaleX(.08)}19.15%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:scaleX(.4571)}44.15%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:scaleX(.72796)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-10px)}}</style><script charset="utf-8" src="./Angular - 用户输入_files/code-code-example-module-ngfactory_code-code-tabs-module-ngfactory.6a5aabadc81dbdfa0f4e.js.下载"></script><script charset="utf-8" src="./Angular - 用户输入_files/code-code-tabs-module-ngfactory.8315a94f020cd25fe92d.js.下载"></script><script charset="utf-8" src="./Angular - 用户输入_files/code-code-example-module-ngfactory.d0ec50584c7428d1d6ed.js.下载"></script><script charset="utf-8" src="./Angular - 用户输入_files/12.50857b4475720140b255.js.下载"></script><style>.mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.mat-tab-label.mat-tab-disabled{cursor:default}.mat-tab-label.mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (max-width:599px){.mat-tab-label{padding:0 12px}}@media (max-width:959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs] .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}</style><style>.mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.mat-tab-label.mat-tab-disabled{cursor:default}.mat-tab-label.mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (max-width:599px){.mat-tab-label{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media screen and (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-header-pagination{position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-tab-labels{display:flex}</style><style>.mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}</style></head>
<body>

  <aio-shell ng-version="6.0.0" class="mode-stable sidenav-open page-guide-user-input folder-guide view-SideNav aio-notification-hide "><div id="top-of-page"></div><!----><mat-toolbar class="app-toolbar no-print mat-toolbar mat-primary mat-toolbar-multiple-rows" color="primary"><mat-toolbar-row class="notification-container mat-toolbar-row"><aio-notification actionurl="https://bit.ly/angular-survey-2018" buttontext="Go to survey" expirationdate="2018-01-19" icon="insert_comment" iconlabel="Survey" notificationid="survey-january-2018" class="ng-tns-c2-0 ng-trigger ng-trigger-hideAnimation" style="height: 0px;"><a class="content" href="https://bit.ly/angular-survey-2018"><mat-icon class="icon mat-icon" role="img" aria-hidden="true" aria-label="Survey"><svg fill="#FFFFFF" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M20 2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg></mat-icon><span class="message"> Help Angular by taking a <b>1 minute survey</b>! </span><span class="action-button">Go to survey</span></a><button class="close-button mat-icon-button" aria-label="Close" mat-icon-button=""><span class="mat-button-wrapper"><mat-icon aria-label="Dismiss notification" class="mat-icon ng-tns-c2-0" role="img" svgicon="close" aria-hidden="true"><svg fill="#ffffff" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg></mat-icon></span><div class="mat-button-ripple mat-ripple mat-button-ripple-round" matripple=""></div><div class="mat-button-focus-overlay"></div></button></aio-notification></mat-toolbar-row><mat-toolbar-row class="mat-toolbar-row"><button class="hamburger mat-button" mat-button="" title="Docs menu"><span class="mat-button-wrapper"><mat-icon class="mat-icon" role="img" svgicon="menu" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"></path></svg></mat-icon></span><div class="mat-button-ripple mat-ripple" matripple=""></div><div class="mat-button-focus-overlay"></div></button><a class="nav-link home" href="https://angular.cn/"><!----><img alt="Home" height="40" src="./Angular - 用户输入_files/logo-nav@2x.png" title="Home" width="150" class="ng-star-inserted"><!----></a><!----><aio-top-menu class="ng-star-inserted"><ul role="navigation"><!----><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/features" title="特性">特性</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/docs" title="文档">文档</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/resources" title="资源">资源</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/events" title="会议">会议</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://blog.angular.io/" title="博客">博客</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/translations/cn/home" title="关于中文版">关于中文版</a></li></ul></aio-top-menu><aio-search-box class="search-container"><input aria-label="search" placeholder="搜索" type="search"></aio-search-box></mat-toolbar-row></mat-toolbar><!----><mat-sidenav-container class="sidenav-container mat-drawer-container mat-sidenav-container mat-drawer-transition has-floating-toc" role="main"><!----><div class="mat-drawer-backdrop ng-star-inserted"></div><div tabindex="-1" class="cdk-visually-hidden cdk-focus-trap-anchor"></div><mat-sidenav class="sidenav mat-drawer mat-sidenav ng-tns-c6-1 ng-trigger ng-trigger-transform mat-drawer-side ng-star-inserted" tabindex="-1" style="transform: translate3d(0px, 0px, 0px); visibility: visible;"><!----><aio-nav-menu><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-1 collapsed" href="https://angular.cn/guide/quickstart" title="Angular 破冰"> 快速上手 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-1 expanded" type="button" title="此《英雄指南》教程会带你用 TypeScript 一步步创建一个 Angular 应用。" aria-pressed="true"> 教程 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-1 expanded"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial" title="第一部分：《英雄指南》教程简介"> 1. 简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt0" title="第二部分：创建应用的外壳"> 2. 应用的“外壳” </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt1" title="第三部分：构建一个简单的英雄编辑器"> 3. 英雄编辑器 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt2" title="第四部分：构建一个主从结构的页面，用于展现英雄列表"> 4. 显示英雄列表 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt3" title="第五部分：把主从结构的页面重构成多个组件"> 5. 主从组件 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt4" title="第六部分：创建一个可复用的服务来管理英雄数据"> 6. 服务 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt5" title="第七部分：添加 Angular 路由器，并且学习在视图之间导航"> 7. 路由 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt6" title="第八部分：通过 HTTP 来获取并保存英雄数据"> 8. HTTP </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-1 expanded selected" type="button" title="学习 Angular 的核心知识" aria-pressed="true"> 核心知识 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-1 expanded selected"><!----><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 expanded" type="button" title="Angular 应用的基本构造块。" aria-pressed="true"> 架构 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 expanded"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/architecture" title="Angular 应用的基本构造块"> 架构概览 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/architecture-modules" title="关于模块。"> 模块（NgModule）简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/architecture-components" title="关于组件、模板和视图。"> 组件简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/architecture-services" title="关于服务与依赖注入。"> 服务与 DI 简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/architecture-next-steps" title="学完基础知识之后……"> 后续步骤 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 expanded" type="button" title="使用数据绑定构建动态视图" aria-pressed="true"> 组件与模板 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 expanded"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/displaying-data" title="属性绑定可以帮助应用把数据显示在界面上"> 显示数据 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/template-syntax" title="学习如何写模板，以便借助数据绑定机制显示数据并响应事件。"> 模板语法 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/lifecycle-hooks" title="Angular 调用指令和组件的生命周期钩子函数，包括它的创建、变更和销毁时。"> 生命周期钩子 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/component-interaction" title="在不同的指令和组件之间共享信息"> 组件交互 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/component-styles" title="添加专属于某个组件的样式"> 组件样式 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/elements" title="把组件转换成自定义元素。"> Angular 自定义元素 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/dynamic-component-loader" title="动态加载组件"> 动态组件 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/attribute-directives" title="属性型指令把行为添加到现有元素上。"> 属性型指令 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/structural-directives" title="结构型指令可以操纵页面的布局"> 结构型指令 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/pipes" title="管道可以在模板中转换显示的内容。"> 管道 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/animations" title="Angular 动画体系指南"> 动画 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 expanded selected" type="button" title="Angular 的表单" aria-pressed="true"> 表单 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 expanded selected"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded selected" href="https://angular.cn/guide/user-input" title="用户输入触发 DOM 事件。我们通过事件绑定来监听它们，把更新过的数据导入回我们的组件和 model。"> 用户输入 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/forms" title="表单可以创建集中、高效、引人注目的输入体验。Angular 表单可以协调一组数据绑定控件，跟踪变更，验证输入，并表达错误信息。"> 模板驱动表单 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/form-validation" title="验证用户的表单输入"> 表单验证 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/reactive-forms" title="使用 FormBuilder 、分组和数组创建响应式表单。"> 响应式表单 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dynamic-form" title="使用FormGroup渲染动态表单"> 动态表单 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Observable 与 RxJS" aria-pressed="false"> Observable 与 RxJS <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/observables" title=""> 可观察对象(Observable) </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/rx-library" title=""> RxJS 库 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/observables-in-angular" title=""> Angular 中的可观察对象 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/practical-observable-usage" title=""> 用法实战 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/comparing-observables" title=""> 与其它技术的比较 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/bootstrapping" title="在应用的根模块（AppModule）中告诉 Angular 如何构造并引导引用。"> 引导启动 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Angular 中的模块" aria-pressed="false"> Angular 模块 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ngmodules" title="使用 NgModule 让你的应用更高效"> NgModule 简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ngmodule-vs-jsmodule" title="JavaScript 模块和 NgModule 之间的差异"> JS 模块 vs NgModule </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/frequent-ngmodules" title="介绍最常用的 Angular 模块"> 常用模块 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/module-types" title="介绍特性模块的几种类型"> 特性模块的分类 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/entry-components" title="关于 Angular 中入口组件的一切"> 入口组件 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/feature-modules" title="创建特性模块，以组织你的代码"> 特性模块 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/providers" title="服务提供商与 Angular 模块"> 服务提供商 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/singleton-services" title="创建单例应用"> 单例应用 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/lazy-loading-ngmodules" title="惰性加载模块，以提高应用的性能"> 惰性加载的特性模块 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/sharing-ngmodules" title="共享 Angular 模块让你的应用现代化。"> 共享 Angular 模块 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ngmodule-api" title="理解 NgModule 的那些细节。"> NgModule API </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ngmodule-faq" title="回答关于 NgModules 的常见问题。"> NgModule 常见问题 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="依赖注入：创建并注入各种服务。" aria-pressed="false"> 依赖注入 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dependency-injection-pattern" title="学习 Angular 依赖注入系统背后的依赖注入模式"> 依赖注入模式 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dependency-injection" title="Angular 的依赖注入系统能够为 Angular 创建的类创建并交付它们所依赖的服务。"> Angular 依赖注入 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/hierarchical-dependency-injection" title="Angular 的多级注入体系会建立与组件平行的注入器树。"> 多级注入器 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dependency-injection-in-action" title="依赖注入的使用技巧"> DI 实用技巧 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/http" title="通过 HTTP 协议与远程服务器对话。"> HttpClient </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/router" title="揭示如何通过 Angular 路由进行基本的屏幕导航。"> 路由与导航 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/testing" title="测试 Angular 应用的技巧与实践。"> 测试 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/cheatsheet" title="关于 Angular 常用编码技术的快速指南。"> 速查表 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-1 collapsed" type="button" title="把 Angular 用到你的实际工作中的一些技巧" aria-pressed="false"> 其它技术 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-1 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/i18n" title="把应用模板中的文本翻译成多种语言。"> 国际化 (i18n) </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/language-service" title="使用 Angular 语言服务来为开发提速。"> 语言服务 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/security" title="Angular 应用开发中的安全技术。"> 安全 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="环境准备与部署" aria-pressed="false"> 环境准备与部署 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/setup" title="在你自己的机器上安装 Angular QuickStart 种子，以便更快、更高效的开发。"> 搭建本地开发环境 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/setup-systemjs-anatomy" title="基于 SystemJS 的本地开发环境内幕。"> 搭建方式剖析 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/browser-support" title="浏览器支持与 Polyfills 指南"> 浏览器支持 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/npm-packages" title="建议的 npm 包，以及如何指定包的依赖。"> npm 包 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/typescript-configuration" title="给 Angular 开发者的 TypeScript 配置。"> TypeScript 配置 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/aot-compiler" title="学习如何使用 AOT 预编译器。"> 预先（AOT）编译 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/deployment" title="学习如何部署你的 Angular 应用。"> 部署 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/custom-elements" title="把 Angular 组件用作自定义元素。"> 自定义元素 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Angular 的 Service Worker：控制应用的资源缓存。" aria-pressed="false"> Service Worker <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-intro" title="Angular 对 Service Worker 的实现提升了慢速或不稳定的网络连接下的用户体验。"> 简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-getting-started" title="在 CLI 项目中启用 Service Worker，并在浏览器中查看效果。"> 快速起步 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-communications" title="那些能让你和 Angular 的 Service Worker 通讯的服务类。"> 与 Service Worker 通讯 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-devops" title="使用 Service Worker 运行应用、管理应用更新、调试以及杀掉正在运行的应用。"> 生产环境下的 Service Worker </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-config" title="配置 Service Worker 的缓存行为。"> Service Worker 配置 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Angular 的发布实践，更新计划以及与更新有关的资源。" aria-pressed="false"> 保持最新 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/updating" title="关于如何把 Angular 应用升级到最新版的信息。"> 更新你的项目 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/releases" title="Angular 的版本、发布、支持与弃用策略。"> Angular 的版本发布 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="把 AngularJS 应用增量式的升级到 Angular。" aria-pressed="false"> 从 AngularJS 升级 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/upgrade" title="把 AngularJS 应用增量式的升级到 Angular。"> 升级步骤 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ajs-quick-reference" title="学习如何把 AngularJS 的概念映射到 Angular 中。"> AngularJS 与 Angular 的概念对照 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/universal" title="使用 Angular Universal 在服务端渲染 HTML。">  服务端渲染 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/visual-studio-2015" title="在 Visual Studio 2015 中使用快速起步中的文件"> Visual Studio 2015 快速上手 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/styleguide" title="写出 Angular 风格的程序"> 风格指南 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/glossary" title="Angular 中最重要的词汇的简要定义。"> 词汇表 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-1 collapsed" href="https://angular.cn/api" title="关于 Angular 中类和值的详细信息。"> API 参考手册 </a></div><!----></aio-nav-item></aio-nav-menu><div class="doc-version"><aio-select><div class="form-select-menu"><button class="form-select-button"><strong></strong><!---->stable (v6.0.0) </button><!----></div></aio-select></div></mat-sidenav><div tabindex="-1" class="cdk-visually-hidden cdk-focus-trap-anchor"></div><!----><mat-sidenav-content cdkscrollable="" class="mat-drawer-content mat-sidenav-content ng-star-inserted" style="margin-left: 262px; margin-right: 0px;"><section class="sidenav-content" role="content" id="guide-user-input"><aio-mode-banner><!----></aio-mode-banner><aio-doc-viewer class=""><div style="opacity: 1; transition: all 200ms ease-in-out;">
<div class="content">
<h1 translation-result="" id="user-input">用户输入<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/user-input#user-input"><i class="material-icons">link</i></a></h1><aio-toc class="embedded"></aio-toc><h1 translation-origin="off" id="user-input">User Input<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/user-input#user-input"><i class="material-icons">link</i></a></h1>

<p translation-result="">当用户点击链接、按下按钮或者输入文字时，这些用户动作都会产生 DOM 事件。
本章解释如何使用 Angular 事件绑定语法把这些事件绑定到事件处理器。</p><p translation-origin="off">User actions such as clicking a link, pushing a button, and entering
text raise DOM events.
This page explains how to bind those events to component event handlers using the Angular
event binding syntax.</p>

<p translation-result="">运行<live-example ng-version="6.0.0"><span><!----><!----><!----><!----><span class="ng-star-inserted"><a target="_blank" href="https://angular.cn/generated/live-examples/user-input/stackblitz.html" title="在线例子">在线例子</a><!----><span class="ng-star-inserted"> / <a download="" title="下载范例" href="https://angular.cn/generated/zips/user-input/user-input.zip">下载范例</a></span></span></span></live-example></p><p translation-origin="off">Run the <live-example ng-version="6.0.0"><span><!----><!----><!----><!----><span class="ng-star-inserted"><a target="_blank" href="https://angular.cn/generated/live-examples/user-input/stackblitz.html" title="在线例子">在线例子</a><!----><span class="ng-star-inserted"> / <a download="" title="下载范例" href="https://angular.cn/generated/zips/user-input/user-input.zip">下载范例</a></span></span></span></live-example>.</p>

<h2 translation-result="" id="binding-to-user-input-events">绑定到用户输入事件<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/user-input#binding-to-user-input-events"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="binding-to-user-input-events">Binding to user input events<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/user-input#binding-to-user-input-events"><i class="material-icons">link</i></a></h2>

<p translation-result="">你可以使用 <a href="https://angular.cn/guide/template-syntax#event-binding">Angular 事件绑定</a>机制来响应任何 <a href="https://developer.mozilla.org/en-US/docs/Web/Events">DOM 事件</a>。
许多 DOM 事件是由用户输入触发的。绑定这些事件可以获取用户输入。</p><p translation-origin="off">You can use <a href="https://angular.cn/guide/template-syntax#event-binding">Angular event bindings</a>
to respond to any <a href="https://developer.mozilla.org/en-US/docs/Web/Events">DOM event</a>.
Many DOM events are triggered by user input. Binding to these events provides a way to
get input from the user.</p>

<p translation-result="">要绑定 DOM 事件，只要把 DOM 事件的名字包裹在圆括号中，然后用放在引号中的<a href="https://angular.cn/guide/template-syntax#template-statements">模板语句</a>对它赋值就可以了。</p><p translation-origin="off">To bind to a DOM event, surround the DOM event name in parentheses and assign a quoted
<a href="https://angular.cn/guide/template-syntax#template-statements">template statement</a> to it.</p>

<p translation-result="">下例展示了一个事件绑定，它实现了一个点击事件处理器：</p><p translation-origin="off">The following example shows an event binding that implements a click handler:</p>

<code-example path="user-input/src/app/click-me.component.ts" region="click-me-button" title="src/app/click-me.component.ts" linenums="false" ng-version="6.0.0"><div style="display: none">
&lt;button (click)="onClickMe()"&gt;Click me!&lt;/button&gt;

</div><!----><header class="ng-star-inserted">src/app/click-me.component.ts</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/click-me.component.ts">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="tag">&lt;button</span><span class="pln"> (</span><span class="atn">click</span><span class="pln">)</span><span class="pun">=</span><span class="atv">"onClickMe()"</span><span class="tag">&gt;</span><span class="pln">Click me!</span><span class="tag">&lt;/button&gt;</span></code>
    </pre></aio-code></code-example>
<a id="click"></a>
<p translation-result="">等号左边的 <code>(click)</code> 表示把按钮的点击事件作为<strong>绑定目标</strong>。
等号右边引号中的文本是<strong>模板语句</strong>，通过调用组件的 <code>onClickMe</code> 方法来响应这个点击事件。</p><p translation-origin="off">The <code>(click)</code> to the left of the equals sign identifies the button's click event as the <strong>target of the binding</strong>.
The text in quotes to the right of the equals sign
is the <strong>template statement</strong>, which responds
to the click event by calling the component's <code>onClickMe</code> method.</p>

<p translation-result="">写绑定时，需要知道模板语句的<strong>执行上下文</strong>。
出现在模板语句中的每个标识符都属于特定的上下文对象。
这个对象通常都是控制此模板的 Angular 组件。
上例中只显示了一行 HTML，那段 HTML 片段属于下面这个组件：</p><p translation-origin="off">When writing a binding, be aware of a template statement's <strong>execution context</strong>.
The identifiers in a template statement belong to a specific context object,
usually the Angular component controlling the template.
The example above shows a single line of HTML, but that HTML belongs to a larger component:</p>

<code-example path="user-input/src/app/click-me.component.ts" region="click-me-component" title="src/app/click-me.component.ts" linenums="false" ng-version="6.0.0"><div style="display: none">
@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a>({
  selector: 'app-click-me',
  template: `
    &lt;button (click)="onClickMe()"&gt;Click me!&lt;/button&gt;
    {{clickMessage}}`
})
export class ClickMeComponent {
  clickMessage = '';

  onClickMe() {
    this.clickMessage = 'You are my hero!';
  }
}

</div><!----><header class="ng-star-inserted">src/app/click-me.component.ts</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/click-me.component.ts">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="lit">@</span><a href="https://angular.cn/api/core/Component" class="code-anchor"><span class="lit">Component</span></a><span class="pun">({</span><span class="pln">
  selector</span><span class="pun">:</span><span class="pln"> </span><span class="str">'app-click-me'</span><span class="pun">,</span><span class="pln">
  </span><span class="kwd">template</span><span class="pun">:</span><span class="pln"> </span><span class="str">`
    &lt;button (click)="onClickMe()"&gt;Click me!&lt;/button&gt;
    {{clickMessage}}`</span><span class="pln">
</span><span class="pun">})</span><span class="pln">
</span><span class="kwd">export</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">ClickMeComponent</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  clickMessage </span><span class="pun">=</span><span class="pln"> </span><span class="str">''</span><span class="pun">;</span><span class="pln">

  onClickMe</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">clickMessage </span><span class="pun">=</span><span class="pln"> </span><span class="str">'You are my hero!'</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code>
    </pre></aio-code></code-example>
<p translation-result="">当用户点击按钮时，Angular 调用 <code>ClickMeComponent</code> 的 <code>onClickMe</code> 方法。</p><p translation-origin="off">When the user clicks the button, Angular calls the <code>onClickMe</code> method from <code>ClickMeComponent</code>.</p>

<h2 translation-result="" id="get-user-input-from-the-event-object">通过 $event 对象取得用户输入<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/user-input#get-user-input-from-the-event-object"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="get-user-input-from-the-event-object">Get user input from the $event object<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/user-input#get-user-input-from-the-event-object"><i class="material-icons">link</i></a></h2>

<p translation-result="">DOM 事件可以携带可能对组件有用的信息。
本节将展示如何绑定输入框的 <code>keyup</code> 事件，在每个敲击键盘时获取用户输入。</p><p translation-origin="off">DOM events carry a payload of information that may be useful to the component.
This section shows how to bind to the <code>keyup</code> event of an input box to get the user's input after each keystroke.</p>

<p translation-result="">下面的代码监听 <code>keyup</code> 事件，并将整个事件载荷 (<code>$event</code>) 传递给组件的事件处理器。</p><p translation-origin="off">The following code listens to the <code>keyup</code> event and passes the entire event payload (<code>$event</code>) to the component event handler.</p>

<code-example path="user-input/src/app/keyup.components.ts" region="key-up-component-1-template" title="src/app/keyup.components.ts (template v.1)" linenums="false" ng-version="6.0.0"><div style="display: none">
template: `
  &lt;input (keyup)="onKey($event)"&gt;
  &lt;p&gt;{{values}}&lt;/p&gt;
`

</div><!----><header class="ng-star-inserted">src/app/keyup.components.ts (template v.1)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/keyup.components.ts (template v.1)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="kwd">template</span><span class="pun">:</span><span class="pln"> </span><span class="str">`
  &lt;input (keyup)="onKey($event)"&gt;
  &lt;p&gt;{{values}}&lt;/p&gt;
`</span></code>
    </pre></aio-code></code-example>
<p translation-result="">当用户按下并释放一个按键时，触发 <code>keyup</code> 事件，Angular 在 <code>$event</code> 变量提供一个相应的 DOM
事件对象，上面的代码将它作为参数传递给 <code>onKey()</code> 方法。</p><p translation-origin="off">When a user presses and releases a key, the <code>keyup</code> event occurs, and Angular provides a corresponding
DOM event object in the <code>$event</code> variable which this code passes as a parameter to the component's <code>onKey()</code> method.</p>

<code-example path="user-input/src/app/keyup.components.ts" region="key-up-component-1-class-no-type" title="src/app/keyup.components.ts (class v.1)" linenums="false" ng-version="6.0.0"><div style="display: none">
export class KeyUpComponent_v1 {
  values = '';

  onKey(event: any) { // without type info
    this.values += event.target.value + ' | ';
  }
}

</div><!----><header class="ng-star-inserted">src/app/keyup.components.ts (class v.1)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/keyup.components.ts (class v.1)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="kwd">export</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">KeyUpComponent_v1</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  values </span><span class="pun">=</span><span class="pln"> </span><span class="str">''</span><span class="pun">;</span><span class="pln">

  onKey</span><span class="pun">(</span><span class="kwd">event</span><span class="pun">:</span><span class="pln"> any</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="com">// without type info</span><span class="pln">
    </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">values </span><span class="pun">+=</span><span class="pln"> </span><span class="kwd">event</span><span class="pun">.</span><span class="pln">target</span><span class="pun">.</span><span class="kwd">value</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">' | '</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code>
    </pre></aio-code></code-example>
<p translation-result=""><code>$event</code> 对象的属性取决于 DOM 事件的类型。例如，鼠标事件与输入框编辑事件包含了不同的信息。</p><p translation-origin="off">The properties of an <code>$event</code> object vary depending on the type of DOM event. For example,
a mouse event includes different information than a input box editing event.</p>

<p translation-result="">所有<a href="https://developer.mozilla.org/en-US/docs/Web/API/Event">标准 DOM 事件对象</a>都有一个 <code>target</code> 属性，
引用触发该事件的元素。
在本例中，<code>target</code> 是<a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement"><code>&lt;input&gt;</code> 元素</a>，
<code>event.target.value</code> 返回该元素的当前内容。</p><p translation-origin="off">All <a href="https://developer.mozilla.org/en-US/docs/Web/API/Event">standard DOM event objects</a>
have a <code>target</code> property, a reference to the element that raised the event.
In this case, <code>target</code> refers to the <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement"><code>&lt;input&gt;</code> element</a> and
<code>event.target.value</code> returns the current contents of that element.</p>

<p translation-result="">在组件的 <code>onKey()</code> 方法中，把输入框的值和分隔符 (|) 追加组件的 <code>values</code> 属性。
使用<a href="https://angular.cn/guide/template-syntax#interpolation">插值表达式</a>来把存放累加结果的 <code>values</code> 属性回显到屏幕上。</p><p translation-origin="off">After each call, the <code>onKey()</code> method appends the contents of the input box value to the list
in the component's <code>values</code> property, followed by a  separator character (|).
The <a href="https://angular.cn/guide/template-syntax#interpolation">interpolation</a>
displays the accumulating input box changes from the <code>values</code> property.</p>

<p translation-result="">假设用户输入字母“abc”，然后用退格键一个一个删除它们。
用户界面将显示：</p><p translation-origin="off">Suppose the user enters the letters "abc", and then backspaces to remove them one by one.
Here's what the UI displays:</p>

<code-example ng-version="6.0.0"><div style="display: none">
  <a href="https://angular.cn/api/router/RouterLinkWithHref" class="code-anchor">a</a> | ab | abc | ab | <a href="https://angular.cn/api/router/RouterLinkWithHref" class="code-anchor">a</a> | |
</div><!----><aio-code><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><a href="https://angular.cn/api/router/RouterLinkWithHref" class="code-anchor"><span class="pln">a</span></a><span class="pln"> </span><span class="pun">|</span><span class="pln"> ab </span><span class="pun">|</span><span class="pln"> abc </span><span class="pun">|</span><span class="pln"> ab </span><span class="pun">|</span><span class="pln"> </span><a href="https://angular.cn/api/router/RouterLinkWithHref" class="code-anchor"><span class="pln">a</span></a><span class="pln"> </span><span class="pun">|</span><span class="pln"> </span><span class="pun">|</span></code>
    </pre></aio-code></code-example>
<figure>
  <img src="./Angular - 用户输入_files/keyup1-anim.gif" alt="key up 1" width="176" height="100">
</figure>
<div class="l-sub-section">
<p translation-result="">或者，你可以用 <code>event.key</code> 替代 <code>event.target.value</code>，积累各个按键本身，这样同样的用户输入可以产生：</p><p translation-origin="off">Alternatively, you could accumulate the individual keys themselves by substituting <code>event.key</code>
for <code>event.target.value</code> in which case the same user input would produce:</p>

<code-example ng-version="6.0.0"><div style="display: none">
  <a href="https://angular.cn/api/router/RouterLinkWithHref" class="code-anchor">a</a> | b | c | backspace | backspace | backspace |

</div><!----><aio-code><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><a href="https://angular.cn/api/router/RouterLinkWithHref" class="code-anchor"><span class="pln">a</span></a><span class="pln"> </span><span class="pun">|</span><span class="pln"> b </span><span class="pun">|</span><span class="pln"> c </span><span class="pun">|</span><span class="pln"> backspace </span><span class="pun">|</span><span class="pln"> backspace </span><span class="pun">|</span><span class="pln"> backspace </span><span class="pun">|</span></code>
    </pre></aio-code></code-example>
</div>
<a id="keyup1"></a>
<h3 translation-result="" id="type-the-emeventem"><em>$event</em>的类型<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/user-input#type-the-emeventem"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="type-the-event">Type the <em>$event</em><a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/user-input#type-the-event"><i class="material-icons">link</i></a></h3>

<p translation-result="">上例将 <code>$event</code> 转换为 <code>any</code> 类型。
这样简化了代码，但是有成本。
没有任何类型信息能够揭示事件对象的属性，防止简单的错误。</p><p translation-origin="off">The example above casts the <code>$event</code> as an <code>any</code> type.
That simplifies the code at a cost.
There is no type information
that could reveal properties of the event object and prevent silly mistakes.</p>

<p translation-result="">下面的例子，使用了带类型方法：</p><p translation-origin="off">The following example rewrites the method with types:</p>

<code-example path="user-input/src/app/keyup.components.ts" region="key-up-component-1-class" title="src/app/keyup.components.ts (class v.1 - typed )" linenums="false" ng-version="6.0.0"><div style="display: none">
export class KeyUpComponent_v1 {
  values = '';


  onKey(event: KeyboardEvent) { // with type info
    this.values += (&lt;HTMLInputElement&gt;event.target).value + ' | ';
  }
}

</div><!----><header class="ng-star-inserted">src/app/keyup.components.ts (class v.1 - typed )</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/keyup.components.ts (class v.1 - typed )">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="kwd">export</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">KeyUpComponent_v1</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  values </span><span class="pun">=</span><span class="pln"> </span><span class="str">''</span><span class="pun">;</span><span class="pln">


  onKey</span><span class="pun">(</span><span class="kwd">event</span><span class="pun">:</span><span class="pln"> </span><span class="typ">KeyboardEvent</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="com">// with type info</span><span class="pln">
    </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">values </span><span class="pun">+=</span><span class="pln"> </span><span class="pun">(&lt;</span><span class="typ">HTMLInputElement</span><span class="pun">&gt;</span><span class="kwd">event</span><span class="pun">.</span><span class="pln">target</span><span class="pun">).</span><span class="kwd">value</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">' | '</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code>
    </pre></aio-code></code-example>
<p translation-result=""><code>$event</code> 的类型现在是 <code>KeyboardEvent</code>。
不是所有的元素都有 <code>value</code> 属性，所以它将 <code>target</code> 转换为输入元素。
<code>OnKey</code> 方法更加清晰的表达了它期望从模板得到什么，以及它是如何解析事件的。</p><p translation-origin="off">The <code>$event</code> is now a specific <code>KeyboardEvent</code>.
Not all elements have a <code>value</code> property so it casts <code>target</code> to an input element.
The <code>OnKey</code> method more clearly expresses what it expects from the template and how it interprets the event.</p>

<h3 translation-result="" id="passing-emeventem-is-a-dubious-practice">传入 <em>$event</em> 是靠不住的做法<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/user-input#passing-emeventem-is-a-dubious-practice"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="passing-event-is-a-dubious-practice">Passing <em>$event</em> is a dubious practice<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/user-input#passing-event-is-a-dubious-practice"><i class="material-icons">link</i></a></h3>

<p translation-result="">类型化事件对象揭露了重要的一点，即反对把整个 DOM 事件传到方法中，因为这样组件会知道太多模板的信息。
只有当它知道更多它本不应了解的 HTML 实现细节时，它才能提取信息。
这就违反了模板（<em>用户看到的</em>）和组件（<em>应用如何处理用户数据</em>）之间的分离关注原则。</p><p translation-origin="off">Typing the event object reveals a significant objection to passing the entire DOM event into the method:
the component has too much awareness of the template details.
It can't extract information without knowing more than it should about the HTML implementation.
That breaks the separation of concerns between the template (<em>what the user sees</em>)
and the component (<em>how the application processes user data</em>).</p>

<p translation-result="">下面将介绍如何用模板引用变量来解决这个问题。</p><p translation-origin="off">The next section shows how to use template reference variables to address this problem.</p>

<h2 translation-result="" id="get-user-input-from-a-template-reference-variable">从一个模板引用变量中获得用户输入<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/user-input#get-user-input-from-a-template-reference-variable"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="get-user-input-from-a-template-reference-variable">Get user input from a template reference variable<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/user-input#get-user-input-from-a-template-reference-variable"><i class="material-icons">link</i></a></h2>

<p translation-result="">还有另一种获取用户数据的方式：使用 Angular 的<a href="https://angular.cn/guide/template-syntax#ref-vars"><strong>模板引用变量</strong></a>。
这些变量提供了从模块中直接访问元素的能力。
在标识符前加上井号 (#) 就能声明一个模板引用变量。</p><p translation-origin="off">There's another way to get the user data: use Angular
<a href="https://angular.cn/guide/template-syntax#ref-vars"><strong>template reference variables</strong></a>.
These variables provide direct access to an element from within the template.
To declare a template reference variable, precede an identifier with a hash (or pound) character (#).</p>

<p translation-result="">下面的例子使用了局部模板变量，在一个超简单的模板中实现按键反馈功能。</p><p translation-origin="off">The following example uses a template reference variable
to implement a keystroke loopback in a simple template.</p>

<code-example path="user-input/src/app/loop-back.component.ts" region="loop-back-component" title="src/app/loop-back.component.ts" linenums="false" ng-version="6.0.0"><div style="display: none">
@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a>({
  selector: 'app-loop-back',
  template: `
    &lt;input #box (keyup)="0"&gt;
    &lt;p&gt;{{box.value}}&lt;/p&gt;
  `
})
export class LoopbackComponent { }

</div><!----><header class="ng-star-inserted">src/app/loop-back.component.ts</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/loop-back.component.ts">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="lit">@</span><a href="https://angular.cn/api/core/Component" class="code-anchor"><span class="lit">Component</span></a><span class="pun">({</span><span class="pln">
  selector</span><span class="pun">:</span><span class="pln"> </span><span class="str">'app-loop-back'</span><span class="pun">,</span><span class="pln">
  </span><span class="kwd">template</span><span class="pun">:</span><span class="pln"> </span><span class="str">`
    &lt;input #box (keyup)="0"&gt;
    &lt;p&gt;{{box.value}}&lt;/p&gt;
  `</span><span class="pln">
</span><span class="pun">})</span><span class="pln">
</span><span class="kwd">export</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">LoopbackComponent</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="pun">}</span></code>
    </pre></aio-code></code-example>
<p translation-result="">这个模板引用变量名叫 <code>box</code>，在 <code>&lt;input&gt;</code> 元素声明，它引用 <code>&lt;input&gt;</code> 元素本身。
代码使用 <code>box</code> 获得输入元素的 <code>value</code> 值，并通过插值表达式把它显示在 <code>&lt;p&gt;</code> 标签中。</p><p translation-origin="off">The template reference variable named <code>box</code>, declared on the <code>&lt;input&gt;</code> element,
refers to the <code>&lt;input&gt;</code> element itself.
The code uses the <code>box</code> variable to get the input element's <code>value</code> and display it
with interpolation between <code>&lt;p&gt;</code> tags.</p>

<p translation-result="">这个模板完全是完全自包含的。它没有绑定到组件，组件也没做任何事情。</p><p translation-origin="off">The template is completely self contained. It doesn't bind to the component,
and the component does nothing.</p>

<p translation-result="">在输入框中输入，就会看到每次按键时，显示也随之更新了。</p><p translation-origin="off">Type something in the input box, and watch the display update with each keystroke.</p>

<figure>
  <img src="./Angular - 用户输入_files/keyup-loop-back-anim.gif" alt="loop back" width="204" height="100">
</figure>
<div class="l-sub-section">
<p translation-result=""><strong>除非你绑定一个事件，否则这将完全无法工作。</strong></p><p translation-origin="off"><strong>This won't work at all unless you bind to an event</strong>.</p>

<p translation-result="">只有在应用做了些异步事件（如击键），Angular 才更新绑定（并最终影响到屏幕）。
本例代码将 <code>keyup</code> 事件绑定到了数字 0，这可能是最短的模板语句了。
虽然这个语句不做什么，但它满足 Angular 的要求，所以 Angular 将更新屏幕。</p><p translation-origin="off">Angular updates the bindings (and therefore the screen)
only if the app does something in response to asynchronous events, such as keystrokes.
This example code binds the <code>keyup</code> event
to the number 0, the shortest template statement possible.
While the statement does nothing useful,
it satisfies Angular's requirement so that Angular will update the screen.</p>

</div>
<p translation-result="">从模板变量获得输入框比通过 <code>$event</code> 对象更加简单。
下面的代码重写了之前 <code>keyup</code> 示例，它使用变量来获得用户输入。</p><p translation-origin="off">It's easier to get to the input box with the template reference
variable than to go through the <code>$event</code> object. Here's a rewrite of the previous
<code>keyup</code> example that uses a template reference variable to get the user's input.</p>

<code-example path="user-input/src/app/keyup.components.ts" region="key-up-component-2" title="src/app/keyup.components.ts (v2)" linenums="false" ng-version="6.0.0"><div style="display: none">
@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a>({
  selector: 'app-key-up2',
  template: `
    &lt;input #box (keyup)="onKey(box.value)"&gt;
    &lt;p&gt;{{values}}&lt;/p&gt;
  `
})
export class KeyUpComponent_v2 {
  values = '';
  onKey(value: string) {
    this.values += value + ' | ';
  }
}

</div><!----><header class="ng-star-inserted">src/app/keyup.components.ts (v2)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/keyup.components.ts (v2)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="lit">@</span><a href="https://angular.cn/api/core/Component" class="code-anchor"><span class="lit">Component</span></a><span class="pun">({</span><span class="pln">
  selector</span><span class="pun">:</span><span class="pln"> </span><span class="str">'app-key-up2'</span><span class="pun">,</span><span class="pln">
  </span><span class="kwd">template</span><span class="pun">:</span><span class="pln"> </span><span class="str">`
    &lt;input #box (keyup)="onKey(box.value)"&gt;
    &lt;p&gt;{{values}}&lt;/p&gt;
  `</span><span class="pln">
</span><span class="pun">})</span><span class="pln">
</span><span class="kwd">export</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">KeyUpComponent_v2</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  values </span><span class="pun">=</span><span class="pln"> </span><span class="str">''</span><span class="pun">;</span><span class="pln">
  onKey</span><span class="pun">(</span><span class="kwd">value</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">string</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">values </span><span class="pun">+=</span><span class="pln"> </span><span class="kwd">value</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">' | '</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code>
    </pre></aio-code></code-example>
<p translation-result="">这个方法最漂亮的一点是：组件代码从视图中获得了干净的数据值。再也不用了解 <code>$event</code> 变量及其结构了。</p><p translation-origin="off">A nice aspect of this approach is that the component gets clean data values from the view.
It no longer requires knowledge of the <code>$event</code> and its structure.</p>

<a id="key-event"></a>
<h2 translation-result="" id="key-event-filtering-with-codekeyentercode">按键事件过滤（通过 <code>key.enter</code>）<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/user-input#key-event-filtering-with-codekeyentercode"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="key-event-filtering-with-keyenter">Key event filtering (with <code>key.enter</code>)<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/user-input#key-event-filtering-with-keyenter"><i class="material-icons">link</i></a></h2>

<p translation-result=""><code>(keyup)</code> 事件处理器监听<em>每一次按键</em>。
有时只在意<em>回车</em>键，因为它标志着用户结束输入。
解决这个问题的一种方法是检查每个 <code>$event.keyCode</code>，只有键值是<em>回车</em>键时才采取行动。</p><p translation-origin="off">The <code>(keyup)</code> event handler hears <em>every keystroke</em>.
Sometimes only the <em>Enter</em> key matters, because it signals that the user has finished typing.
One way to reduce the noise would be to examine every <code>$event.keyCode</code> and take action only when the key is <em>Enter</em>.</p>

<p translation-result="">更简单的方法是：绑定到 Angular 的 <code>keyup.enter</code> 模拟事件。
然后，只有当用户敲<em>回车</em>键时，Angular 才会调用事件处理器。</p><p translation-origin="off">There's an easier way: bind to Angular's <code>keyup.enter</code> pseudo-event.
Then Angular calls the event handler only when the user presses <em>Enter</em>.</p>

<code-example path="user-input/src/app/keyup.components.ts" region="key-up-component-3" title="src/app/keyup.components.ts (v3)" linenums="false" ng-version="6.0.0"><div style="display: none">
@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a>({
  selector: 'app-key-up3',
  template: `
    &lt;input #box (keyup.enter)="onEnter(box.value)"&gt;
    &lt;p&gt;{{value}}&lt;/p&gt;
  `
})
export class KeyUpComponent_v3 {
  value = '';
  onEnter(value: string) { this.value = value; }
}

</div><!----><header class="ng-star-inserted">src/app/keyup.components.ts (v3)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/keyup.components.ts (v3)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="lit">@</span><a href="https://angular.cn/api/core/Component" class="code-anchor"><span class="lit">Component</span></a><span class="pun">({</span><span class="pln">
  selector</span><span class="pun">:</span><span class="pln"> </span><span class="str">'app-key-up3'</span><span class="pun">,</span><span class="pln">
  </span><span class="kwd">template</span><span class="pun">:</span><span class="pln"> </span><span class="str">`
    &lt;input #box (keyup.enter)="onEnter(box.value)"&gt;
    &lt;p&gt;{{value}}&lt;/p&gt;
  `</span><span class="pln">
</span><span class="pun">})</span><span class="pln">
</span><span class="kwd">export</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">KeyUpComponent_v3</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  </span><span class="kwd">value</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="str">''</span><span class="pun">;</span><span class="pln">
  onEnter</span><span class="pun">(</span><span class="kwd">value</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">string</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="kwd">value</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">value</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code>
    </pre></aio-code></code-example>
<p translation-result="">下面展示了它是如何工作的。</p><p translation-origin="off">Here's how it works.</p>

<figure>
  <img src="./Angular - 用户输入_files/keyup3-anim.gif" alt="key up 3" width="280" height="100">
</figure>
<h2 translation-result="" id="on-blur">失去焦点事件 (blur)<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/user-input#on-blur"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="on-blur">On blur<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/user-input#on-blur"><i class="material-icons">link</i></a></h2>

<p translation-result="">前上例中，如果用户没有先按回车键，而是移开了鼠标，点击了页面中其它地方，输入框的当前值就会丢失。
只有当用户按下了回车键候，组件的 <code>values</code> 属性才能更新。</p><p translation-origin="off">In the previous example, the current state of the input box
is lost if the user mouses away and clicks elsewhere on the page
without first pressing <em>Enter</em>.
The component's <code>value</code> property is updated only when the user presses <em>Enter</em>.</p>

<p translation-result="">下面通过同时监听输入框的回车键和失去焦点事件来修正这个问题。</p><p translation-origin="off">To fix this issue, listen to both the <em>Enter</em> key and the <em>blur</em> event.</p>

<code-example path="user-input/src/app/keyup.components.ts" region="key-up-component-4" title="src/app/keyup.components.ts (v4)" linenums="false" ng-version="6.0.0"><div style="display: none">
@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a>({
  selector: 'app-key-up4',
  template: `
    &lt;input #box
      (keyup.enter)="update(box.value)"
      (blur)="update(box.value)"&gt;

    &lt;p&gt;{{value}}&lt;/p&gt;
  `
})
export class KeyUpComponent_v4 {
  value = '';
  update(value: string) { this.value = value; }
}

</div><!----><header class="ng-star-inserted">src/app/keyup.components.ts (v4)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/keyup.components.ts (v4)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="lit">@</span><a href="https://angular.cn/api/core/Component" class="code-anchor"><span class="lit">Component</span></a><span class="pun">({</span><span class="pln">
  selector</span><span class="pun">:</span><span class="pln"> </span><span class="str">'app-key-up4'</span><span class="pun">,</span><span class="pln">
  </span><span class="kwd">template</span><span class="pun">:</span><span class="pln"> </span><span class="str">`
    &lt;input #box
      (keyup.enter)="update(box.value)"
      (blur)="update(box.value)"&gt;

    &lt;p&gt;{{value}}&lt;/p&gt;
  `</span><span class="pln">
</span><span class="pun">})</span><span class="pln">
</span><span class="kwd">export</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">KeyUpComponent_v4</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  </span><span class="kwd">value</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="str">''</span><span class="pun">;</span><span class="pln">
  update</span><span class="pun">(</span><span class="kwd">value</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">string</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="kwd">value</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">value</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code>
    </pre></aio-code></code-example>
<h2 translation-result="" id="put-it-all-together">把它们放在一起<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/user-input#put-it-all-together"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="put-it-all-together">Put it all together<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/user-input#put-it-all-together"><i class="material-icons">link</i></a></h2>

<p translation-result="">上一章介绍了如何<a href="https://angular.cn/guide/displaying-data">显示数据</a>。
本章展示了事件绑定技术。</p><p translation-origin="off">The previous page showed how to <a href="https://angular.cn/guide/displaying-data">display data</a>.
This page demonstrated event binding techniques.</p>

<p translation-result="">现在，在一个微型应用中一起使用它们，应用能显示一个英雄列表，并把新的英雄加到列表中。
用户可以通过输入英雄名和点击“添加”按钮来添加英雄。</p><p translation-origin="off">Now, put it all together in a micro-app
that can display a list of heroes and add new heroes to the list.
The user can add a hero by typing the hero's name in the input box and
clicking <strong>Add</strong>.</p>

<figure>
  <img src="./Angular - 用户输入_files/little-tour-anim.gif" alt="Little Tour of Heroes" width="472" height="268">
</figure>
<p translation-result="">下面就是“简版英雄指南”组件。</p><p translation-origin="off">Below is the "Little Tour of Heroes"  component.</p>

<code-example path="user-input/src/app/little-tour.component.ts" region="little-tour" title="src/app/little-tour.component.ts" linenums="false" ng-version="6.0.0"><div style="display: none">
@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a>({
  selector: 'app-little-tour',
  template: `
    &lt;input #newHero
      (keyup.enter)="addHero(newHero.value)"
      (blur)="addHero(newHero.value); newHero.value='' "&gt;

    &lt;button (click)="addHero(newHero.value)"&gt;Add&lt;/button&gt;

    &lt;ul&gt;&lt;li *<a href="https://angular.cn/api/common/NgForOf" class="code-anchor">ngFor</a>="let hero of heroes"&gt;{{hero}}&lt;/li&gt;&lt;/ul&gt;
  `
})
export class LittleTourComponent {
  heroes = ['Windstorm', 'Bombasto', 'Magneta', 'Tornado'];
  addHero(newHero: string) {
    if (newHero) {
      this.heroes.push(newHero);
    }
  }
}

</div><!----><header class="ng-star-inserted">src/app/little-tour.component.ts</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/little-tour.component.ts">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="lit">@</span><a href="https://angular.cn/api/core/Component" class="code-anchor"><span class="lit">Component</span></a><span class="pun">({</span><span class="pln">
  selector</span><span class="pun">:</span><span class="pln"> </span><span class="str">'app-little-tour'</span><span class="pun">,</span><span class="pln">
  </span><span class="kwd">template</span><span class="pun">:</span><span class="pln"> </span><span class="str">`
    &lt;input #newHero
      (keyup.enter)="addHero(newHero.value)"
      (blur)="addHero(newHero.value); newHero.value='' "&gt;

    &lt;button (click)="addHero(newHero.value)"&gt;Add&lt;/button&gt;

    &lt;ul&gt;&lt;li *</span><a href="https://angular.cn/api/common/NgForOf" class="code-anchor"><span class="str">ngFor</span></a><span class="str">="let hero of heroes"&gt;{{hero}}&lt;/li&gt;&lt;/ul&gt;
  `</span><span class="pln">
</span><span class="pun">})</span><span class="pln">
</span><span class="kwd">export</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">LittleTourComponent</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  heroes </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[</span><span class="str">'Windstorm'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'Bombasto'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'Magneta'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'Tornado'</span><span class="pun">];</span><span class="pln">
  addHero</span><span class="pun">(</span><span class="pln">newHero</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">string</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">newHero</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">heroes</span><span class="pun">.</span><span class="pln">push</span><span class="pun">(</span><span class="pln">newHero</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code>
    </pre></aio-code></code-example>
<h3 translation-result="" id="observations">小结<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/user-input#observations"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="observations">Observations<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/user-input#observations"><i class="material-icons">link</i></a></h3>

<ul>
<li>
<p translation-result="">   <strong>使用模板变量来引用元素</strong> — <code>newHero</code> 模板变量引用了 <code>&lt;input&gt;</code> 元素。
你可以在 <code>&lt;input&gt;</code> 的任何兄弟或子级元素中引用 <code>newHero</code>。</p><p translation-origin="off"><strong>Use template variables to refer to elements</strong> —
The <code>newHero</code> template variable refers to the <code>&lt;input&gt;</code> element.
You can reference <code>newHero</code> from any sibling or child of the <code>&lt;input&gt;</code> element.</p>

</li>
<li>
<p translation-result="">   <strong>传递数值，而非元素</strong> —
获取输入框的值并将<em>它</em>传递给组件的 <code>addHero</code>，而不要传递 <code>newHero</code>。</p><p translation-origin="off"><strong>Pass values, not elements</strong> —
Instead of passing the <code>newHero</code> into the component's <code>addHero</code> method,
get the input box value and pass <em>that</em> to <code>addHero</code>.</p>

</li>
<li>
<p translation-result="">   <strong>保持模板语句简单</strong> —
<code>(blur)</code> 事件被绑定到两个 JavaScript 语句。
第一句调用 <code>addHero</code>。第二句 <code>newHero.value=''</code> 在添加新英雄到列表中后清除输入框。</p><p translation-origin="off"><strong>Keep template statements simple</strong> —
The <code>(blur)</code> event is bound to two JavaScript statements.
The first statement calls <code>addHero</code>.  The second statement, <code>newHero.value=''</code>,
clears the input box after a new hero is added to the list.</p>

</li>
</ul>
<h2 translation-result="" id="source-code">源代码<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/user-input#source-code"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="source-code">Source code<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/user-input#source-code"><i class="material-icons">link</i></a></h2>

<p translation-result="">下面是本章讨论过的所有源码。</p><p translation-origin="off">Following is all the code discussed in this page.</p>

<code-tabs ng-version="6.0.0"><div style="display: none">

  <code-pane title="click-me.component.ts" path="user-input/src/app/click-me.component.ts">
import { <a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a> } from '@angular/core';

@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a>({
  selector: 'app-click-me',
  template: `
    &lt;button (click)="onClickMe()"&gt;Click me!&lt;/button&gt;
    {{clickMessage}}`
})
export class ClickMeComponent {
  clickMessage = '';

  onClickMe() {
    this.clickMessage = 'You are my hero!';
  }
}


</code-pane>

  <code-pane title="keyup.components.ts" path="user-input/src/app/keyup.components.ts">
import { <a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a> } from '@angular/core';

@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a>({
  selector: 'app-key-up1',
  template: `
    &lt;input (keyup)="onKey($event)"&gt;
    &lt;p&gt;{{values}}&lt;/p&gt;
  `
})
export class KeyUpComponent_v1 {
  values = '';

  /*
  onKey(event: any) { // without type info
    this.values += event.target.value + ' | ';
  }
  */

  onKey(event: KeyboardEvent) { // with type info
    this.values += (&lt;HTMLInputElement&gt;event.target).value + ' | ';
  }
}

//////////////////////////////////////////

@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a>({
  selector: 'app-key-up2',
  template: `
    &lt;input #box (keyup)="onKey(box.value)"&gt;
    &lt;p&gt;{{values}}&lt;/p&gt;
  `
})
export class KeyUpComponent_v2 {
  values = '';
  onKey(value: string) {
    this.values += value + ' | ';
  }
}

//////////////////////////////////////////

@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a>({
  selector: 'app-key-up3',
  template: `
    &lt;input #box (keyup.enter)="onEnter(box.value)"&gt;
    &lt;p&gt;{{value}}&lt;/p&gt;
  `
})
export class KeyUpComponent_v3 {
  value = '';
  onEnter(value: string) { this.value = value; }
}

//////////////////////////////////////////

@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a>({
  selector: 'app-key-up4',
  template: `
    &lt;input #box
      (keyup.enter)="update(box.value)"
      (blur)="update(box.value)"&gt;

    &lt;p&gt;{{value}}&lt;/p&gt;
  `
})
export class KeyUpComponent_v4 {
  value = '';
  update(value: string) { this.value = value; }
}


</code-pane>

  <code-pane title="loop-back.component.ts" path="user-input/src/app/loop-back.component.ts">
import { <a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a> } from '@angular/core';
@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a>({
  selector: 'app-loop-back',
  template: `
    &lt;input #box (keyup)="0"&gt;
    &lt;p&gt;{{box.value}}&lt;/p&gt;
  `
})
export class LoopbackComponent { }


</code-pane>

  <code-pane title="little-tour.component.ts" path="user-input/src/app/little-tour.component.ts">
import { <a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a> } from '@angular/core';

@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a>({
  selector: 'app-little-tour',
  template: `
    &lt;input #newHero
      (keyup.enter)="addHero(newHero.value)"
      (blur)="addHero(newHero.value); newHero.value='' "&gt;

    &lt;button (click)="addHero(newHero.value)"&gt;Add&lt;/button&gt;

    &lt;ul&gt;&lt;li *<a href="https://angular.cn/api/common/NgForOf" class="code-anchor">ngFor</a>="let hero of heroes"&gt;{{hero}}&lt;/li&gt;&lt;/ul&gt;
  `
})
export class LittleTourComponent {
  heroes = ['Windstorm', 'Bombasto', 'Magneta', 'Tornado'];
  addHero(newHero: string) {
    if (newHero) {
      this.heroes.push(newHero);
    }
  }
}


</code-pane>

</div><mat-tab-group class="code-tab-group mat-tab-group mat-primary" disableripple=""><mat-tab-header class="mat-tab-header mat-tab-header-pagination-controls-enabled"><div aria-hidden="true" class="mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4 mat-ripple mat-tab-header-pagination-disabled" mat-ripple=""><div class="mat-tab-header-pagination-chevron"></div></div><div class="mat-tab-label-container"><div class="mat-tab-list" role="tablist" style="transform: translate3d(0px, 0px, 0px);"><div class="mat-tab-labels"><!----><div class="mat-tab-label mat-ripple mat-tab-label-active ng-star-inserted" mat-ripple="" mattablabelwrapper="" role="tab" id="mat-tab-label-23-0" tabindex="0" aria-controls="mat-tab-content-23-0" aria-selected="true"><div class="mat-tab-label-content"><!----><!----><span class="ng-star-inserted">click-me.component.ts</span><!----><!----></div></div><div class="mat-tab-label mat-ripple ng-star-inserted" mat-ripple="" mattablabelwrapper="" role="tab" id="mat-tab-label-23-1" tabindex="-1" aria-controls="mat-tab-content-23-1" aria-selected="false"><div class="mat-tab-label-content"><!----><!----><span class="ng-star-inserted">keyup.components.ts</span><!----><!----></div></div><div class="mat-tab-label mat-ripple ng-star-inserted" mat-ripple="" mattablabelwrapper="" role="tab" id="mat-tab-label-23-2" tabindex="-1" aria-controls="mat-tab-content-23-2" aria-selected="false"><div class="mat-tab-label-content"><!----><!----><span class="ng-star-inserted">loop-back.component.ts</span><!----><!----></div></div><div class="mat-tab-label mat-ripple ng-star-inserted" mat-ripple="" mattablabelwrapper="" role="tab" id="mat-tab-label-23-3" tabindex="-1" aria-controls="mat-tab-content-23-3" aria-selected="false"><div class="mat-tab-label-content"><!----><!----><span class="ng-star-inserted">little-tour.component.ts</span><!----><!----></div></div></div><mat-ink-bar class="mat-ink-bar" style="visibility: visible; left: 0px; width: 190px;"></mat-ink-bar></div></div><div aria-hidden="true" class="mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4 mat-ripple" mat-ripple=""><div class="mat-tab-header-pagination-chevron"></div></div></mat-tab-header><div class="mat-tab-body-wrapper"><!----><mat-tab-body class="mat-tab-body ng-tns-c10-83 mat-tab-body-active ng-star-inserted" role="tabpanel" id="mat-tab-content-23-0" aria-labelledby="mat-tab-label-23-0"><div class="mat-tab-body-content ng-trigger ng-trigger-translateTab" style="transform: none;"><!----><!----><aio-code class="ng-star-inserted" style=""><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from click-me.component.ts">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><ol class="linenums"><li class="L0"><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><a href="https://angular.cn/api/core/Component" class="code-anchor"><span class="typ">Component</span></a><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'@angular/core'</span><span class="pun">;</span></li><li class="L1"><span class="pln">&nbsp;</span></li><li class="L2"><span class="lit">@</span><a href="https://angular.cn/api/core/Component" class="code-anchor"><span class="lit">Component</span></a><span class="pun">({</span></li><li class="L3"><span class="pln">  selector</span><span class="pun">:</span><span class="pln"> </span><span class="str">'app-click-me'</span><span class="pun">,</span></li><li class="L4"><span class="pln">  </span><span class="kwd">template</span><span class="pun">:</span><span class="pln"> </span><span class="str">`</span></li><li class="L5"><span class="str">    &lt;button (click)="onClickMe()"&gt;Click me!&lt;/button&gt;</span></li><li class="L6"><span class="str">    {{clickMessage}}`</span></li><li class="L7"><span class="pun">})</span></li><li class="L8"><span class="kwd">export</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">ClickMeComponent</span><span class="pln"> </span><span class="pun">{</span></li><li class="L9"><span class="pln">  clickMessage </span><span class="pun">=</span><span class="pln"> </span><span class="str">''</span><span class="pun">;</span></li><li class="L0"><span class="pln">&nbsp;</span></li><li class="L1"><span class="pln">  onClickMe</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span></li><li class="L2"><span class="pln">    </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">clickMessage </span><span class="pun">=</span><span class="pln"> </span><span class="str">'You are my hero!'</span><span class="pun">;</span></li><li class="L3"><span class="pln">  </span><span class="pun">}</span></li><li class="L4"><span class="pun">}</span></li></ol></code>
    </pre></aio-code><!----></div></mat-tab-body><mat-tab-body class="mat-tab-body ng-tns-c10-84 ng-star-inserted" role="tabpanel" id="mat-tab-content-23-1" aria-labelledby="mat-tab-label-23-1"><div class="mat-tab-body-content ng-trigger ng-trigger-translateTab" style="transform: translate3d(100%, 0px, 0px);"><!----></div></mat-tab-body><mat-tab-body class="mat-tab-body ng-tns-c10-85 ng-star-inserted" role="tabpanel" id="mat-tab-content-23-2" aria-labelledby="mat-tab-label-23-2"><div class="mat-tab-body-content ng-trigger ng-trigger-translateTab" style="transform: translate3d(100%, 0px, 0px);"><!----></div></mat-tab-body><mat-tab-body class="mat-tab-body ng-tns-c10-86 ng-star-inserted" role="tabpanel" id="mat-tab-content-23-3" aria-labelledby="mat-tab-label-23-3"><div class="mat-tab-body-content ng-trigger ng-trigger-translateTab" style="transform: translate3d(100%, 0px, 0px);"><!----></div></mat-tab-body></div></mat-tab-group></code-tabs>
<h2 translation-result="" id="summary-9">小结<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/user-input#summary-9"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="summary">Summary<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/user-input#summary"><i class="material-icons">link</i></a></h2>

<p translation-result="">你已经掌握了响应用户输入和操作的基础技术。</p><p translation-origin="off">You have mastered the basic primitives for responding to user input and gestures.</p>

<p translation-result="">这些技术对小规模演示很实用，但是在处理大量用户输入时，很容易变得累赘和笨拙。
要在数据录入字段和模型属性之间传递数据，双向数据绑定是更加优雅和简洁的方式。
下一章 <code>表单</code> 解释了如何用 <code><a href="https://angular.cn/api/forms/NgModel" class="code-anchor">NgModel</a></code> 来进行双向绑定。</p><p translation-origin="off">These techniques are useful for small-scale demonstrations, but they
quickly become verbose and clumsy when handling large amounts of user input.
Two-way data binding is a more elegant and compact way to move
values between data entry fields and model properties.
The next page, <code>Forms</code>, explains how to write
two-way bindings with <code><a href="https://angular.cn/api/forms/NgModel" class="code-anchor">NgModel</a></code>.</p>


</div>
<!-- links to this doc:
 - guide/architecture-components
 - guide/forms
-->
<!-- links from this doc:
 - api/common/NgForOf
 - api/core/Component
 - api/forms/NgModel
 - api/router/RouterLinkWithHref
 - guide/displaying-data
 - guide/template-syntax#event-binding
 - guide/template-syntax#interpolation
 - guide/template-syntax#ref-vars
 - guide/template-syntax#template-statements
 - guide/user-input#binding-to-user-input-events
 - guide/user-input#get-user-input-from-a-template-reference-variable
 - guide/user-input#get-user-input-from-the-event-object
 - guide/user-input#key-event-filtering-with-codekeyentercode
 - guide/user-input#key-event-filtering-with-keyenter
 - guide/user-input#observations
 - guide/user-input#on-blur
 - guide/user-input#passing-emeventem-is-a-dubious-practice
 - guide/user-input#passing-event-is-a-dubious-practice
 - guide/user-input#put-it-all-together
 - guide/user-input#source-code
 - guide/user-input#summary
 - guide/user-input#summary-9
 - guide/user-input#type-the-emeventem
 - guide/user-input#type-the-event
 - guide/user-input#user-input
 - https://developer.mozilla.org/en-US/docs/Web/API/Event
 - https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement
 - https://developer.mozilla.org/en-US/docs/Web/Events
--></div></aio-doc-viewer><aio-dt><!----></aio-dt></section></mat-sidenav-content></mat-sidenav-container><!----><div class="toc-container no-print ng-star-inserted" style="max-height: 3682px;"><aio-toc><!----><div class="toc-inner no-print collapsed ng-star-inserted"><!----><!----><ul class="toc-list"><!----><!----><!----><li title="用户输入link" class="h1 active ng-star-inserted"><a href="https://angular.cn/guide/user-input#user-input">用户输入</a></li><!----><!----><!----><li title="绑定到用户输入事件link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/user-input#binding-to-user-input-events">绑定到用户输入事件</a></li><!----><!----><!----><li title="通过 $event 对象取得用户输入link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/user-input#get-user-input-from-the-event-object">通过 $event 对象取得用户输入</a></li><!----><!----><!----><li title="$event的类型link" class="h3 ng-star-inserted"><a href="https://angular.cn/guide/user-input#type-the-emeventem"><em>$event</em>的类型</a></li><!----><!----><!----><li title="传入 $event 是靠不住的做法link" class="h3 ng-star-inserted"><a href="https://angular.cn/guide/user-input#passing-emeventem-is-a-dubious-practice">传入 <em>$event</em> 是靠不住的做法</a></li><!----><!----><!----><li title="从一个模板引用变量中获得用户输入link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/user-input#get-user-input-from-a-template-reference-variable">从一个模板引用变量中获得用户输入</a></li><!----><!----><!----><li title="按键事件过滤（通过 key.enter）link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/user-input#key-event-filtering-with-codekeyentercode">按键事件过滤（通过 <code>key.enter</code>）</a></li><!----><!----><!----><li title="失去焦点事件 (blur)link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/user-input#on-blur">失去焦点事件 (blur)</a></li><!----><!----><!----><li title="把它们放在一起link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/user-input#put-it-all-together">把它们放在一起</a></li><!----><!----><!----><li title="小结link" class="h3 ng-star-inserted"><a href="https://angular.cn/guide/user-input#observations">小结</a></li><!----><!----><!----><li title="源代码link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/user-input#source-code">源代码</a></li><!----><!----><!----><li title="小结link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/user-input#summary-9">小结</a></li><!----></ul><!----></div></aio-toc></div><footer class="no-print"><aio-footer><div class="grid-fluid"><!----><div class="footer-block ng-star-inserted"><h3>资源</h3><ul><!----><li class="ng-star-inserted"><a class="link" href="https://angular.cn/about" title="Angular 贡献者。">关于</a></li><li class="ng-star-inserted"><a class="link" href="https://angular.cn/resources" title="网络上的 Angular 工具、培训、博客等">资源列表</a></li><li class="ng-star-inserted"><a class="link" href="https://angular.cn/presskit" title="我们的联系方式、LOGO 和品牌">宣传资料</a></li><li class="ng-star-inserted"><a class="link" href="https://blog.angular.io/" title="Angular 官方博客">博客</a></li></ul></div><div class="footer-block ng-star-inserted"><h3>帮助</h3><ul><!----><li class="ng-star-inserted"><a class="link" href="https://stackoverflow.com/questions/tagged/angular" title="Stack Overflow: 这里的社区会回答你关于 Angular 的技术问题">Stack Overflow</a></li><li class="ng-star-inserted"><a class="link" href="https://gitter.im/angular/angular" title="和老鸟聊 Angular">Gitter</a></li><li class="ng-star-inserted"><a class="link" href="https://github.com/angular/angular/issues" title="在 github 上报告问题和建议。">报告问题</a></li><li class="ng-star-inserted"><a class="link" href="https://github.com/angular/code-of-conduct/blob/master/CODE_OF_CONDUCT.md" title="让我们彼此尊重">行为规范</a></li></ul></div><div class="footer-block ng-star-inserted"><h3>社区</h3><ul><!----><li class="ng-star-inserted"><a class="link" href="https://angular.cn/events" title="Post issues and suggestions on github.">活动</a></li><li class="ng-star-inserted"><a class="link" href="http://www.meetup.com/topics/angularjs/" title="参加聚会，向别的开发人员学习">聚会</a></li><li class="ng-star-inserted"><a class="link" href="https://twitter.com/angular" title="Twitter">Twitter</a></li><li class="ng-star-inserted"><a class="link" href="https://github.com/angular/angular" title="GitHub">GitHub</a></li><li class="ng-star-inserted"><a class="link" href="https://angular.cn/contribute" title="向 Angular 做贡献">做贡献</a></li></ul></div><div class="footer-block ng-star-inserted"><h3>多语言</h3><ul><!----><li class="ng-star-inserted"><a class="link" href="https://angular.io/" title="English Version.">English Version</a></li><li class="ng-star-inserted"><a class="link" href="https://angular.jp/" title="日本語版">日本語版</a></li></ul></div></div><p> Powered by Google ©2010-2018. 代码授权方式：<a href="https://angular.cn/license" title="License text">MIT-style License</a>. 文档授权方式：<a href="http://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a>. </p><p><span class="text-caption">本网站由第三方公司洛阳永欣维护 &nbsp;<a href="http://www.miitbeian.gov.cn/">豫ICP备16019859号-1</a></span></p><p> 当前版本：6.0.1-build.180+sha.8494cf4. </p></aio-footer></footer></aio-shell>

  <noscript>
    &lt;div class="background-sky hero"&gt;&lt;/div&gt;
    &lt;section id="intro"&gt;
      &lt;div class="hero-logo"&gt;
        &lt;img src="assets/images/logos/angular/angular.svg" width="250" height="250"&gt;
      &lt;/div&gt;
      &lt;div class="homepage-container"&gt;
        &lt;div class="hero-headline"&gt;一套框架，多种平台&lt;br&gt;移动 &amp;amp; 桌面&lt;/div&gt;
      &lt;/div&gt;
    &lt;/section&gt;
    &lt;h2 style="color: red; text-align: center; margin-top: -50px;"&gt;
      &lt;b&gt;&lt;i&gt;该网站需要浏览器支持 JavaScript &lt;/i&gt;&lt;/b&gt;
    &lt;/h2&gt;
  </noscript>


<script type="text/javascript" src="./Angular - 用户输入_files/runtime.e7e60529879ffb07e28e.js.下载"></script><script type="text/javascript" src="./Angular - 用户输入_files/polyfills.56dafdd128abda80a86c.js.下载"></script><script type="text/javascript" src="./Angular - 用户输入_files/main.e580488e21fdad9d749c.js.下载"></script><div class="cdk-visually-hidden" aria-atomic="true" aria-live="polite"></div></body></html>