<!DOCTYPE html>
<!-- saved from url=(0041)https://angular.cn/guide/component-styles -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  
  <title>Angular - 组件样式</title>
  <!--<base href="/">--><base href=".">

  <meta name="viewport" content="width=device-width, initial-scale=1">

  <link rel="icon" type="image/x-icon" href="https://angular.cn/favicon.ico">
  <link rel="icon" type="image/x-icon" href="https://angular.cn/assets/images/favicons/favicon.ico">
  <link rel="icon" type="image/png" href="https://angular.cn/assets/images/favicons/favicon-32x32.png" sizes="32x32">
  <link rel="icon" type="image/png" href="https://angular.cn/assets/images/favicons/favicon-194x194.png" sizes="194x194">
  <link rel="icon" type="image/png" href="https://angular.cn/assets/images/favicons/favicon-96x96.png" sizes="96x96">
  <link rel="icon" type="image/png" href="https://angular.cn/assets/images/favicons/favicon-16x16.png" sizes="16x16">
  <link rel="apple-touch-icon" sizes="144x144" href="https://angular.cn/assets/images/favicons/apple-touch-icon-144x144.png">
  <link rel="apple-touch-icon-precomposed" sizes="144x144" href="https://angular.cn/assets/images/favicons/apple-touch-icon-144x144.png">

  <!-- NOTE: These need to be kept in sync with `ngsw-manifest.json`. -->
  <link href="./Angular - 组件样式_files/Material_Icons.css" rel="stylesheet">
  <link href="./Angular - 组件样式_files/Droid_Sans_Mono.css" rel="stylesheet">
  <link href="./Angular - 组件样式_files/font-awesome.min.css" rel="stylesheet">
  <!-- -->

  <link rel="manifest" href="https://angular.cn/pwa-manifest.json">
  <meta name="theme-color" content="#1976d2">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-status-bar-style" content="translucent">

  <script async="" src="./Angular - 组件样式_files/analytics.js.下载"></script><script>
    // Dynamically, pre-emptively, add `noindex`, which will be removed when the doc is ready and valid
    tag = document.createElement('meta'); tag.name = 'robots'; tag.content = 'noindex';
    document.head.appendChild(tag);
  </script>

  <!-- Google Analytics -->
  <script>
  // Note this is a customised version of the GA tracking snippet
  // See the comments below for more info
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;
  ~i.name.indexOf('NG_DEFER_BOOTSTRAP')|| // only load library if not running e2e tests
  m.parentNode.insertBefore(a,m)
  })(window,document,'script','assets/js/analytics.js','ga');
  </script>
  <!-- End Google Analytics -->

  <script>
    // Report fatal errors to Google Analytics
    window.onerror = function() {
      ga('send', 'exception', {exDescription: formatError.apply(null, arguments), exFatal: true});

      function formatError(msg, url, line, col, e) {
        var stack;
        msg = msg.replace(/^Error: /, '');
        if (e) {
          stack = e.stack
              // strip the leading "Error: " from the stack trace
              .replace(/^Error: /, '')
              // strip the message from the stack trace, if present
              .replace(msg + '\n', '')
              // strip leading spaces
              .replace(/^ +/gm, '')
              // strip all leading "at " for each frame
              .replace(/^at /gm, '')
              // replace long urls with just the last segment: `filename:line:column`
              .replace(/(?: \(|@)http.+\/([^/)]+)\)?(?:\n|$)/gm, '@$1\n')
              // replace "eval code" in Edge
              .replace(/ *\(eval code(:\d+:\d+)\)(?:\n|$)/gm, '@???$1\n')
        } else {
          line = line || '?';
          col = col || '?';
          stack = url + ':' + line + ':' + col;
        }
        return (msg + '\n' + stack).substr(0, 150);
      }
    };
  </script>

  <script>
    if (window.document.documentMode) {
      // polyfill IE11 in a blocking way
      var s = document.createElement('script');
      s.src = 'generated/ie-polyfills.min.js';
      document.head.appendChild(s);
    } else if (!Object.assign) {
      // polyfill other non-evergreen browsers in a blocking way
      var polyfillUrl = "https://cdn.polyfill.io/v2/polyfill.min.js?features=default,Array.prototype.find&flags=gated&unknown=polyfill";

      // send a blocking XHR to fetch the polyfill
      // then append it to the document so that its eval-ed synchronously
      // this is required because the method used for IE is not reliable with other non-evergreen browsers
      var xhr = new XMLHttpRequest();
      xhr.addEventListener("load", function() {
        var s = document.createElement('script');
        s.type = 'text/javascript';
        var code = this.responseText;
        s.appendChild(document.createTextNode(code));
        document.head.appendChild(s);
      });
      xhr.open("GET", polyfillUrl, false);
      xhr.send();
    }
  </script>

  <script>
    //load CE polyfill
    //HACK: webpack's html plugin mangles the document.write calls if we don't trick it.

    //load the ES5 shim for browsers with native CE support
    function loadCustomElementsShim(){
      document.write('<scri' + 'pt src="assets/js/native-shim.js"><' + '/script>');
    }

    //load the full custom elements polyfill for browsers without support
    function loadCustomElementsPolyfill(){
      document.write('<scri' + 'pt src="assets/js/custom-elements.min.js"><' + '/script>');
    }
    //detect if we have native CE support
    if(!window.customElements){
      loadCustomElementsPolyfill();
    }
    else {
      loadCustomElementsShim();
    }
  </script><script src="./Angular - 组件样式_files/native-shim.js.下载"></script>

<link rel="stylesheet" href="./Angular - 组件样式_files/styles.613b7c8de73e274bd4c6.css"><style>@media screen and (-ms-high-contrast:active){.mat-toolbar{outline:solid 1px}}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media (max-width:599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}</style><style>.mat-button,.mat-flat-button,.mat-icon-button,.mat-stroked-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;overflow:visible}.mat-button[disabled],.mat-flat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner{border:0}.mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{transition:none;opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:1}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-raised-button:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-raised-button[disabled]{box-shadow:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}.mat-flat-button:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-fab::-moz-focus-inner{border:0}.mat-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-fab[disabled]{box-shadow:none}.mat-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}.mat-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-mini-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-mini-fab[disabled]{box-shadow:none}.mat-mini-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}.mat-mini-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button .mat-icon,.mat-icon-button i{line-height:24px}.mat-button-focus-overlay,.mat-button-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-focus-overlay{background-color:rgba(0,0,0,.12);border-radius:inherit;opacity:0;transition:opacity .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1)}@media screen and (-ms-high-contrast:active){.mat-button-focus-overlay{background-color:rgba(255,255,255,.5)}}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}@media screen and (-ms-high-contrast:active){.mat-button,.mat-fab,.mat-flat-button,.mat-icon-button,.mat-mini-fab,.mat-raised-button{outline:solid 1px}}</style><style>.mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1,1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}</style><style>.mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-opened{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:background-color,visibility}@media screen and (-ms-high-contrast:active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%,0,0)}@media screen and (-ms-high-contrast:active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media screen and (-ms-high-contrast:active){.mat-drawer.mat-drawer-end,[dir=rtl] .mat-drawer{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer{transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%,0,0)}.mat-drawer:not(.mat-drawer-side){box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12)}.mat-sidenav-fixed{position:fixed}</style><script charset="utf-8" src="./Angular - 组件样式_files/live-example-live-example-module-ngfactory.76888e8a441aab262101.js.下载"></script><style>.mat-progress-bar{display:block;height:5px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:'';display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2s infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2s infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(.5,0,.70173,.49582);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(.30244,.38135,.55,.95635);transform:translateX(83.67142%)}100%{transform:translateX(200.61106%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(.08)}36.65%{animation-timing-function:cubic-bezier(.33473,.12482,.78584,1);transform:scaleX(.08)}69.15%{animation-timing-function:cubic-bezier(.06,.11,.6,1);transform:scaleX(.66148)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:translateX(37.65191%)}48.35%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:translateX(84.38617%)}100%{transform:translateX(160.27778%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:scaleX(.08)}19.15%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:scaleX(.4571)}44.15%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:scaleX(.72796)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-10px)}}</style><script charset="utf-8" src="./Angular - 组件样式_files/code-code-example-module-ngfactory_code-code-tabs-module-ngfactory.6a5aabadc81dbdfa0f4e.js.下载"></script><script charset="utf-8" src="./Angular - 组件样式_files/code-code-tabs-module-ngfactory.8315a94f020cd25fe92d.js.下载"></script><script charset="utf-8" src="./Angular - 组件样式_files/code-code-example-module-ngfactory.d0ec50584c7428d1d6ed.js.下载"></script><script charset="utf-8" src="./Angular - 组件样式_files/12.50857b4475720140b255.js.下载"></script><style>.mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.mat-tab-label.mat-tab-disabled{cursor:default}.mat-tab-label.mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (max-width:599px){.mat-tab-label{padding:0 12px}}@media (max-width:959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs] .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}</style><style>.mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.mat-tab-label.mat-tab-disabled{cursor:default}.mat-tab-label.mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (max-width:599px){.mat-tab-label{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media screen and (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-header-pagination{position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-tab-labels{display:flex}</style><style>.mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}</style></head>
<body>

  <aio-shell ng-version="6.0.0" class="mode-stable sidenav-open page-guide-component-styles folder-guide view-SideNav aio-notification-hide "><div id="top-of-page"></div><!----><mat-toolbar class="app-toolbar no-print mat-toolbar mat-primary mat-toolbar-multiple-rows" color="primary"><mat-toolbar-row class="notification-container mat-toolbar-row"><aio-notification actionurl="https://bit.ly/angular-survey-2018" buttontext="Go to survey" expirationdate="2018-01-19" icon="insert_comment" iconlabel="Survey" notificationid="survey-january-2018" class="ng-tns-c2-0 ng-trigger ng-trigger-hideAnimation" style="height: 0px;"><a class="content" href="https://bit.ly/angular-survey-2018"><mat-icon class="icon mat-icon" role="img" aria-hidden="true" aria-label="Survey"><svg fill="#FFFFFF" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M20 2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg></mat-icon><span class="message"> Help Angular by taking a <b>1 minute survey</b>! </span><span class="action-button">Go to survey</span></a><button class="close-button mat-icon-button" aria-label="Close" mat-icon-button=""><span class="mat-button-wrapper"><mat-icon aria-label="Dismiss notification" class="mat-icon ng-tns-c2-0" role="img" svgicon="close" aria-hidden="true"><svg fill="#ffffff" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg></mat-icon></span><div class="mat-button-ripple mat-ripple mat-button-ripple-round" matripple=""></div><div class="mat-button-focus-overlay"></div></button></aio-notification></mat-toolbar-row><mat-toolbar-row class="mat-toolbar-row"><button class="hamburger mat-button" mat-button="" title="Docs menu"><span class="mat-button-wrapper"><mat-icon class="mat-icon" role="img" svgicon="menu" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"></path></svg></mat-icon></span><div class="mat-button-ripple mat-ripple" matripple=""></div><div class="mat-button-focus-overlay"></div></button><a class="nav-link home" href="https://angular.cn/"><!----><img alt="Home" height="40" src="./Angular - 组件样式_files/logo-nav@2x.png" title="Home" width="150" class="ng-star-inserted"><!----></a><!----><aio-top-menu class="ng-star-inserted"><ul role="navigation"><!----><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/features" title="特性">特性</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/docs" title="文档">文档</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/resources" title="资源">资源</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/events" title="会议">会议</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://blog.angular.io/" title="博客">博客</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/translations/cn/home" title="关于中文版">关于中文版</a></li></ul></aio-top-menu><aio-search-box class="search-container"><input aria-label="search" placeholder="搜索" type="search"></aio-search-box></mat-toolbar-row></mat-toolbar><!----><mat-sidenav-container class="sidenav-container mat-drawer-container mat-sidenav-container mat-drawer-transition has-floating-toc" role="main"><!----><div class="mat-drawer-backdrop ng-star-inserted"></div><div tabindex="-1" class="cdk-visually-hidden cdk-focus-trap-anchor"></div><mat-sidenav class="sidenav mat-drawer mat-sidenav ng-tns-c6-1 ng-trigger ng-trigger-transform mat-drawer-side ng-star-inserted" tabindex="-1" style="transform: translate3d(0px, 0px, 0px); visibility: visible;"><!----><aio-nav-menu><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-1 collapsed" href="https://angular.cn/guide/quickstart" title="Angular 破冰"> 快速上手 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-1 expanded" type="button" title="此《英雄指南》教程会带你用 TypeScript 一步步创建一个 Angular 应用。" aria-pressed="true"> 教程 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-1 expanded"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial" title="第一部分：《英雄指南》教程简介"> 1. 简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt0" title="第二部分：创建应用的外壳"> 2. 应用的“外壳” </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt1" title="第三部分：构建一个简单的英雄编辑器"> 3. 英雄编辑器 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt2" title="第四部分：构建一个主从结构的页面，用于展现英雄列表"> 4. 显示英雄列表 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt3" title="第五部分：把主从结构的页面重构成多个组件"> 5. 主从组件 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt4" title="第六部分：创建一个可复用的服务来管理英雄数据"> 6. 服务 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt5" title="第七部分：添加 Angular 路由器，并且学习在视图之间导航"> 7. 路由 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt6" title="第八部分：通过 HTTP 来获取并保存英雄数据"> 8. HTTP </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-1 expanded selected" type="button" title="学习 Angular 的核心知识" aria-pressed="true"> 核心知识 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-1 expanded selected"><!----><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 expanded" type="button" title="Angular 应用的基本构造块。" aria-pressed="true"> 架构 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 expanded"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/architecture" title="Angular 应用的基本构造块"> 架构概览 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/architecture-modules" title="关于模块。"> 模块（NgModule）简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/architecture-components" title="关于组件、模板和视图。"> 组件简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/architecture-services" title="关于服务与依赖注入。"> 服务与 DI 简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/architecture-next-steps" title="学完基础知识之后……"> 后续步骤 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 expanded selected" type="button" title="使用数据绑定构建动态视图" aria-pressed="true"> 组件与模板 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 expanded selected"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/displaying-data" title="属性绑定可以帮助应用把数据显示在界面上"> 显示数据 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/template-syntax" title="学习如何写模板，以便借助数据绑定机制显示数据并响应事件。"> 模板语法 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/lifecycle-hooks" title="Angular 调用指令和组件的生命周期钩子函数，包括它的创建、变更和销毁时。"> 生命周期钩子 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/component-interaction" title="在不同的指令和组件之间共享信息"> 组件交互 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded selected" href="https://angular.cn/guide/component-styles" title="添加专属于某个组件的样式"> 组件样式 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/elements" title="把组件转换成自定义元素。"> Angular 自定义元素 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dynamic-component-loader" title="动态加载组件"> 动态组件 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/attribute-directives" title="属性型指令把行为添加到现有元素上。"> 属性型指令 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/structural-directives" title="结构型指令可以操纵页面的布局"> 结构型指令 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/pipes" title="管道可以在模板中转换显示的内容。"> 管道 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/animations" title="Angular 动画体系指南"> 动画 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Angular 的表单" aria-pressed="false"> 表单 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/user-input" title="用户输入触发 DOM 事件。我们通过事件绑定来监听它们，把更新过的数据导入回我们的组件和 model。"> 用户输入 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/forms" title="表单可以创建集中、高效、引人注目的输入体验。Angular 表单可以协调一组数据绑定控件，跟踪变更，验证输入，并表达错误信息。"> 模板驱动表单 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/form-validation" title="验证用户的表单输入"> 表单验证 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/reactive-forms" title="使用 FormBuilder 、分组和数组创建响应式表单。"> 响应式表单 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dynamic-form" title="使用FormGroup渲染动态表单"> 动态表单 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Observable 与 RxJS" aria-pressed="false"> Observable 与 RxJS <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/observables" title=""> 可观察对象(Observable) </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/rx-library" title=""> RxJS 库 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/observables-in-angular" title=""> Angular 中的可观察对象 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/practical-observable-usage" title=""> 用法实战 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/comparing-observables" title=""> 与其它技术的比较 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/bootstrapping" title="在应用的根模块（AppModule）中告诉 Angular 如何构造并引导引用。"> 引导启动 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Angular 中的模块" aria-pressed="false"> Angular 模块 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ngmodules" title="使用 NgModule 让你的应用更高效"> NgModule 简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ngmodule-vs-jsmodule" title="JavaScript 模块和 NgModule 之间的差异"> JS 模块 vs NgModule </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/frequent-ngmodules" title="介绍最常用的 Angular 模块"> 常用模块 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/module-types" title="介绍特性模块的几种类型"> 特性模块的分类 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/entry-components" title="关于 Angular 中入口组件的一切"> 入口组件 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/feature-modules" title="创建特性模块，以组织你的代码"> 特性模块 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/providers" title="服务提供商与 Angular 模块"> 服务提供商 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/singleton-services" title="创建单例应用"> 单例应用 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/lazy-loading-ngmodules" title="惰性加载模块，以提高应用的性能"> 惰性加载的特性模块 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/sharing-ngmodules" title="共享 Angular 模块让你的应用现代化。"> 共享 Angular 模块 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ngmodule-api" title="理解 NgModule 的那些细节。"> NgModule API </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ngmodule-faq" title="回答关于 NgModules 的常见问题。"> NgModule 常见问题 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="依赖注入：创建并注入各种服务。" aria-pressed="false"> 依赖注入 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dependency-injection-pattern" title="学习 Angular 依赖注入系统背后的依赖注入模式"> 依赖注入模式 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dependency-injection" title="Angular 的依赖注入系统能够为 Angular 创建的类创建并交付它们所依赖的服务。"> Angular 依赖注入 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/hierarchical-dependency-injection" title="Angular 的多级注入体系会建立与组件平行的注入器树。"> 多级注入器 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dependency-injection-in-action" title="依赖注入的使用技巧"> DI 实用技巧 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/http" title="通过 HTTP 协议与远程服务器对话。"> HttpClient </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/router" title="揭示如何通过 Angular 路由进行基本的屏幕导航。"> 路由与导航 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/testing" title="测试 Angular 应用的技巧与实践。"> 测试 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/cheatsheet" title="关于 Angular 常用编码技术的快速指南。"> 速查表 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-1 collapsed" type="button" title="把 Angular 用到你的实际工作中的一些技巧" aria-pressed="false"> 其它技术 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-1 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/i18n" title="把应用模板中的文本翻译成多种语言。"> 国际化 (i18n) </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/language-service" title="使用 Angular 语言服务来为开发提速。"> 语言服务 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/security" title="Angular 应用开发中的安全技术。"> 安全 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="环境准备与部署" aria-pressed="false"> 环境准备与部署 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/setup" title="在你自己的机器上安装 Angular QuickStart 种子，以便更快、更高效的开发。"> 搭建本地开发环境 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/setup-systemjs-anatomy" title="基于 SystemJS 的本地开发环境内幕。"> 搭建方式剖析 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/browser-support" title="浏览器支持与 Polyfills 指南"> 浏览器支持 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/npm-packages" title="建议的 npm 包，以及如何指定包的依赖。"> npm 包 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/typescript-configuration" title="给 Angular 开发者的 TypeScript 配置。"> TypeScript 配置 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/aot-compiler" title="学习如何使用 AOT 预编译器。"> 预先（AOT）编译 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/deployment" title="学习如何部署你的 Angular 应用。"> 部署 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/custom-elements" title="把 Angular 组件用作自定义元素。"> 自定义元素 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Angular 的 Service Worker：控制应用的资源缓存。" aria-pressed="false"> Service Worker <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-intro" title="Angular 对 Service Worker 的实现提升了慢速或不稳定的网络连接下的用户体验。"> 简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-getting-started" title="在 CLI 项目中启用 Service Worker，并在浏览器中查看效果。"> 快速起步 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-communications" title="那些能让你和 Angular 的 Service Worker 通讯的服务类。"> 与 Service Worker 通讯 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-devops" title="使用 Service Worker 运行应用、管理应用更新、调试以及杀掉正在运行的应用。"> 生产环境下的 Service Worker </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-config" title="配置 Service Worker 的缓存行为。"> Service Worker 配置 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Angular 的发布实践，更新计划以及与更新有关的资源。" aria-pressed="false"> 保持最新 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/updating" title="关于如何把 Angular 应用升级到最新版的信息。"> 更新你的项目 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/releases" title="Angular 的版本、发布、支持与弃用策略。"> Angular 的版本发布 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="把 AngularJS 应用增量式的升级到 Angular。" aria-pressed="false"> 从 AngularJS 升级 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/upgrade" title="把 AngularJS 应用增量式的升级到 Angular。"> 升级步骤 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ajs-quick-reference" title="学习如何把 AngularJS 的概念映射到 Angular 中。"> AngularJS 与 Angular 的概念对照 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/universal" title="使用 Angular Universal 在服务端渲染 HTML。">  服务端渲染 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/visual-studio-2015" title="在 Visual Studio 2015 中使用快速起步中的文件"> Visual Studio 2015 快速上手 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/styleguide" title="写出 Angular 风格的程序"> 风格指南 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/glossary" title="Angular 中最重要的词汇的简要定义。"> 词汇表 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-1 collapsed" href="https://angular.cn/api" title="关于 Angular 中类和值的详细信息。"> API 参考手册 </a></div><!----></aio-nav-item></aio-nav-menu><div class="doc-version"><aio-select><div class="form-select-menu"><button class="form-select-button"><strong></strong><!---->stable (v6.0.0) </button><!----></div></aio-select></div></mat-sidenav><div tabindex="-1" class="cdk-visually-hidden cdk-focus-trap-anchor"></div><!----><mat-sidenav-content cdkscrollable="" class="mat-drawer-content mat-sidenav-content ng-star-inserted" style="margin-left: 262px; margin-right: 0px;"><section class="sidenav-content" role="content" id="guide-component-styles"><aio-mode-banner><!----></aio-mode-banner><aio-doc-viewer class=""><div style="opacity: 1; transition: all 200ms ease-in-out;">
<div class="content">
<h1 translation-result="" id="component-styles">组件样式<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#component-styles"><i class="material-icons">link</i></a></h1><aio-toc class="embedded"></aio-toc><h1 translation-origin="off" id="component-styles">Component Styles<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#component-styles"><i class="material-icons">link</i></a></h1>

<p translation-result="">Angular 应用使用标准的 CSS 来设置样式。这意味着你可以把关于 CSS
的那些知识和技能直接用于 Angular 程序中，例如：样式表、选择器、规则以及媒体查询等。</p><p translation-origin="off">Angular applications are styled with standard CSS. That means you can apply
everything you know about CSS stylesheets, selectors, rules, and media queries
directly to Angular applications.</p>

<p translation-result="">另外，Angular 还能把<em>组件样式</em>捆绑在组件上，以实现比标准样式表更加模块化的设计。</p><p translation-origin="off">Additionally, Angular can bundle <em>component styles</em>
with components, enabling a more modular design than regular stylesheets.</p>

<p translation-result="">本章将会讲解如何加载和使用这些<em>组件样式</em>。</p><p translation-origin="off">This page describes how to load and apply these component styles.</p>

<p translation-result="">你可以运行<live-example ng-version="6.0.0"><span><!----><!----><!----><!----><span class="ng-star-inserted"><a target="_blank" href="https://angular.cn/generated/live-examples/component-styles/stackblitz.html" title="在线例子">在线例子</a><!----><span class="ng-star-inserted"> / <a download="" title="下载范例" href="https://angular.cn/generated/zips/component-styles/component-styles.zip">下载范例</a></span></span></span></live-example>，在 Stackblitz 中试用并下载本页的代码。</p><p translation-origin="off">You can run the <live-example ng-version="6.0.0"><span><!----><!----><!----><!----><span class="ng-star-inserted"><a target="_blank" href="https://angular.cn/generated/live-examples/component-styles/stackblitz.html" title="在线例子">在线例子</a><!----><span class="ng-star-inserted"> / <a download="" title="下载范例" href="https://angular.cn/generated/zips/component-styles/component-styles.zip">下载范例</a></span></span></span></live-example> in Stackblitz and download the code from there.</p>

<h2 translation-result="" id="using-component-styles">使用组件样式<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#using-component-styles"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="using-component-styles">Using component styles<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#using-component-styles"><i class="material-icons">link</i></a></h2>

<p translation-result="">对你编写的每个 Angular 组件来说，除了定义 HTML 模板之外，还要定义用于模板的 CSS 样式、
指定任意的选择器、规则和媒体查询。</p><p translation-origin="off">For every Angular component you write, you may define not only an HTML template,
but also the CSS styles that go with that template,
specifying any selectors, rules, and media queries that you need.</p>

<p translation-result="">实现方式之一，是在组件的元数据中设置 <code>styles</code> 属性。
<code>styles</code> 属性可以接受一个包含 CSS 代码的字符串数组。
通常你只给它一个字符串就行了，如同下例：</p><p translation-origin="off">One way to do this is to set the <code>styles</code> property in the component metadata.
The <code>styles</code> property takes an array of strings that contain CSS code.
Usually you give it one string, as in the following example:</p>

<code-example path="component-styles/src/app/hero-app.component.ts" title="src/app/hero-app.component.ts" linenums="false" ng-version="6.0.0"><div style="display: none">
@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a>({
  selector: 'app-root',
  template: `
    &lt;h1&gt;Tour of Heroes&lt;/h1&gt;
    &lt;app-hero-main [hero]="hero"&gt;&lt;/app-hero-main&gt;
  `,
  styles: ['h1 { font-weight: normal; }']
})
export class HeroAppComponent {
/* . . . */
}

</div><!----><header class="ng-star-inserted">src/app/hero-app.component.ts</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/hero-app.component.ts">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="lit">@</span><a href="https://angular.cn/api/core/Component" class="code-anchor"><span class="lit">Component</span></a><span class="pun">({</span><span class="pln">
  selector</span><span class="pun">:</span><span class="pln"> </span><span class="str">'app-root'</span><span class="pun">,</span><span class="pln">
  </span><span class="kwd">template</span><span class="pun">:</span><span class="pln"> </span><span class="str">`
    &lt;h1&gt;Tour of Heroes&lt;/h1&gt;
    &lt;app-hero-main [hero]="hero"&gt;&lt;/app-hero-main&gt;
  `</span><span class="pun">,</span><span class="pln">
  styles</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="str">'h1 { font-weight: normal; }'</span><span class="pun">]</span><span class="pln">
</span><span class="pun">})</span><span class="pln">
</span><span class="kwd">export</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">HeroAppComponent</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
</span><span class="com">/* . . . */</span><span class="pln">
</span><span class="pun">}</span></code>
    </pre></aio-code></code-example>
<h2 translation-result="" id="style-scope">范围化的样式<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#style-scope"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="style-scope">Style scope<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#style-scope"><i class="material-icons">link</i></a></h2>

<div class="alert is-critical">
<p translation-result="">在 <code>@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a></code> 的元数据中指定的样式只会对该组件的模板生效。</p><p translation-origin="off">The styles specified in <code>@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a></code> metadata <em>apply only within the template of that component</em>.</p>

</div>
<p translation-result="">它们既不会被模板中嵌入的组件继承，也不会被通过内容投影（如 ng-content）嵌进来的组件继承。</p><p translation-origin="off">They are <em>not inherited</em> by any components nested within the template nor by any content projected into the component.</p>

<p translation-result="">在这个例子中，<code>h1</code> 的样式只对 <code>HeroAppComponent</code> 生效，既不会作用于内嵌的 <code>HeroMainComponent</code> ，也不会作用于应用中其它任何地方的 <code>&lt;h1&gt;</code> 标签。</p><p translation-origin="off">In this example, the <code>h1</code> style applies only to the <code>HeroAppComponent</code>,
not to the nested <code>HeroMainComponent</code> nor to <code>&lt;h1&gt;</code> tags anywhere else in the application.</p>

<p translation-result="">这种范围限制就是所谓的<strong><em>样式模块化</em></strong>特性</p><p translation-origin="off">This scoping restriction is a <strong><em>styling modularity feature</em></strong>.</p>

<ul>
<li>
<p translation-result=""> 可以使用对每个组件最有意义的 CSS 类名和选择器。</p><p translation-origin="off">You can use the CSS class names and selectors that make the most sense in the context of each component.</p>

</li>
<li>
<p translation-result=""> 类名和选择器是仅属于组件内部的，它不会和应用中其它地方的类名和选择器出现冲突。</p><p translation-origin="off">Class names and selectors are local to the component and don't collide with
classes and selectors used elsewhere in the application.</p>

</li>
<li>
<p translation-result=""> 组件的样式<em>不会</em>因为别的地方修改了样式而被意外改变。</p><p translation-origin="off">Changes to styles elsewhere in the application don't affect the component's styles.</p>

</li>
<li>
<p translation-result=""> 你可以让每个组件的 CSS 代码和它的 TypeScript、HTML 代码放在一起，这将促成清爽整洁的项目结构。</p><p translation-origin="off">You can co-locate the CSS code of each component with the TypeScript and HTML code of the component,
which leads to a neat and tidy project structure.</p>

</li>
<li>
<p translation-result=""> 将来你可以修改或移除组件的 CSS 代码，而不用遍历整个应用来看它有没有被别处用到，只要看看当前组件就可以了。</p><p translation-origin="off">You can change or remove component CSS code without searching through the
whole application to find where else the code is used.</p>

</li>
</ul>
<a id="special-selectors"></a>
<h2 translation-result="" id="special-selectors">特殊的选择器<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#special-selectors"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="special-selectors">Special selectors<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#special-selectors"><i class="material-icons">link</i></a></h2>

<p translation-result="">组件样式中有一些从影子(Shadow) DOM 样式范围领域（记录在<a href="https://www.w3.org/">W3C</a>的<a href="https://www.w3.org/TR/css-scoping-1">CSS Scoping Module Level 1</a>中） 引入的特殊<em>选择器</em>：</p><p translation-origin="off">Component styles have a few special <em>selectors</em> from the world of shadow DOM style scoping
(described in the <a href="https://www.w3.org/TR/css-scoping-1">CSS Scoping Module Level 1</a> page on the
<a href="https://www.w3.org/">W3C</a> site).
The following sections describe these selectors.</p>

<h3 translation-result="" id="host">:host 选择器<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#host"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="host">:host<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#host"><i class="material-icons">link</i></a></h3>

<p translation-result="">使用 <code>:host</code> 伪类选择器，用来选择组件<em>宿主</em>元素中的元素（相对于组件模板<em>内部</em>的元素）。</p><p translation-origin="off">Use the <code>:host</code> pseudo-class selector to target styles in the element that <em>hosts</em> the component (as opposed to
targeting elements <em>inside</em> the component's template).</p>

<code-example path="component-styles/src/app/hero-details.component.css" region="host" title="src/app/hero-details.component.css" linenums="false" ng-version="6.0.0"><div style="display: none">
:host {
  display: block;
  border: 1px solid black;
}

</div><!----><header class="ng-star-inserted">src/app/hero-details.component.css</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/hero-details.component.css">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="pun">:</span><span class="pln">host </span><span class="pun">{</span><span class="pln">
  display</span><span class="pun">:</span><span class="pln"> block</span><span class="pun">;</span><span class="pln">
  border</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1px</span><span class="pln"> solid black</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></code>
    </pre></aio-code></code-example>
<p translation-result=""><code>:host</code> 选择是是把宿主元素作为目标的<em>唯一</em>方式。除此之外，你将没办法指定它，
因为宿主不是组件自身模板的一部分，而是父组件模板的一部分。</p><p translation-origin="off">The <code>:host</code> selector is the only way to target the host element. You can't reach
the host element from inside the component with other selectors because it's not part of the
component's own template. The host element is in a parent component's template.</p>

<p translation-result="">要把宿主样式作为条件，就要像<em>函数</em>一样把其它选择器放在 <code>:host</code> 后面的括号中。</p><p translation-origin="off">Use the <em>function form</em> to apply host styles conditionally by
including another selector inside parentheses after <code>:host</code>.</p>

<p translation-result="">下一个例子再次把宿主元素作为目标，但是只有当它同时带有 <code>active</code> CSS 类的时候才会生效。</p><p translation-origin="off">The next example targets the host element again, but only when it also has the <code>active</code> CSS class.</p>

<code-example path="component-styles/src/app/hero-details.component.css" region="hostfunction" title="src/app/hero-details.component.css" linenums="false" ng-version="6.0.0"><div style="display: none">
:host(.active) {
  border-width: 3px;
}

</div><!----><header class="ng-star-inserted">src/app/hero-details.component.css</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/hero-details.component.css">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="pun">:</span><span class="pln">host</span><span class="pun">(.</span><span class="pln">active</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  border</span><span class="pun">-</span><span class="pln">width</span><span class="pun">:</span><span class="pln"> </span><span class="lit">3px</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></code>
    </pre></aio-code></code-example>
<h3 translation-result="" id="host-context">:host-context 选择器<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#host-context"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="host-context">:host-context<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#host-context"><i class="material-icons">link</i></a></h3>

<p translation-result="">有时候，基于某些来自组件视图<em>外部</em>的条件应用样式是很有用的。
例如，在文档的 <code>&lt;body&gt;</code> 元素上可能有一个用于表示样式主题 (theme) 的 CSS 类，你应当基于它来决定组件的样式。</p><p translation-origin="off">Sometimes it's useful to apply styles based on some condition <em>outside</em> of a component's view.
For example, a CSS theme class could be applied to the document <code>&lt;body&gt;</code> element, and
you want to change how your component looks based on that.</p>

<p translation-result="">这时可以使用 <code>:host-context()</code> 伪类选择器。它也以类似 <code>:host()</code> 形式使用。它在当前组件宿主元素的<em>祖先节点</em>中查找 CSS 类，
直到文档的根节点为止。在与其它选择器组合使用时，它非常有用。</p><p translation-origin="off">Use the <code>:host-context()</code> pseudo-class selector, which works just like the function
form of <code>:host()</code>. The <code>:host-context()</code> selector looks for a CSS class in any ancestor of the component host element,
up to the document root. The <code>:host-context()</code> selector is useful when combined with another selector.</p>

<p translation-result="">在下面的例子中，只有当某个祖先元素有 CSS 类 <code>theme-light</code> 时，才会把 <code>background-color</code> 样式应用到组件<em>内部</em>的所有 <code>&lt;h2&gt;</code> 元素中。</p><p translation-origin="off">The following example applies a <code>background-color</code> style to all <code>&lt;h2&gt;</code> elements <em>inside</em> the component, only
if some ancestor element has the CSS class <code>theme-light</code>.</p>

<code-example path="component-styles/src/app/hero-details.component.css" region="hostcontext" title="src/app/hero-details.component.css" linenums="false" ng-version="6.0.0"><div style="display: none">
:host-context(.theme-light) h2 {
  background-color: #eef;
}

</div><!----><header class="ng-star-inserted">src/app/hero-details.component.css</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/hero-details.component.css">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="pun">:</span><span class="pln">host</span><span class="pun">-</span><span class="pln">context</span><span class="pun">(.</span><span class="pln">theme</span><span class="pun">-</span><span class="pln">light</span><span class="pun">)</span><span class="pln"> h2 </span><span class="pun">{</span><span class="pln">
  background</span><span class="pun">-</span><span class="pln">color</span><span class="pun">:</span><span class="pln"> </span><span class="com">#eef;</span><span class="pln">
</span><span class="pun">}</span></code>
    </pre></aio-code></code-example>
<h3 translation-result="" id="deprecated-codedeepcode-codecode-and-codeng-deepcode">已废弃 <code>/deep/</code>、<code>&gt;&gt;&gt;</code> 和 <code>::ng-deep</code><a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#deprecated-codedeepcode-codecode-and-codeng-deepcode"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="deprecated-deep--and-ng-deep">(deprecated) <code>/deep/</code>, <code>&gt;&gt;&gt;</code>, and <code>::ng-deep</code><a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#deprecated-deep--and-ng-deep"><i class="material-icons">link</i></a></h3>

<p translation-result="">组件样式通常只会作用于组件自身的 HTML 上。</p><p translation-origin="off">Component styles normally apply only to the HTML in the component's own template.</p>

<p translation-result="">可以使用 <code>/deep/</code> 选择器来强制一个样式对各级子组件的视图也生效，它<em>不但作用于组件的子视图，也会作用于组件的内容</em>。</p><p translation-origin="off">Use the <code>/deep/</code> shadow-piercing descendant combinator to force a style down through the child
component tree into all the child component views.
The <code>/deep/</code> combinator works to any depth of nested components, and it applies to both the view
children and content children of the component.</p>

<p translation-result="">这个例子以所有的 <code>&lt;h3&gt;</code> 元素为目标，从宿主元素到当前元素再到 DOM 中的所有子元素：</p><p translation-origin="off">The following example targets all <code>&lt;h3&gt;</code> elements, from the host element down
through this component to all of its child elements in the DOM.</p>

<code-example path="component-styles/src/app/hero-details.component.css" region="deep" title="src/app/hero-details.component.css" linenums="false" ng-version="6.0.0"><div style="display: none">
:host /deep/ h3 {
  font-style: italic;
}

</div><!----><header class="ng-star-inserted">src/app/hero-details.component.css</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/hero-details.component.css">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="pun">:</span><span class="pln">host </span><span class="pun">/</span><span class="pln">deep</span><span class="pun">/</span><span class="pln"> h3 </span><span class="pun">{</span><span class="pln">
  font</span><span class="pun">-</span><span class="pln">style</span><span class="pun">:</span><span class="pln"> italic</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></code>
    </pre></aio-code></code-example>
<p translation-result=""><code>/deep/</code> 组合器还有两个别名：<code>&gt;&gt;&gt;</code> 和 <code>::ng-deep</code>。</p><p translation-origin="off">The <code>/deep/</code> combinator also has the aliases <code>&gt;&gt;&gt;</code>, and <code>::ng-deep</code>.</p>

<div class="alert is-important">
<p translation-result=""><code>/deep/</code> 和 <code>&gt;&gt;&gt;</code> 选择器只能被用在<strong>仿真 (emulated) </strong>模式下。
这种方式是默认值，也是用得最多的方式。
更多信息，见<a href="https://angular.cn/guide/component-styles#view-encapsulation">控制视图封装模式</a>一节。</p><p translation-origin="off">Use <code>/deep/</code>, <code>&gt;&gt;&gt;</code> and <code>::ng-deep</code> only with <em>emulated</em> view encapsulation.
Emulated is the default and most commonly used view encapsulation. For more information, see the
<a href="https://angular.cn/guide/component-styles#view-encapsulation">Controlling view encapsulation</a> section.</p>

</div>
<div class="alert is-important">
<p translation-result="">CSS 标准中用于 "刺穿 Shadow DOM" 的组合器已经被废弃，并将<a href="https://www.chromestatus.com/features/6750456638341120">这个特性从主流浏览器和工具中移除</a>。
因此，我们也将在 Angular 中移除对它们的支持（包括 <code>/deep/</code>、<code>&gt;&gt;&gt;</code> 和 <code>::ng-deep</code>）。
目前，建议先统一使用 <code>::ng-deep</code>，以便兼容将来的工具。</p><p translation-origin="off">The shadow-piercing descendant combinator is deprecated and <a href="https://www.chromestatus.com/features/6750456638341120">support is being removed from major browsers</a> and tools.
As such we plan to drop support in Angular (for all 3 of <code>/deep/</code>, <code>&gt;&gt;&gt;</code> and <code>::ng-deep</code>).
Until then <code>::ng-deep</code> should be preferred for a broader compatibility with the tools.</p>

</div>
<a id="loading-styles"></a>
<h2 translation-result="" id="loading-component-styles">把样式加载进组件中<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#loading-component-styles"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="loading-component-styles">Loading component styles<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#loading-component-styles"><i class="material-icons">link</i></a></h2>

<p translation-result="">有几种方式把样式加入组件：</p><p translation-origin="off">There are several ways to add styles to a component:</p>

<ul>
<li>
<p translation-result=""> 设置 <code>styles</code> 或 <code>styleUrls</code> 元数据</p><p translation-origin="off">By setting <code>styles</code> or <code>styleUrls</code> metadata.</p>

</li>
<li>
<p translation-result=""> 内联在模板的 HTML 中</p><p translation-origin="off">Inline in the template HTML.</p>

</li>
<li>
<p translation-result=""> 通过 CSS 文件导入</p><p translation-origin="off">With CSS imports.</p>

</li>
</ul>
<p translation-result="">上述作用域规则对所有这些加载模式都适用。</p><p translation-origin="off">The scoping rules outlined earlier apply to each of these loading patterns.</p>

<h3 translation-result="" id="styles-in-component-metadata">元数据中的样式<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#styles-in-component-metadata"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="styles-in-component-metadata">Styles in component metadata<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#styles-in-component-metadata"><i class="material-icons">link</i></a></h3>

<p translation-result="">你可以给 <code>@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a></code> 装饰器添加一个 <code>styles</code> 数组型属性。</p><p translation-origin="off">You can add a <code>styles</code> array property to the <code>@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a></code> decorator.</p>

<p translation-result="">这个数组中的每一个字符串（通常也只有一个）定义一份 CSS。</p><p translation-origin="off">Each string in the array defines some CSS for this component.</p>

<code-example path="component-styles/src/app/hero-app.component.ts" title="src/app/hero-app.component.ts (CSS inline)" ng-version="6.0.0"><div style="display: none">
@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a>({
  selector: 'app-root',
  template: `
    &lt;h1&gt;Tour of Heroes&lt;/h1&gt;
    &lt;app-hero-main [hero]="hero"&gt;&lt;/app-hero-main&gt;
  `,
  styles: ['h1 { font-weight: normal; }']
})
export class HeroAppComponent {
/* . . . */
}

</div><!----><header class="ng-star-inserted">src/app/hero-app.component.ts (CSS inline)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/hero-app.component.ts (CSS inline)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="lit">@</span><a href="https://angular.cn/api/core/Component" class="code-anchor"><span class="lit">Component</span></a><span class="pun">({</span><span class="pln">
  selector</span><span class="pun">:</span><span class="pln"> </span><span class="str">'app-root'</span><span class="pun">,</span><span class="pln">
  </span><span class="kwd">template</span><span class="pun">:</span><span class="pln"> </span><span class="str">`
    &lt;h1&gt;Tour of Heroes&lt;/h1&gt;
    &lt;app-hero-main [hero]="hero"&gt;&lt;/app-hero-main&gt;
  `</span><span class="pun">,</span><span class="pln">
  styles</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="str">'h1 { font-weight: normal; }'</span><span class="pun">]</span><span class="pln">
</span><span class="pun">})</span><span class="pln">
</span><span class="kwd">export</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">HeroAppComponent</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
</span><span class="com">/* . . . */</span><span class="pln">
</span><span class="pun">}</span></code>
    </pre></aio-code></code-example>
<div class="alert is-critical">
<p translation-result="">注意：这些样式<strong>只对当前组件生效</strong>。
它们<strong>既不会作用于模板中嵌入的任何组件</strong>，也不会作用于投影进来的组件（如 <code>ng-content</code> ）。</p><p translation-origin="off">Reminder: these styles apply <em>only to this component</em>.
They are <em>not inherited</em> by any components nested within the template nor by any content projected into the component.</p>

</div>
<p translation-result="">当使用 <code>--inline-styles</code> 标识创建组件时，CLI 就会定义一个空的 <code>styles</code> 数组</p><p translation-origin="off">The CLI defines an empty <code>styles</code> array when you create the component with the <code>--inline-styles</code> flag.</p>

<code-example language="sh" class="code-shell" ng-version="6.0.0"><div style="display: none">
ng generate component hero-app --inline-style
</div><!----><aio-code><pre class="prettyprint lang-sh">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="pln">ng generate component hero</span><span class="pun">-</span><span class="pln">app </span><span class="pun">--</span><span class="pln">inline</span><span class="pun">-</span><span class="pln">style</span></code>
    </pre></aio-code></code-example>
<h3 translation-result="" id="style-files-in-component-metadata">组件元数据中的样式文件<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#style-files-in-component-metadata"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="style-files-in-component-metadata">Style files in component metadata<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#style-files-in-component-metadata"><i class="material-icons">link</i></a></h3>

<p translation-result="">你可以通过把外部 CSS 文件添加到 <code>@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a></code> 的 <code>styleUrls</code> 属性中来加载外部样式。</p><p translation-origin="off">You can load styles from external CSS files by adding a <code>styleUrls</code> property
to a component's <code>@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a></code> decorator:</p>

<code-tabs ng-version="6.0.0"><div style="display: none">
  <code-pane title="src/app/hero-app.component.ts (CSS in file)" path="component-styles/src/app/hero-app.component.1.ts">
@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a>({
  selector: 'app-root',
  template: `
    &lt;h1&gt;Tour of Heroes&lt;/h1&gt;
    &lt;app-hero-main [hero]="hero"&gt;&lt;/app-hero-main&gt;
  `,
  styleUrls: ['./hero-app.component.css']
})
export class HeroAppComponent {
/* . . . */
}

</code-pane>
  <code-pane title="src/app/hero-app.component.css" path="component-styles/src/app/hero-app.component.css">
h1 {
  font-weight: normal;
}


</code-pane>
</div><mat-tab-group class="code-tab-group mat-tab-group mat-primary" disableripple=""><mat-tab-header class="mat-tab-header"><div aria-hidden="true" class="mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4 mat-ripple mat-tab-header-pagination-disabled" mat-ripple=""><div class="mat-tab-header-pagination-chevron"></div></div><div class="mat-tab-label-container"><div class="mat-tab-list" role="tablist" style="transform: translate3d(0px, 0px, 0px);"><div class="mat-tab-labels"><!----><div class="mat-tab-label mat-ripple mat-tab-label-active ng-star-inserted" mat-ripple="" mattablabelwrapper="" role="tab" id="mat-tab-label-17-0" tabindex="0" aria-controls="mat-tab-content-17-0" aria-selected="true"><div class="mat-tab-label-content"><!----><!----><span class="ng-star-inserted">src/app/hero-app.component.ts (CSS in file)</span><!----><!----></div></div><div class="mat-tab-label mat-ripple ng-star-inserted" mat-ripple="" mattablabelwrapper="" role="tab" id="mat-tab-label-17-1" tabindex="-1" aria-controls="mat-tab-content-17-1" aria-selected="false"><div class="mat-tab-label-content"><!----><!----><span class="ng-star-inserted">src/app/hero-app.component.css</span><!----><!----></div></div></div><mat-ink-bar class="mat-ink-bar" style="visibility: visible; left: 0px; width: 322px;"></mat-ink-bar></div></div><div aria-hidden="true" class="mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4 mat-ripple mat-tab-header-pagination-disabled" mat-ripple=""><div class="mat-tab-header-pagination-chevron"></div></div></mat-tab-header><div class="mat-tab-body-wrapper"><!----><mat-tab-body class="mat-tab-body ng-tns-c10-59 mat-tab-body-active ng-star-inserted" role="tabpanel" id="mat-tab-content-17-0" aria-labelledby="mat-tab-label-17-0"><div class="mat-tab-body-content ng-trigger ng-trigger-translateTab" style="transform: none;"><!----><!----><aio-code class="ng-star-inserted" style=""><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/hero-app.component.ts (CSS in file)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="lit">@</span><a href="https://angular.cn/api/core/Component" class="code-anchor"><span class="lit">Component</span></a><span class="pun">({</span><span class="pln">
  selector</span><span class="pun">:</span><span class="pln"> </span><span class="str">'app-root'</span><span class="pun">,</span><span class="pln">
  </span><span class="kwd">template</span><span class="pun">:</span><span class="pln"> </span><span class="str">`
    &lt;h1&gt;Tour of Heroes&lt;/h1&gt;
    &lt;app-hero-main [hero]="hero"&gt;&lt;/app-hero-main&gt;
  `</span><span class="pun">,</span><span class="pln">
  styleUrls</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="str">'./hero-app.component.css'</span><span class="pun">]</span><span class="pln">
</span><span class="pun">})</span><span class="pln">
</span><span class="kwd">export</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">HeroAppComponent</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
</span><span class="com">/* . . . */</span><span class="pln">
</span><span class="pun">}</span></code>
    </pre></aio-code><!----></div></mat-tab-body><mat-tab-body class="mat-tab-body ng-tns-c10-60 ng-star-inserted" role="tabpanel" id="mat-tab-content-17-1" aria-labelledby="mat-tab-label-17-1"><div class="mat-tab-body-content ng-trigger ng-trigger-translateTab" style="transform: translate3d(100%, 0px, 0px);"><!----></div></mat-tab-body></div></mat-tab-group></code-tabs>
<div class="alert is-critical">
<p translation-result="">注意：这些样式<strong>只对当前组件生效</strong>。
它们<strong>既不会作用于模板中嵌入的任何组件</strong>，也不会作用于投影进来的组件（如 <code>ng-content</code> ）。</p><p translation-origin="off">Reminder: the styles in the style file apply <em>only to this component</em>.
They are <em>not inherited</em> by any components nested within the template nor by any content projected into the component.</p>

</div>
<div class="l-sub-section">
<p translation-result="">  你可以指定多个样式文件，甚至可以组合使用 <code><a href="https://angular.cn/api/animations/style" class="code-anchor">style</a></code> 和 <code>styleUrls</code> 方式。</p><p translation-origin="off">  You can specify more than one styles file or even a combination of <code><a href="https://angular.cn/api/animations/style" class="code-anchor">style</a></code> and <code>styleUrls</code>.</p>

</div>
<p translation-result="">CLI 会默认为你创建一个空白的样式表文件，并且在所生成组件的 <code>styleUrls</code> 中引用该文件。</p><p translation-origin="off">The CLI creates an empty styles file for you by default and references that file in the component's generated <code>styleUrls</code>.</p>

<code-example language="sh" class="code-shell" ng-version="6.0.0"><div style="display: none">
ng generate component hero-app
</div><!----><aio-code><pre class="prettyprint lang-sh">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="pln">ng generate component hero</span><span class="pun">-</span><span class="pln">app</span></code>
    </pre></aio-code></code-example>
<h3 translation-result="" id="template-inline-styles">模板内联样式<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#template-inline-styles"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="template-inline-styles">Template inline styles<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#template-inline-styles"><i class="material-icons">link</i></a></h3>

<p translation-result="">你也可以在组件的 HTML 模板中嵌入 <code>&lt;<a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>&gt;</code> 标签。</p><p translation-origin="off">You can embed CSS styles directly into the HTML template by putting them
inside <code>&lt;<a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>&gt;</code> tags.</p>

<code-example path="component-styles/src/app/hero-controls.component.ts" region="inlinestyles" title="src/app/hero-controls.component.ts" ng-version="6.0.0"><div style="display: none">
@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a>({
  selector: 'app-hero-controls',
  template: `
    &lt;<a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>&gt;
      button {
        background-color: white;
        border: 1px solid #777;
      }
    &lt;/<a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>&gt;
    &lt;h3&gt;Controls&lt;/h3&gt;
    &lt;button (click)="activate()"&gt;Activate&lt;/button&gt;
  `
})

</div><!----><header class="ng-star-inserted">src/app/hero-controls.component.ts</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/hero-controls.component.ts">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><ol class="linenums"><li class="L0"><span class="lit">@</span><a href="https://angular.cn/api/core/Component" class="code-anchor"><span class="lit">Component</span></a><span class="pun">({</span></li><li class="L1"><span class="pln">  selector</span><span class="pun">:</span><span class="pln"> </span><span class="str">'app-hero-controls'</span><span class="pun">,</span></li><li class="L2"><span class="pln">  </span><span class="kwd">template</span><span class="pun">:</span><span class="pln"> </span><span class="str">`</span></li><li class="L3"><span class="str">    &lt;</span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="str">style</span></a><span class="str">&gt;</span></li><li class="L4"><span class="str">      button {</span></li><li class="L5"><span class="str">        background-color: white;</span></li><li class="L6"><span class="str">        border: 1px solid #777;</span></li><li class="L7"><span class="str">      }</span></li><li class="L8"><span class="str">    &lt;/</span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="str">style</span></a><span class="str">&gt;</span></li><li class="L9"><span class="str">    &lt;h3&gt;Controls&lt;/h3&gt;</span></li><li class="L0"><span class="str">    &lt;button (click)="activate()"&gt;Activate&lt;/button&gt;</span></li><li class="L1"><span class="str">  `</span></li><li class="L2"><span class="pun">})</span></li></ol></code>
    </pre></aio-code></code-example>
<h3 translation-result="" id="template-link-tags">模板中的 link 标签<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#template-link-tags"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="template-link-tags">Template link tags<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#template-link-tags"><i class="material-icons">link</i></a></h3>

<p translation-result="">你也可以在组件的 HTML 模板中写 <code>&lt;link&gt;</code> 标签。</p><p translation-origin="off">You can also write <code>&lt;link&gt;</code> tags into the component's HTML template.</p>

<code-example path="component-styles/src/app/hero-team.component.ts" region="stylelink" title="src/app/hero-team.component.ts" ng-version="6.0.0"><div style="display: none">
@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a>({
  selector: 'app-hero-team',
  template: `
    &lt;!-- We must use <a href="https://angular.cn/api/router/RouterLinkWithHref" class="code-anchor">a</a> relative URL so that the AOT compiler can find the stylesheet --&gt;
    &lt;link rel="stylesheet" href="../assets/hero-team.component.css"&gt;
    &lt;h3&gt;Team&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li *<a href="https://angular.cn/api/common/NgForOf" class="code-anchor">ngFor</a>="let member of hero.team"&gt;
        {{member}}
      &lt;/li&gt;
    &lt;/ul&gt;`
})

</div><!----><header class="ng-star-inserted">src/app/hero-team.component.ts</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/hero-team.component.ts">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><ol class="linenums"><li class="L0"><span class="lit">@</span><a href="https://angular.cn/api/core/Component" class="code-anchor"><span class="lit">Component</span></a><span class="pun">({</span></li><li class="L1"><span class="pln">  selector</span><span class="pun">:</span><span class="pln"> </span><span class="str">'app-hero-team'</span><span class="pun">,</span></li><li class="L2"><span class="pln">  </span><span class="kwd">template</span><span class="pun">:</span><span class="pln"> </span><span class="str">`</span></li><li class="L3"><span class="str">    &lt;!-- We must use </span><a href="https://angular.cn/api/router/RouterLinkWithHref" class="code-anchor"><span class="str">a</span></a><span class="str"> relative URL so that the AOT compiler can find the stylesheet --&gt;</span></li><li class="L4"><span class="str">    &lt;link rel="stylesheet" href="../assets/hero-team.component.css"&gt;</span></li><li class="L5"><span class="str">    &lt;h3&gt;Team&lt;/h3&gt;</span></li><li class="L6"><span class="str">    &lt;ul&gt;</span></li><li class="L7"><span class="str">      &lt;li *</span><a href="https://angular.cn/api/common/NgForOf" class="code-anchor"><span class="str">ngFor</span></a><span class="str">="let member of hero.team"&gt;</span></li><li class="L8"><span class="str">        {{member}}</span></li><li class="L9"><span class="str">      &lt;/li&gt;</span></li><li class="L0"><span class="str">    &lt;/ul&gt;`</span></li><li class="L1"><span class="pun">})</span></li></ol></code>
    </pre></aio-code></code-example>
<div class="alert is-critical">
<p translation-result="">link 标签的 <code>href</code> URL 必须是相对于<strong><em>本应用的根路径</em></strong>的，而不是相对于这个组件文件的。</p><p translation-origin="off">The link tag's <code>href</code> URL must be relative to the
<em><strong>application root</strong></em>, not relative to the component file.</p>

<p translation-result="">当使用 CLI 进行构建时，要确保这个链接到的样式表文件被复制到了服务器上。参见 <a href="https://github.com/angular/angular-cli/wiki/stories-asset-configuration">CLI 官方文档</a>。</p><p translation-origin="off">When building with the CLI, be sure to include the linked style file among the assets to be copied to the server as described in the <a href="https://github.com/angular/angular-cli/wiki/stories-asset-configuration">CLI documentation</a>.</p>

</div>
<h3 translation-result="" id="css-imports">CSS @imports 语法<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#css-imports"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="css-imports">CSS @imports<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#css-imports"><i class="material-icons">link</i></a></h3>

<p translation-result="">你还可以利用标准的 CSS <a href="https://developer.mozilla.org/en/docs/Web/CSS/@import"><code>@import</code> 规则</a>来把其它
CSS 文件导入到 CSS 文件中。</p><p translation-origin="off">You can also import CSS files into the CSS files using the standard CSS <code>@import</code> rule.
For details, see <a href="https://developer.mozilla.org/en/docs/Web/CSS/@import"><code>@import</code></a>
on the <a href="https://developer.mozilla.org/">MDN</a> site.</p>

<p translation-result="">在<em>这种</em>情况下，URL 是相对于你正在导入的 CSS 文件的。</p><p translation-origin="off">In this case, the URL is relative to the CSS file into which you're importing.</p>

<code-example path="component-styles/src/app/hero-details.component.css" region="import" title="src/app/hero-details.component.css (excerpt)" ng-version="6.0.0"><div style="display: none">
/* The AOT compiler needs the `./` to show that this is local */
@import './hero-details-box.css';

</div><!----><header class="ng-star-inserted">src/app/hero-details.component.css (excerpt)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/hero-details.component.css (excerpt)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="com">/* The AOT compiler needs the `./` to show that this is local */</span><span class="pln">
</span><span class="lit">@import</span><span class="pln"> </span><span class="str">'./hero-details-box.css'</span><span class="pun">;</span></code>
    </pre></aio-code></code-example>
<h3 translation-result="" id="external-and-global-style-files">外部以及全局样式文件<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#external-and-global-style-files"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="external-and-global-style-files">External and global style files<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#external-and-global-style-files"><i class="material-icons">link</i></a></h3>

<p translation-result="">当使用 CLI 进行构建时，你必须配置 <code>angular.json</code> 文件，使其包含<em>所有外部资源</em>（包括外部的样式表文件）。</p><p translation-origin="off">When building with the CLI, you must configure the <code>angular.json</code> to include <em>all external assets</em>, including external style files.</p>

<p translation-result="">在它的 <code>styles</code> 区注册这些<strong>全局</strong>样式文件，默认情况下，它会有一个预先配置的全局 <code>styles.css</code> 文件。</p><p translation-origin="off">Register <strong>global</strong> style files in the <code>styles</code> section which, by default, is pre-configured with the global <code>styles.css</code> file.</p>

<p translation-result="">要了解更多，参见 <a href="https://github.com/angular/angular-cli/wiki/stories-global-styles">CLI 官方文档</a>。</p><p translation-origin="off">See the <a href="https://github.com/angular/angular-cli/wiki/stories-global-styles">CLI documentation</a> to learn more.</p>

<h3 translation-result="" id="non-css-style-files">非 CSS 样式文件<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#non-css-style-files"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="non-css-style-files">Non-CSS style files<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#non-css-style-files"><i class="material-icons">link</i></a></h3>

<p translation-result="">如果使用 CLI 进行构建，那么你可以用 <a href="http://sass-lang.com/">sass</a>、<a href="http://lesscss.org/">less</a> 或 <a href="http://stylus-lang.com/">stylus</a> 来编写样式，并使用相应的扩展名（<code>.scss</code>、<code>.less</code>、<code>.styl</code>）把它们指定到 <code>@<a href="https://angular.cn/api/core/Component#styleUrls" class="code-anchor">Component.styleUrls</a></code> 元数据中。例子如下：</p><p translation-origin="off">If you're building with the CLI,
you can write style files in <a href="http://sass-lang.com/">sass</a>, <a href="http://lesscss.org/">less</a>, or <a href="http://stylus-lang.com/">stylus</a> and specify those files in the <code>@<a href="https://angular.cn/api/core/Component#styleUrls" class="code-anchor">Component.styleUrls</a></code> metadata with the appropriate extensions (<code>.scss</code>, <code>.less</code>, <code>.styl</code>) as in the following example:</p>

<code-example ng-version="6.0.0"><div style="display: none">
@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a>({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.scss']
})
...
</div><!----><aio-code><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="lit">@</span><a href="https://angular.cn/api/core/Component" class="code-anchor"><span class="lit">Component</span></a><span class="pun">({</span><span class="pln">
  selector</span><span class="pun">:</span><span class="pln"> </span><span class="str">'app-root'</span><span class="pun">,</span><span class="pln">
  templateUrl</span><span class="pun">:</span><span class="pln"> </span><span class="str">'./app.component.html'</span><span class="pun">,</span><span class="pln">
  styleUrls</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="str">'./app.component.scss'</span><span class="pun">]</span><span class="pln">
</span><span class="pun">})</span><span class="pln">
</span><span class="pun">...</span></code>
    </pre></aio-code></code-example>
<p translation-result="">CLI 的构建过程会运行相关的预处理器。</p><p translation-origin="off">The CLI build process runs the pertinent CSS preprocessor.</p>

<p translation-result="">当使用 <code>ng generate component</code> 命令生成组件文件时，CLI 会默认生成一个空白的 CSS 样式文件（<code>.css</code>）。
你可以配置 CLI，让它默认使用你喜欢的 CSS 预处理器，参见 <a href="https://github.com/angular/angular-cli/wiki/stories-css-preprocessors" title="CSS Preprocessor integration">CLI 官方文档</a> 中的解释。</p><p translation-origin="off">When generating a component file with <code>ng generate component</code>, the CLI emits an empty CSS styles file (<code>.css</code>) by default.
You can configure the CLI to default to your preferred CSS preprocessor
as explained in the <a href="https://github.com/angular/angular-cli/wiki/stories-css-preprocessors" title="CSS Preprocessor integration">CLI documentation</a>.</p>

<div class="alert is-important">
<p translation-result="">添加到 <code>@<a href="https://angular.cn/api/core/Component#styles" class="code-anchor">Component.styles</a></code> 数组中的字符串<em>必须写成 CSS</em>，因为 CLI 没法对这些内联的样式使用任何 CSS 预处理器。</p><p translation-origin="off">Style strings added to the <code>@<a href="https://angular.cn/api/core/Component#styles" class="code-anchor">Component.styles</a></code> array <em>must be written in CSS</em> because the CLI cannot apply a preprocessor to inline styles.</p>

</div>
<a id="view-encapsulation"></a>
<h2 translation-result="" id="view-encapsulation">控制视图的封装模式：原生 (Native)、仿真 (Emulated) 和无 (None)<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#view-encapsulation"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="view-encapsulation">View encapsulation<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#view-encapsulation"><i class="material-icons">link</i></a></h2>

<p translation-result="">像上面讨论过的一样，组件的 CSS 样式被封装进了自己的视图中，而不会影响到应用程序的其它部分。</p><p translation-origin="off">As discussed earlier, component CSS styles are encapsulated into the component's view and don't
affect the rest of the application.</p>

<p translation-result="">通过在组件的元数据上设置<em>视图封装模式</em>，你可以分别控制<em>每个组件</em>的封装模式。
可选的封装模式一共有如下几种：</p><p translation-origin="off">To control how this encapsulation happens on a <em>per
component</em> basis, you can set the <em>view encapsulation mode</em> in the component metadata.
Choose from the following modes:</p>

<ul>
<li>
<p translation-result=""> <code>Native</code> 模式使用浏览器原生的 <a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM">Shadow DOM</a>
实现来为组件的宿主元素附加一个 Shadow DOM。组件的样式被包裹在这个 Shadow DOM 中。(译注：不进不出，没有样式能进来，组件样式出不去。)</p><p translation-origin="off"><code>Native</code> view encapsulation uses the browser's native shadow DOM implementation (see
<a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM">Shadow DOM</a>
on the <a href="https://developer.mozilla.org/">MDN</a> site)
to attach a shadow DOM to the component's host element, and then puts the component
view inside that shadow DOM. The component's styles are included within the shadow DOM.</p>

</li>
<li>
<p translation-result=""> <code>Emulated</code> 模式（<strong>默认值</strong>）通过预处理（并改名）CSS 代码来模拟 Shadow DOM 的行为，以达到把 CSS 样式局限在组件视图中的目的。
更多信息，见<a href="https://angular.cn/guide/component-styles#inspect-generated-css">附录 1</a> 。(译注：只进不出，全局样式能进来，组件样式出不去)</p><p translation-origin="off"><code>Emulated</code> view encapsulation (the default) emulates the behavior of shadow DOM by preprocessing
(and renaming) the CSS code to effectively scope the CSS to the component's view.
For details, see <a href="https://angular.cn/guide/component-styles#inspect-generated-css">Appendix 1</a>.</p>

</li>
<li>
<p translation-result=""> <code>None</code> 意味着 Angular 不使用视图封装。
Angular 会把 CSS 添加到全局样式中。而不会应用上前面讨论过的那些作用域规则、隔离和保护等。
从本质上来说，这跟把组件的样式直接放进 HTML 是一样的。(译注：能进能出。)</p><p translation-origin="off"><code>None</code> means that Angular does no view encapsulation.
Angular adds the CSS to the global styles.
The scoping rules, isolations, and protections discussed earlier don't apply.
This is essentially the same as pasting the component's styles into the HTML.</p>

</li>
</ul>
<p translation-result="">通过组件元数据中的 <code>encapsulation</code> 属性来设置组件封装模式：</p><p translation-origin="off">To set the components encapsulation mode, use the <code>encapsulation</code> property in the component metadata:</p>

<code-example path="component-styles/src/app/quest-summary.component.ts" region="encapsulation.native" title="src/app/quest-summary.component.ts" linenums="false" ng-version="6.0.0"><div style="display: none">
// warning: few browsers support shadow DOM encapsulation at this time
encapsulation: <a href="https://angular.cn/api/core/ViewEncapsulation#Native" class="code-anchor">ViewEncapsulation.Native</a>

</div><!----><header class="ng-star-inserted">src/app/quest-summary.component.ts</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/quest-summary.component.ts">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="com">// warning: few browsers support shadow DOM encapsulation at this time</span><span class="pln">
encapsulation</span><span class="pun">:</span><span class="pln"> </span><a href="https://angular.cn/api/core/ViewEncapsulation#Native" class="code-anchor"><span class="typ">ViewEncapsulation</span><span class="pun">.</span><span class="typ">Native</span></a></code>
    </pre></aio-code></code-example>
<p translation-result="">原生(<code>Native</code>)模式只适用于<a href="http://caniuse.com/#feat=shadowdom">有原生 Shadow DOM 支持的浏览器</a>。
因此仍然受到很多限制，这就是为什么仿真 (<code>Emulated</code>) 模式是默认选项，并建议将其用于大多数情况。</p><p translation-origin="off"><code>Native</code> view encapsulation only works on browsers that have native support
for shadow DOM (see <a href="http://caniuse.com/#feat=shadowdom">Shadow DOM v0</a> on the
<a href="http://caniuse.com/">Can I use</a> site). The support is still limited,
which is why <code>Emulated</code> view encapsulation is the default mode and recommended
in most cases.</p>

<a id="inspect-generated-css"></a>
<h2 translation-result="" id="inspecting-generated-css">查看仿真 (Emulated) 模式下生成的 CSS<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#inspecting-generated-css"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="inspecting-generated-css">Inspecting generated CSS<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/component-styles#inspecting-generated-css"><i class="material-icons">link</i></a></h2>

<p translation-result="">当使用默认的仿真模式时，Angular 会对组件的所有样式进行预处理，让它们模仿出标准的 Shadow CSS 作用域规则。</p><p translation-origin="off">When using emulated view encapsulation, Angular preprocesses
all component styles so that they approximate the standard shadow CSS scoping rules.</p>

<p translation-result="">在启用了仿真模式的 Angular 应用的 DOM 树中，每个 DOM 元素都被加上了一些额外的属性。</p><p translation-origin="off">In the DOM of a running Angular application with emulated view
encapsulation enabled, each DOM element has some extra attributes
attached to it:</p>

<code-example format="" ng-version="6.0.0"><div style="display: none">
  &lt;hero-details _nghost-pmm-5&gt;
    &lt;h2 _ngcontent-pmm-5&gt;Mister Fantastic&lt;/h2&gt;
    &lt;hero-team _ngcontent-pmm-5 _nghost-pmm-6&gt;
      &lt;h3 _ngcontent-pmm-6&gt;Team&lt;/h3&gt;
    &lt;/hero-team&gt;
  &lt;/hero-detail&gt;

</div><!----><aio-code><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="tag">&lt;hero-details</span><span class="pln"> _</span><span class="atn">nghost-pmm-5</span><span class="tag">&gt;</span><span class="pln">
  </span><span class="tag">&lt;h2</span><span class="pln"> _</span><span class="atn">ngcontent-pmm-5</span><span class="tag">&gt;</span><span class="pln">Mister Fantastic</span><span class="tag">&lt;/h2&gt;</span><span class="pln">
  </span><span class="tag">&lt;hero-team</span><span class="pln"> _</span><span class="atn">ngcontent-pmm-5</span><span class="pln"> _</span><span class="atn">nghost-pmm-6</span><span class="tag">&gt;</span><span class="pln">
    </span><span class="tag">&lt;h3</span><span class="pln"> _</span><span class="atn">ngcontent-pmm-6</span><span class="tag">&gt;</span><span class="pln">Team</span><span class="tag">&lt;/h3&gt;</span><span class="pln">
  </span><span class="tag">&lt;/hero-team&gt;</span><span class="pln">
</span><span class="tag">&lt;/hero-detail&gt;</span></code>
    </pre></aio-code></code-example>
<p translation-result="">生成出的属性分为两种：</p><p translation-origin="off">There are two kinds of generated attributes:</p>

<ul>
<li>
<p translation-result=""> 一个元素在原生封装方式下可能是 Shadow DOM 的宿主，在这里被自动添加上一个 <code>_nghost</code> 属性。
这是组件宿主元素的典型情况。</p><p translation-origin="off">An element that would be a shadow DOM host in native encapsulation has a
generated <code>_nghost</code> attribute. This is typically the case for component host elements.</p>

</li>
<li>
<p translation-result="">   组件视图中的每一个元素，都有一个 <code>_ngcontent</code> 属性，它会标记出该元素是哪个宿主的模拟 Shadow DOM。</p><p translation-origin="off">An element within a component's view has a <code>_ngcontent</code> attribute
that identifies to which host's emulated shadow DOM this element belongs.</p>

</li>
</ul>
<p translation-result="">这些属性的具体值并不重要。它们是自动生成的，并且你永远不会在程序代码中直接引用到它们。
但它们会作为生成的组件样式的目标，就像 DOM 的 <code>&lt;head&gt;</code> 中一样：</p><p translation-origin="off">The exact values of these attributes aren't important. They are automatically
generated and you never refer to them in application code. But they are targeted
by the generated component styles, which are in the <code>&lt;head&gt;</code> section of the DOM:</p>

<code-example format="" ng-version="6.0.0"><div style="display: none">
  [_nghost-pmm-5] {
    display: block;
    border: 1px solid black;
  }

  h3[_ngcontent-pmm-6] {
    background-color: white;
    border: 1px solid #777;
  }
</div><!----><aio-code><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="pun">[</span><span class="pln">_nghost</span><span class="pun">-</span><span class="pln">pmm</span><span class="pun">-</span><span class="lit">5</span><span class="pun">]</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  display</span><span class="pun">:</span><span class="pln"> block</span><span class="pun">;</span><span class="pln">
  border</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1px</span><span class="pln"> solid black</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span><span class="pln">

h3</span><span class="pun">[</span><span class="pln">_ngcontent</span><span class="pun">-</span><span class="pln">pmm</span><span class="pun">-</span><span class="lit">6</span><span class="pun">]</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  background</span><span class="pun">-</span><span class="pln">color</span><span class="pun">:</span><span class="pln"> white</span><span class="pun">;</span><span class="pln">
  border</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1px</span><span class="pln"> solid </span><span class="com">#777;</span><span class="pln">
</span><span class="pun">}</span></code>
    </pre></aio-code></code-example>
<p translation-result="">这些就是那些样式被处理后的结果，每个选择器都被增加了 <code>_nghost</code> 或 <code>_ngcontent</code> 属性选择器。
这些额外的选择器实现了本文所描述的这些作用域规则。</p><p translation-origin="off">These styles are post-processed so that each selector is augmented
with <code>_nghost</code> or <code>_ngcontent</code> attribute selectors.
These extra selectors enable the scoping rules described in this page.</p>


</div>
<!-- links to this doc:
-->
<!-- links from this doc:
 - api/animations/style
 - api/common/NgForOf
 - api/core/Component
 - api/core/Component#styleUrls
 - api/core/Component#styles
 - api/core/ViewEncapsulation#Native
 - api/router/RouterLinkWithHref
 - guide/component-styles#component-styles
 - guide/component-styles#css-imports
 - guide/component-styles#deprecated-codedeepcode-codecode-and-codeng-deepcode
 - guide/component-styles#deprecated-deep--and-ng-deep
 - guide/component-styles#external-and-global-style-files
 - guide/component-styles#host
 - guide/component-styles#host-context
 - guide/component-styles#inspect-generated-css
 - guide/component-styles#inspecting-generated-css
 - guide/component-styles#loading-component-styles
 - guide/component-styles#non-css-style-files
 - guide/component-styles#special-selectors
 - guide/component-styles#style-files-in-component-metadata
 - guide/component-styles#style-scope
 - guide/component-styles#styles-in-component-metadata
 - guide/component-styles#template-inline-styles
 - guide/component-styles#template-link-tags
 - guide/component-styles#using-component-styles
 - guide/component-styles#view-encapsulation
 - http://caniuse.com
 - http://caniuse.com/#feat=shadowdom
 - http://lesscss.org/
 - http://sass-lang.com/
 - http://stylus-lang.com/
 - https://developer.mozilla.org
 - https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM
 - https://developer.mozilla.org/en/docs/Web/CSS/@import
 - https://github.com/angular/angular-cli/wiki/stories-asset-configuration
 - https://github.com/angular/angular-cli/wiki/stories-css-preprocessors
 - https://github.com/angular/angular-cli/wiki/stories-global-styles
 - https://www.chromestatus.com/features/6750456638341120
 - https://www.w3.org
 - https://www.w3.org/TR/css-scoping-1
--></div></aio-doc-viewer><aio-dt><!----></aio-dt></section></mat-sidenav-content></mat-sidenav-container><!----><div class="toc-container no-print ng-star-inserted" style="max-height: 3682px;"><aio-toc><!----><div class="toc-inner no-print collapsed ng-star-inserted"><!----><!----><ul class="toc-list"><!----><!----><!----><li title="组件样式link" class="h1 active ng-star-inserted"><a href="https://angular.cn/guide/component-styles#component-styles">组件样式</a></li><!----><!----><!----><li title="使用组件样式link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/component-styles#using-component-styles">使用组件样式</a></li><!----><!----><!----><li title="范围化的样式link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/component-styles#style-scope">范围化的样式</a></li><!----><!----><!----><li title="特殊的选择器link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/component-styles#special-selectors">特殊的选择器</a></li><!----><!----><!----><li title=":host 选择器link" class="h3 ng-star-inserted"><a href="https://angular.cn/guide/component-styles#host">:host 选择器</a></li><!----><!----><!----><li title=":host-context 选择器link" class="h3 ng-star-inserted"><a href="https://angular.cn/guide/component-styles#host-context">:host-context 选择器</a></li><!----><!----><!----><li title="已废弃 /deep/、&gt;&gt;&gt; 和 ::ng-deeplink" class="h3 ng-star-inserted"><a href="https://angular.cn/guide/component-styles#deprecated-codedeepcode-codecode-and-codeng-deepcode">已废弃 <code>/deep/</code>、<code>&gt;&gt;&gt;</code> 和 <code>::ng-deep</code></a></li><!----><!----><!----><li title="把样式加载进组件中link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/component-styles#loading-component-styles">把样式加载进组件中</a></li><!----><!----><!----><li title="元数据中的样式link" class="h3 ng-star-inserted"><a href="https://angular.cn/guide/component-styles#styles-in-component-metadata">元数据中的样式</a></li><!----><!----><!----><li title="组件元数据中的样式文件link" class="h3 ng-star-inserted"><a href="https://angular.cn/guide/component-styles#style-files-in-component-metadata">组件元数据中的样式文件</a></li><!----><!----><!----><li title="模板内联样式link" class="h3 ng-star-inserted"><a href="https://angular.cn/guide/component-styles#template-inline-styles">模板内联样式</a></li><!----><!----><!----><li title="模板中的 link 标签link" class="h3 ng-star-inserted"><a href="https://angular.cn/guide/component-styles#template-link-tags">模板中的 link 标签</a></li><!----><!----><!----><li title="CSS @imports 语法link" class="h3 ng-star-inserted"><a href="https://angular.cn/guide/component-styles#css-imports">CSS @imports 语法</a></li><!----><!----><!----><li title="外部以及全局样式文件link" class="h3 ng-star-inserted"><a href="https://angular.cn/guide/component-styles#external-and-global-style-files">外部以及全局样式文件</a></li><!----><!----><!----><li title="非 CSS 样式文件link" class="h3 ng-star-inserted"><a href="https://angular.cn/guide/component-styles#non-css-style-files">非 CSS 样式文件</a></li><!----><!----><!----><li title="控制视图的封装模式：原生 (Native)、仿真 (Emulated) 和无 (None)link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/component-styles#view-encapsulation">控制视图的封装模式：原生 (Native)、仿真 (Emulated) 和无 (None)</a></li><!----><!----><!----><li title="查看仿真 (Emulated) 模式下生成的 CSSlink" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/component-styles#inspecting-generated-css">查看仿真 (Emulated) 模式下生成的 CSS</a></li><!----></ul><!----></div></aio-toc></div><footer class="no-print"><aio-footer><div class="grid-fluid"><!----><div class="footer-block ng-star-inserted"><h3>资源</h3><ul><!----><li class="ng-star-inserted"><a class="link" href="https://angular.cn/about" title="Angular 贡献者。">关于</a></li><li class="ng-star-inserted"><a class="link" href="https://angular.cn/resources" title="网络上的 Angular 工具、培训、博客等">资源列表</a></li><li class="ng-star-inserted"><a class="link" href="https://angular.cn/presskit" title="我们的联系方式、LOGO 和品牌">宣传资料</a></li><li class="ng-star-inserted"><a class="link" href="https://blog.angular.io/" title="Angular 官方博客">博客</a></li></ul></div><div class="footer-block ng-star-inserted"><h3>帮助</h3><ul><!----><li class="ng-star-inserted"><a class="link" href="https://stackoverflow.com/questions/tagged/angular" title="Stack Overflow: 这里的社区会回答你关于 Angular 的技术问题">Stack Overflow</a></li><li class="ng-star-inserted"><a class="link" href="https://gitter.im/angular/angular" title="和老鸟聊 Angular">Gitter</a></li><li class="ng-star-inserted"><a class="link" href="https://github.com/angular/angular/issues" title="在 github 上报告问题和建议。">报告问题</a></li><li class="ng-star-inserted"><a class="link" href="https://github.com/angular/code-of-conduct/blob/master/CODE_OF_CONDUCT.md" title="让我们彼此尊重">行为规范</a></li></ul></div><div class="footer-block ng-star-inserted"><h3>社区</h3><ul><!----><li class="ng-star-inserted"><a class="link" href="https://angular.cn/events" title="Post issues and suggestions on github.">活动</a></li><li class="ng-star-inserted"><a class="link" href="http://www.meetup.com/topics/angularjs/" title="参加聚会，向别的开发人员学习">聚会</a></li><li class="ng-star-inserted"><a class="link" href="https://twitter.com/angular" title="Twitter">Twitter</a></li><li class="ng-star-inserted"><a class="link" href="https://github.com/angular/angular" title="GitHub">GitHub</a></li><li class="ng-star-inserted"><a class="link" href="https://angular.cn/contribute" title="向 Angular 做贡献">做贡献</a></li></ul></div><div class="footer-block ng-star-inserted"><h3>多语言</h3><ul><!----><li class="ng-star-inserted"><a class="link" href="https://angular.io/" title="English Version.">English Version</a></li><li class="ng-star-inserted"><a class="link" href="https://angular.jp/" title="日本語版">日本語版</a></li></ul></div></div><p> Powered by Google ©2010-2018. 代码授权方式：<a href="https://angular.cn/license" title="License text">MIT-style License</a>. 文档授权方式：<a href="http://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a>. </p><p><span class="text-caption">本网站由第三方公司洛阳永欣维护 &nbsp;<a href="http://www.miitbeian.gov.cn/">豫ICP备16019859号-1</a></span></p><p> 当前版本：6.0.1-build.180+sha.8494cf4. </p></aio-footer></footer></aio-shell>

  <noscript>
    &lt;div class="background-sky hero"&gt;&lt;/div&gt;
    &lt;section id="intro"&gt;
      &lt;div class="hero-logo"&gt;
        &lt;img src="assets/images/logos/angular/angular.svg" width="250" height="250"&gt;
      &lt;/div&gt;
      &lt;div class="homepage-container"&gt;
        &lt;div class="hero-headline"&gt;一套框架，多种平台&lt;br&gt;移动 &amp;amp; 桌面&lt;/div&gt;
      &lt;/div&gt;
    &lt;/section&gt;
    &lt;h2 style="color: red; text-align: center; margin-top: -50px;"&gt;
      &lt;b&gt;&lt;i&gt;该网站需要浏览器支持 JavaScript &lt;/i&gt;&lt;/b&gt;
    &lt;/h2&gt;
  </noscript>


<script type="text/javascript" src="./Angular - 组件样式_files/runtime.e7e60529879ffb07e28e.js.下载"></script><script type="text/javascript" src="./Angular - 组件样式_files/polyfills.56dafdd128abda80a86c.js.下载"></script><script type="text/javascript" src="./Angular - 组件样式_files/main.e580488e21fdad9d749c.js.下载"></script><div class="cdk-visually-hidden" aria-atomic="true" aria-live="polite"></div></body></html>