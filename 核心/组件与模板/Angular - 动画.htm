<!DOCTYPE html>
<!-- saved from url=(0035)https://angular.cn/guide/animations -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  
  <title>Angular - 动画</title>
  <!--<base href="/">--><base href=".">

  <meta name="viewport" content="width=device-width, initial-scale=1">

  <link rel="icon" type="image/x-icon" href="https://angular.cn/favicon.ico">
  <link rel="icon" type="image/x-icon" href="https://angular.cn/assets/images/favicons/favicon.ico">
  <link rel="icon" type="image/png" href="https://angular.cn/assets/images/favicons/favicon-32x32.png" sizes="32x32">
  <link rel="icon" type="image/png" href="https://angular.cn/assets/images/favicons/favicon-194x194.png" sizes="194x194">
  <link rel="icon" type="image/png" href="https://angular.cn/assets/images/favicons/favicon-96x96.png" sizes="96x96">
  <link rel="icon" type="image/png" href="https://angular.cn/assets/images/favicons/favicon-16x16.png" sizes="16x16">
  <link rel="apple-touch-icon" sizes="144x144" href="https://angular.cn/assets/images/favicons/apple-touch-icon-144x144.png">
  <link rel="apple-touch-icon-precomposed" sizes="144x144" href="https://angular.cn/assets/images/favicons/apple-touch-icon-144x144.png">

  <!-- NOTE: These need to be kept in sync with `ngsw-manifest.json`. -->
  <link href="./Angular - 动画_files/Material_Icons.css" rel="stylesheet">
  <link href="./Angular - 动画_files/Droid_Sans_Mono.css" rel="stylesheet">
  <link href="./Angular - 动画_files/font-awesome.min.css" rel="stylesheet">
  <!-- -->

  <link rel="manifest" href="https://angular.cn/pwa-manifest.json">
  <meta name="theme-color" content="#1976d2">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-status-bar-style" content="translucent">

  <script async="" src="./Angular - 动画_files/analytics.js.下载"></script><script>
    // Dynamically, pre-emptively, add `noindex`, which will be removed when the doc is ready and valid
    tag = document.createElement('meta'); tag.name = 'robots'; tag.content = 'noindex';
    document.head.appendChild(tag);
  </script>

  <!-- Google Analytics -->
  <script>
  // Note this is a customised version of the GA tracking snippet
  // See the comments below for more info
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;
  ~i.name.indexOf('NG_DEFER_BOOTSTRAP')|| // only load library if not running e2e tests
  m.parentNode.insertBefore(a,m)
  })(window,document,'script','assets/js/analytics.js','ga');
  </script>
  <!-- End Google Analytics -->

  <script>
    // Report fatal errors to Google Analytics
    window.onerror = function() {
      ga('send', 'exception', {exDescription: formatError.apply(null, arguments), exFatal: true});

      function formatError(msg, url, line, col, e) {
        var stack;
        msg = msg.replace(/^Error: /, '');
        if (e) {
          stack = e.stack
              // strip the leading "Error: " from the stack trace
              .replace(/^Error: /, '')
              // strip the message from the stack trace, if present
              .replace(msg + '\n', '')
              // strip leading spaces
              .replace(/^ +/gm, '')
              // strip all leading "at " for each frame
              .replace(/^at /gm, '')
              // replace long urls with just the last segment: `filename:line:column`
              .replace(/(?: \(|@)http.+\/([^/)]+)\)?(?:\n|$)/gm, '@$1\n')
              // replace "eval code" in Edge
              .replace(/ *\(eval code(:\d+:\d+)\)(?:\n|$)/gm, '@???$1\n')
        } else {
          line = line || '?';
          col = col || '?';
          stack = url + ':' + line + ':' + col;
        }
        return (msg + '\n' + stack).substr(0, 150);
      }
    };
  </script>

  <script>
    if (window.document.documentMode) {
      // polyfill IE11 in a blocking way
      var s = document.createElement('script');
      s.src = 'generated/ie-polyfills.min.js';
      document.head.appendChild(s);
    } else if (!Object.assign) {
      // polyfill other non-evergreen browsers in a blocking way
      var polyfillUrl = "https://cdn.polyfill.io/v2/polyfill.min.js?features=default,Array.prototype.find&flags=gated&unknown=polyfill";

      // send a blocking XHR to fetch the polyfill
      // then append it to the document so that its eval-ed synchronously
      // this is required because the method used for IE is not reliable with other non-evergreen browsers
      var xhr = new XMLHttpRequest();
      xhr.addEventListener("load", function() {
        var s = document.createElement('script');
        s.type = 'text/javascript';
        var code = this.responseText;
        s.appendChild(document.createTextNode(code));
        document.head.appendChild(s);
      });
      xhr.open("GET", polyfillUrl, false);
      xhr.send();
    }
  </script>

  <script>
    //load CE polyfill
    //HACK: webpack's html plugin mangles the document.write calls if we don't trick it.

    //load the ES5 shim for browsers with native CE support
    function loadCustomElementsShim(){
      document.write('<scri' + 'pt src="assets/js/native-shim.js"><' + '/script>');
    }

    //load the full custom elements polyfill for browsers without support
    function loadCustomElementsPolyfill(){
      document.write('<scri' + 'pt src="assets/js/custom-elements.min.js"><' + '/script>');
    }
    //detect if we have native CE support
    if(!window.customElements){
      loadCustomElementsPolyfill();
    }
    else {
      loadCustomElementsShim();
    }
  </script><script src="./Angular - 动画_files/native-shim.js.下载"></script>

<link rel="stylesheet" href="./Angular - 动画_files/styles.613b7c8de73e274bd4c6.css"><style>@media screen and (-ms-high-contrast:active){.mat-toolbar{outline:solid 1px}}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media (max-width:599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}</style><style>.mat-button,.mat-flat-button,.mat-icon-button,.mat-stroked-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;overflow:visible}.mat-button[disabled],.mat-flat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner{border:0}.mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{transition:none;opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:1}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-raised-button:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-raised-button[disabled]{box-shadow:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}.mat-flat-button:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-fab::-moz-focus-inner{border:0}.mat-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-fab[disabled]{box-shadow:none}.mat-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}.mat-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-mini-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-mini-fab[disabled]{box-shadow:none}.mat-mini-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}.mat-mini-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button .mat-icon,.mat-icon-button i{line-height:24px}.mat-button-focus-overlay,.mat-button-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-focus-overlay{background-color:rgba(0,0,0,.12);border-radius:inherit;opacity:0;transition:opacity .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1)}@media screen and (-ms-high-contrast:active){.mat-button-focus-overlay{background-color:rgba(255,255,255,.5)}}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}@media screen and (-ms-high-contrast:active){.mat-button,.mat-fab,.mat-flat-button,.mat-icon-button,.mat-mini-fab,.mat-raised-button{outline:solid 1px}}</style><style>.mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1,1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}</style><style>.mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-opened{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:background-color,visibility}@media screen and (-ms-high-contrast:active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%,0,0)}@media screen and (-ms-high-contrast:active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media screen and (-ms-high-contrast:active){.mat-drawer.mat-drawer-end,[dir=rtl] .mat-drawer{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer{transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%,0,0)}.mat-drawer:not(.mat-drawer-side){box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12)}.mat-sidenav-fixed{position:fixed}</style><script charset="utf-8" src="./Angular - 动画_files/live-example-live-example-module-ngfactory.76888e8a441aab262101.js.下载"></script><style>.mat-progress-bar{display:block;height:5px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:'';display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2s infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2s infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(.5,0,.70173,.49582);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(.30244,.38135,.55,.95635);transform:translateX(83.67142%)}100%{transform:translateX(200.61106%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(.08)}36.65%{animation-timing-function:cubic-bezier(.33473,.12482,.78584,1);transform:scaleX(.08)}69.15%{animation-timing-function:cubic-bezier(.06,.11,.6,1);transform:scaleX(.66148)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:translateX(37.65191%)}48.35%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:translateX(84.38617%)}100%{transform:translateX(160.27778%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:scaleX(.08)}19.15%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:scaleX(.4571)}44.15%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:scaleX(.72796)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-10px)}}</style><script charset="utf-8" src="./Angular - 动画_files/code-code-example-module-ngfactory_code-code-tabs-module-ngfactory.6a5aabadc81dbdfa0f4e.js.下载"></script><script charset="utf-8" src="./Angular - 动画_files/code-code-tabs-module-ngfactory.8315a94f020cd25fe92d.js.下载"></script><script charset="utf-8" src="./Angular - 动画_files/code-code-example-module-ngfactory.d0ec50584c7428d1d6ed.js.下载"></script><script charset="utf-8" src="./Angular - 动画_files/12.50857b4475720140b255.js.下载"></script><style>.mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.mat-tab-label.mat-tab-disabled{cursor:default}.mat-tab-label.mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (max-width:599px){.mat-tab-label{padding:0 12px}}@media (max-width:959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs] .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}</style><style>.mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.mat-tab-label.mat-tab-disabled{cursor:default}.mat-tab-label.mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (max-width:599px){.mat-tab-label{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media screen and (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-header-pagination{position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-tab-labels{display:flex}</style><style>.mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}</style></head>
<body>

  <aio-shell ng-version="6.0.0" class="mode-stable sidenav-open page-guide-animations folder-guide view-SideNav aio-notification-hide "><div id="top-of-page"></div><!----><mat-toolbar class="app-toolbar no-print mat-toolbar mat-primary mat-toolbar-multiple-rows" color="primary"><mat-toolbar-row class="notification-container mat-toolbar-row"><aio-notification actionurl="https://bit.ly/angular-survey-2018" buttontext="Go to survey" expirationdate="2018-01-19" icon="insert_comment" iconlabel="Survey" notificationid="survey-january-2018" class="ng-tns-c2-0 ng-trigger ng-trigger-hideAnimation" style="height: 0px;"><a class="content" href="https://bit.ly/angular-survey-2018"><mat-icon class="icon mat-icon" role="img" aria-hidden="true" aria-label="Survey"><svg fill="#FFFFFF" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M20 2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg></mat-icon><span class="message"> Help Angular by taking a <b>1 minute survey</b>! </span><span class="action-button">Go to survey</span></a><button class="close-button mat-icon-button" aria-label="Close" mat-icon-button=""><span class="mat-button-wrapper"><mat-icon aria-label="Dismiss notification" class="mat-icon ng-tns-c2-0" role="img" svgicon="close" aria-hidden="true"><svg fill="#ffffff" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg></mat-icon></span><div class="mat-button-ripple mat-ripple mat-button-ripple-round" matripple=""></div><div class="mat-button-focus-overlay"></div></button></aio-notification></mat-toolbar-row><mat-toolbar-row class="mat-toolbar-row"><button class="hamburger mat-button" mat-button="" title="Docs menu"><span class="mat-button-wrapper"><mat-icon class="mat-icon" role="img" svgicon="menu" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"></path></svg></mat-icon></span><div class="mat-button-ripple mat-ripple" matripple=""></div><div class="mat-button-focus-overlay"></div></button><a class="nav-link home" href="https://angular.cn/"><!----><img alt="Home" height="40" src="./Angular - 动画_files/logo-nav@2x.png" title="Home" width="150" class="ng-star-inserted"><!----></a><!----><aio-top-menu class="ng-star-inserted"><ul role="navigation"><!----><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/features" title="特性">特性</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/docs" title="文档">文档</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/resources" title="资源">资源</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/events" title="会议">会议</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://blog.angular.io/" title="博客">博客</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/translations/cn/home" title="关于中文版">关于中文版</a></li></ul></aio-top-menu><aio-search-box class="search-container"><input aria-label="search" placeholder="搜索" type="search"></aio-search-box></mat-toolbar-row></mat-toolbar><!----><mat-sidenav-container class="sidenav-container mat-drawer-container mat-sidenav-container mat-drawer-transition has-floating-toc" role="main"><!----><div class="mat-drawer-backdrop ng-star-inserted"></div><div tabindex="-1" class="cdk-visually-hidden cdk-focus-trap-anchor"></div><mat-sidenav class="sidenav mat-drawer mat-sidenav ng-tns-c6-1 ng-trigger ng-trigger-transform mat-drawer-side ng-star-inserted" tabindex="-1" style="transform: translate3d(0px, 0px, 0px); visibility: visible;"><!----><aio-nav-menu><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-1 collapsed" href="https://angular.cn/guide/quickstart" title="Angular 破冰"> 快速上手 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-1 expanded" type="button" title="此《英雄指南》教程会带你用 TypeScript 一步步创建一个 Angular 应用。" aria-pressed="true"> 教程 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-1 expanded"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial" title="第一部分：《英雄指南》教程简介"> 1. 简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt0" title="第二部分：创建应用的外壳"> 2. 应用的“外壳” </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt1" title="第三部分：构建一个简单的英雄编辑器"> 3. 英雄编辑器 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt2" title="第四部分：构建一个主从结构的页面，用于展现英雄列表"> 4. 显示英雄列表 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt3" title="第五部分：把主从结构的页面重构成多个组件"> 5. 主从组件 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt4" title="第六部分：创建一个可复用的服务来管理英雄数据"> 6. 服务 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt5" title="第七部分：添加 Angular 路由器，并且学习在视图之间导航"> 7. 路由 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt6" title="第八部分：通过 HTTP 来获取并保存英雄数据"> 8. HTTP </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-1 expanded selected" type="button" title="学习 Angular 的核心知识" aria-pressed="true"> 核心知识 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-1 expanded selected"><!----><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 expanded" type="button" title="Angular 应用的基本构造块。" aria-pressed="true"> 架构 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 expanded"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/architecture" title="Angular 应用的基本构造块"> 架构概览 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/architecture-modules" title="关于模块。"> 模块（NgModule）简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/architecture-components" title="关于组件、模板和视图。"> 组件简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/architecture-services" title="关于服务与依赖注入。"> 服务与 DI 简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/architecture-next-steps" title="学完基础知识之后……"> 后续步骤 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 expanded selected" type="button" title="使用数据绑定构建动态视图" aria-pressed="true"> 组件与模板 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 expanded selected"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/displaying-data" title="属性绑定可以帮助应用把数据显示在界面上"> 显示数据 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/template-syntax" title="学习如何写模板，以便借助数据绑定机制显示数据并响应事件。"> 模板语法 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/lifecycle-hooks" title="Angular 调用指令和组件的生命周期钩子函数，包括它的创建、变更和销毁时。"> 生命周期钩子 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/component-interaction" title="在不同的指令和组件之间共享信息"> 组件交互 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/component-styles" title="添加专属于某个组件的样式"> 组件样式 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/elements" title="把组件转换成自定义元素。"> Angular 自定义元素 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/dynamic-component-loader" title="动态加载组件"> 动态组件 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/attribute-directives" title="属性型指令把行为添加到现有元素上。"> 属性型指令 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/structural-directives" title="结构型指令可以操纵页面的布局"> 结构型指令 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/pipes" title="管道可以在模板中转换显示的内容。"> 管道 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded selected" href="https://angular.cn/guide/animations" title="Angular 动画体系指南"> 动画 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Angular 的表单" aria-pressed="false"> 表单 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/user-input" title="用户输入触发 DOM 事件。我们通过事件绑定来监听它们，把更新过的数据导入回我们的组件和 model。"> 用户输入 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/forms" title="表单可以创建集中、高效、引人注目的输入体验。Angular 表单可以协调一组数据绑定控件，跟踪变更，验证输入，并表达错误信息。"> 模板驱动表单 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/form-validation" title="验证用户的表单输入"> 表单验证 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/reactive-forms" title="使用 FormBuilder 、分组和数组创建响应式表单。"> 响应式表单 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dynamic-form" title="使用FormGroup渲染动态表单"> 动态表单 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Observable 与 RxJS" aria-pressed="false"> Observable 与 RxJS <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/observables" title=""> 可观察对象(Observable) </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/rx-library" title=""> RxJS 库 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/observables-in-angular" title=""> Angular 中的可观察对象 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/practical-observable-usage" title=""> 用法实战 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/comparing-observables" title=""> 与其它技术的比较 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/bootstrapping" title="在应用的根模块（AppModule）中告诉 Angular 如何构造并引导引用。"> 引导启动 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Angular 中的模块" aria-pressed="false"> Angular 模块 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ngmodules" title="使用 NgModule 让你的应用更高效"> NgModule 简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ngmodule-vs-jsmodule" title="JavaScript 模块和 NgModule 之间的差异"> JS 模块 vs NgModule </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/frequent-ngmodules" title="介绍最常用的 Angular 模块"> 常用模块 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/module-types" title="介绍特性模块的几种类型"> 特性模块的分类 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/entry-components" title="关于 Angular 中入口组件的一切"> 入口组件 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/feature-modules" title="创建特性模块，以组织你的代码"> 特性模块 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/providers" title="服务提供商与 Angular 模块"> 服务提供商 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/singleton-services" title="创建单例应用"> 单例应用 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/lazy-loading-ngmodules" title="惰性加载模块，以提高应用的性能"> 惰性加载的特性模块 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/sharing-ngmodules" title="共享 Angular 模块让你的应用现代化。"> 共享 Angular 模块 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ngmodule-api" title="理解 NgModule 的那些细节。"> NgModule API </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ngmodule-faq" title="回答关于 NgModules 的常见问题。"> NgModule 常见问题 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="依赖注入：创建并注入各种服务。" aria-pressed="false"> 依赖注入 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dependency-injection-pattern" title="学习 Angular 依赖注入系统背后的依赖注入模式"> 依赖注入模式 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dependency-injection" title="Angular 的依赖注入系统能够为 Angular 创建的类创建并交付它们所依赖的服务。"> Angular 依赖注入 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/hierarchical-dependency-injection" title="Angular 的多级注入体系会建立与组件平行的注入器树。"> 多级注入器 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dependency-injection-in-action" title="依赖注入的使用技巧"> DI 实用技巧 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/http" title="通过 HTTP 协议与远程服务器对话。"> HttpClient </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/router" title="揭示如何通过 Angular 路由进行基本的屏幕导航。"> 路由与导航 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/testing" title="测试 Angular 应用的技巧与实践。"> 测试 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/cheatsheet" title="关于 Angular 常用编码技术的快速指南。"> 速查表 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-1 collapsed" type="button" title="把 Angular 用到你的实际工作中的一些技巧" aria-pressed="false"> 其它技术 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-1 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/i18n" title="把应用模板中的文本翻译成多种语言。"> 国际化 (i18n) </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/language-service" title="使用 Angular 语言服务来为开发提速。"> 语言服务 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/security" title="Angular 应用开发中的安全技术。"> 安全 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="环境准备与部署" aria-pressed="false"> 环境准备与部署 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/setup" title="在你自己的机器上安装 Angular QuickStart 种子，以便更快、更高效的开发。"> 搭建本地开发环境 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/setup-systemjs-anatomy" title="基于 SystemJS 的本地开发环境内幕。"> 搭建方式剖析 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/browser-support" title="浏览器支持与 Polyfills 指南"> 浏览器支持 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/npm-packages" title="建议的 npm 包，以及如何指定包的依赖。"> npm 包 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/typescript-configuration" title="给 Angular 开发者的 TypeScript 配置。"> TypeScript 配置 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/aot-compiler" title="学习如何使用 AOT 预编译器。"> 预先（AOT）编译 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/deployment" title="学习如何部署你的 Angular 应用。"> 部署 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/custom-elements" title="把 Angular 组件用作自定义元素。"> 自定义元素 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Angular 的 Service Worker：控制应用的资源缓存。" aria-pressed="false"> Service Worker <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-intro" title="Angular 对 Service Worker 的实现提升了慢速或不稳定的网络连接下的用户体验。"> 简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-getting-started" title="在 CLI 项目中启用 Service Worker，并在浏览器中查看效果。"> 快速起步 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-communications" title="那些能让你和 Angular 的 Service Worker 通讯的服务类。"> 与 Service Worker 通讯 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-devops" title="使用 Service Worker 运行应用、管理应用更新、调试以及杀掉正在运行的应用。"> 生产环境下的 Service Worker </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-config" title="配置 Service Worker 的缓存行为。"> Service Worker 配置 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Angular 的发布实践，更新计划以及与更新有关的资源。" aria-pressed="false"> 保持最新 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/updating" title="关于如何把 Angular 应用升级到最新版的信息。"> 更新你的项目 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/releases" title="Angular 的版本、发布、支持与弃用策略。"> Angular 的版本发布 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="把 AngularJS 应用增量式的升级到 Angular。" aria-pressed="false"> 从 AngularJS 升级 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/upgrade" title="把 AngularJS 应用增量式的升级到 Angular。"> 升级步骤 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ajs-quick-reference" title="学习如何把 AngularJS 的概念映射到 Angular 中。"> AngularJS 与 Angular 的概念对照 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/universal" title="使用 Angular Universal 在服务端渲染 HTML。">  服务端渲染 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/visual-studio-2015" title="在 Visual Studio 2015 中使用快速起步中的文件"> Visual Studio 2015 快速上手 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/styleguide" title="写出 Angular 风格的程序"> 风格指南 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/glossary" title="Angular 中最重要的词汇的简要定义。"> 词汇表 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-1 collapsed" href="https://angular.cn/api" title="关于 Angular 中类和值的详细信息。"> API 参考手册 </a></div><!----></aio-nav-item></aio-nav-menu><div class="doc-version"><aio-select><div class="form-select-menu"><button class="form-select-button"><strong></strong><!---->stable (v6.0.0) </button><!----></div></aio-select></div></mat-sidenav><div tabindex="-1" class="cdk-visually-hidden cdk-focus-trap-anchor"></div><!----><mat-sidenav-content cdkscrollable="" class="mat-drawer-content mat-sidenav-content ng-star-inserted" style="margin-left: 262px; margin-right: 0px;"><section class="sidenav-content" role="content" id="guide-animations"><aio-mode-banner><!----></aio-mode-banner><aio-doc-viewer class=""><div style="opacity: 1; transition: all 200ms ease-in-out;">
<div class="content">
<h1 translation-result="" id="animations">动画<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#animations"><i class="material-icons">link</i></a></h1><aio-toc class="embedded"></aio-toc><h1 translation-origin="off" id="animations">Animations<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#animations"><i class="material-icons">link</i></a></h1>

<p translation-result="">动画是现代 Web 应用设计中一个很重要的方面。好的用户界面要能在不同的状态之间更平滑的转场。如果需要，还可以用适当的动画来吸引注意力。
设计良好的动画不但会让 UI 更有趣，还会让它更容易使用。</p><p translation-origin="off">Motion is an important aspect in the design of modern web applications. Good
user interfaces transition smoothly between states with engaging animations
that call attention where it's needed. Well-designed animations can make a UI not only
more fun but also easier to use.</p>

<h2 translation-result="" id="overview">概览<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#overview"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="overview">Overview<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#overview"><i class="material-icons">link</i></a></h2>

<p translation-result="">Angular 的动画系统赋予了制作各种动画效果的能力，以构建出与原生 CSS 动画性能相同的动画。
你还获得了额外的让动画逻辑与其它应用代码紧紧集成在一起的能力，这让动画可以被更容易的触发与控制。</p><p translation-origin="off">Angular's animation system lets you build animations that run with the same kind of native
performance found in pure CSS animations. You can also tightly integrate your
animation logic with the rest of your application code, for ease of control.</p>

<div class="alert is-helpful">
<p translation-result="">Angular 动画是基于标准的<a href="https://w3c.github.io/web-animations/">Web 动画 API(Web Animations API)</a>构建的，它们在<a href="http://caniuse.com/#feat=web-animation">支持此 API 的浏览器中</a>会用原生方式工作。</p><p translation-origin="off">Angular animations are built on top of the standard <a href="https://w3c.github.io/web-animations/">Web Animations API</a>
and run natively on <a href="http://caniuse.com/#feat=web-animation">browsers that support it</a>.</p>

<p translation-result="">对于 Angular 6，如果浏览器没有提供对 Web 动画 API 的原生支持，Angular 就会自动改用 CSS 的关键帧动画作为后备实现。这意味，除非要在代码中使用 <a href="https://angular.cn/api/animations/AnimationBuilder">AnimationBuilder</a> ，否则不必使用相关的腻子脚本。
如果你要在代码中使用 AnimationBuilder ，就要从 Angular CLI 自动生成的 <code>polyfills.ts</code> 文件中反注释掉 <code>web-animations-js</code> 腻子脚本。</p><p translation-origin="off">As of Angular 6, If the Web Animations API is not supported natively by the browser, then Angular will use CSS
keyframes as a fallback instead (automatically). This means that the polyfill is no longer required unless any
code uses <a href="https://angular.cn/api/animations/AnimationBuilder">AnimationBuilder</a>. If your code does use AnimationBuilder, then
uncomment the <code>web-animations-js</code> polyfill from the <code>polyfills.ts</code> file generated by Angular CLI.</p>

</div>
<div class="l-sub-section">
<p translation-result="">本章中引用的这个例子可以到<live-example ng-version="6.0.0"><span><!----><!----><!----><!----><span class="ng-star-inserted"><a target="_blank" href="https://angular.cn/generated/live-examples/animations/stackblitz.html" title="在线例子">在线例子</a><!----><span class="ng-star-inserted"> / <a download="" title="下载范例" href="https://angular.cn/generated/zips/animations/animations.zip">下载范例</a></span></span></span></live-example>去体验。</p><p translation-origin="off">The examples in this page are available as a <live-example ng-version="6.0.0"><span><!----><!----><!----><!----><span class="ng-star-inserted"><a target="_blank" href="https://angular.cn/generated/live-examples/animations/stackblitz.html" title="在线例子">在线例子</a><!----><span class="ng-star-inserted"> / <a download="" title="下载范例" href="https://angular.cn/generated/zips/animations/animations.zip">下载范例</a></span></span></span></live-example>.</p>

</div>
<h2 translation-result="" id="setup">准备工作<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#setup"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="setup">Setup<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#setup"><i class="material-icons">link</i></a></h2>

<p translation-result="">在往应用中添加动画之前，你要首先在应用的根模块中引入一些与动画有关的模块和函数。</p><p translation-origin="off">Before you can add animations to your application, you need
to import a few animation-specific modules and functions to the root application module.</p>

<code-example path="animations/src/app/app.module.ts" region="animations-module" title="app.module.ts (animation module import excerpt)" linenums="false" ng-version="6.0.0"><div style="display: none">
import { <a href="https://angular.cn/api/platform-browser/BrowserModule" class="code-anchor">BrowserModule</a> } from '@angular/platform-browser';
import { <a href="https://angular.cn/api/platform-browser/animations/BrowserAnimationsModule" class="code-anchor">BrowserAnimationsModule</a> } from '@angular/platform-browser/animations';

@<a href="https://angular.cn/api/core/NgModule" class="code-anchor">NgModule</a>({
  imports: [ <a href="https://angular.cn/api/platform-browser/BrowserModule" class="code-anchor">BrowserModule</a>, <a href="https://angular.cn/api/platform-browser/animations/BrowserAnimationsModule" class="code-anchor">BrowserAnimationsModule</a> ],
  // ... more stuff ...
})
export class AppModule { }

</div><!----><header class="ng-star-inserted">app.module.ts (animation module import excerpt)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from app.module.ts (animation module import excerpt)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><a href="https://angular.cn/api/platform-browser/BrowserModule" class="code-anchor"><span class="typ">BrowserModule</span></a><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'@angular/platform-browser'</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><a href="https://angular.cn/api/platform-browser/animations/BrowserAnimationsModule" class="code-anchor"><span class="typ">BrowserAnimationsModule</span></a><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'@angular/platform-browser/animations'</span><span class="pun">;</span><span class="pln">

</span><span class="lit">@</span><a href="https://angular.cn/api/core/NgModule" class="code-anchor"><span class="lit">NgModule</span></a><span class="pun">({</span><span class="pln">
  imports</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln"> </span><a href="https://angular.cn/api/platform-browser/BrowserModule" class="code-anchor"><span class="typ">BrowserModule</span></a><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/platform-browser/animations/BrowserAnimationsModule" class="code-anchor"><span class="typ">BrowserAnimationsModule</span></a><span class="pln"> </span><span class="pun">],</span><span class="pln">
  </span><span class="com">// ... more stuff ...</span><span class="pln">
</span><span class="pun">})</span><span class="pln">
</span><span class="kwd">export</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">AppModule</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="pun">}</span></code>
    </pre></aio-code></code-example>
<h4 translation-result="" id="example-basics">基本例子<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#example-basics"><i class="material-icons">link</i></a></h4><h4 translation-origin="off" id="example-basics">Example basics<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#example-basics"><i class="material-icons">link</i></a></h4>

<p translation-result="">这里的动画例子用来给英雄列表添加动画。</p><p translation-origin="off">The animations examples in this guide animate a list of heroes.</p>

<p translation-result=""><code>Hero</code> 类有一个 <code>name</code> 属性、一个 <code><a href="https://angular.cn/api/animations/state" class="code-anchor">state</a></code> 属性（用于表明该英雄是否为激活状态）和一个 <code>toggleState()</code> 函数，用来在这两种状态之间切换。</p><p translation-origin="off">A <code>Hero</code> class has a <code>name</code> property, a <code><a href="https://angular.cn/api/animations/state" class="code-anchor">state</a></code> property that indicates if the hero is active or not,
and a <code>toggleState()</code> method to switch between the states.</p>

<code-example path="animations/src/app/hero.service.ts" region="hero" title="hero.service.ts (Hero class)" linenums="false" ng-version="6.0.0"><div style="display: none">
export class Hero {
  constructor(public name: string, public <a href="https://angular.cn/api/animations/state" class="code-anchor">state</a> = 'inactive') { }

  toggleState() {
    this.state = this.state === 'active' ? 'inactive' : 'active';
  }
}

</div><!----><header class="ng-star-inserted">hero.service.ts (Hero class)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from hero.service.ts (Hero class)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="kwd">export</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Hero</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  </span><span class="kwd">constructor</span><span class="pun">(</span><span class="kwd">public</span><span class="pln"> name</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">string</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">public</span><span class="pln"> </span><a href="https://angular.cn/api/animations/state" class="code-anchor"><span class="pln">state</span></a><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="str">'inactive'</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="pun">}</span><span class="pln">

  toggleState</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state </span><span class="pun">===</span><span class="pln"> </span><span class="str">'active'</span><span class="pln"> </span><span class="pun">?</span><span class="pln"> </span><span class="str">'inactive'</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">'active'</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code>
    </pre></aio-code></code-example>
<p translation-result="">在屏幕的顶部（<code>app.hero-team-builder.component.ts</code>）是一系列按钮，用于从列表中添加和删除英雄（通过 <code>HeroService</code>）。
这些按钮会引起列表的变化，同时可以看到列表中的所有范例组件。</p><p translation-origin="off">Across the top of the screen (<code>app.hero-team-builder.component.ts</code>)
are a series of buttons that add and remove heroes from the list (via the <code>HeroService</code>).
The buttons trigger changes to the list that all of the example components see at the same time.</p>

<a id="example-transitioning-between-states"></a>
<h2 translation-result="" id="transitioning-between-two-states">快速起步范例：在两个状态间转场<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#transitioning-between-two-states"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="transitioning-between-two-states">Transitioning between two states<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#transitioning-between-two-states"><i class="material-icons">link</i></a></h2>

<img src="./Angular - 动画_files/animation_basic_click.gif" alt="A simple transition animation" class="right" width="253" height="129">
<p translation-result="">你可以构建一个简单的动画，它会让一个元素用模型驱动的方式在两个状态之间转场。</p><p translation-origin="off">You can build a simple animation that transitions an element between two states
driven by a model attribute.</p>

<p translation-result="">动画会被定义在 <code>@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a></code> 元数据中。</p><p translation-origin="off">Animations can be defined inside <code>@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a></code> metadata. </p>

<code-example path="animations/src/app/hero-list-basic.component.ts" region="imports" title="hero-list-basic.component.ts" linenums="false" ng-version="6.0.0"><div style="display: none">
import {
  <a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a>,
  <a href="https://angular.cn/api/core/Input" class="code-anchor">Input</a>
} from '@angular/core';
import {
  <a href="https://angular.cn/api/animations/trigger" class="code-anchor">trigger</a>,
  <a href="https://angular.cn/api/animations/state" class="code-anchor">state</a>,
  <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>,
  <a href="https://angular.cn/api/animations/animate" class="code-anchor">animate</a>,
  <a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a>
} from '@angular/animations';

</div><!----><header class="ng-star-inserted">hero-list-basic.component.ts</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from hero-list-basic.component.ts">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  </span><a href="https://angular.cn/api/core/Component" class="code-anchor"><span class="typ">Component</span></a><span class="pun">,</span><span class="pln">
  </span><a href="https://angular.cn/api/core/Input" class="code-anchor"><span class="typ">Input</span></a><span class="pln">
</span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'@angular/core'</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  </span><a href="https://angular.cn/api/animations/trigger" class="code-anchor"><span class="pln">trigger</span></a><span class="pun">,</span><span class="pln">
  </span><a href="https://angular.cn/api/animations/state" class="code-anchor"><span class="pln">state</span></a><span class="pun">,</span><span class="pln">
  </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">,</span><span class="pln">
  </span><a href="https://angular.cn/api/animations/animate" class="code-anchor"><span class="pln">animate</span></a><span class="pun">,</span><span class="pln">
  </span><a href="https://angular.cn/api/animations/transition" class="code-anchor"><span class="pln">transition</span></a><span class="pln">
</span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'@angular/animations'</span><span class="pun">;</span></code>
    </pre></aio-code></code-example>
<p translation-result="">通过这些，可以在组件元数据中定义一个名叫 <code>heroState</code> 的<em>动画触发器</em>。它在两个状态 <code>active</code> 和 <code>inactive</code> 之间进行转场。
当英雄处于激活状态时，它会把该元素显示得稍微大一点、亮一点。</p><p translation-origin="off">With these, you can define an <em>animation trigger</em> called <code>heroState</code> in the component
metadata. It uses animations to transition between two states: <code>active</code> and <code>inactive</code>. When a
hero is active, the element appears in a slightly larger size and lighter color.</p>

<code-example path="animations/src/app/hero-list-basic.component.ts" region="animationdef" title="hero-list-basic.component.ts (@Component excerpt)" linenums="false" ng-version="6.0.0"><div style="display: none">
animations: [
  <a href="https://angular.cn/api/animations/trigger" class="code-anchor">trigger</a>('heroState', [
    <a href="https://angular.cn/api/animations/state" class="code-anchor">state</a>('inactive', <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({
      backgroundColor: '#eee',
      transform: 'scale(1)'
    })),
    <a href="https://angular.cn/api/animations/state" class="code-anchor">state</a>('active',   <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({
      backgroundColor: '#cfd8dc',
      transform: 'scale(1.1)'
    })),
    <a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a>('inactive =&gt; active', <a href="https://angular.cn/api/animations/animate" class="code-anchor">animate</a>('100ms ease-in')),
    <a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a>('active =&gt; inactive', <a href="https://angular.cn/api/animations/animate" class="code-anchor">animate</a>('100ms ease-out'))
  ])
]

</div><!----><header class="ng-star-inserted">hero-list-basic.component.ts (@Component excerpt)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from hero-list-basic.component.ts (@Component excerpt)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="pln">animations</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
  </span><a href="https://angular.cn/api/animations/trigger" class="code-anchor"><span class="pln">trigger</span></a><span class="pun">(</span><span class="str">'heroState'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
    </span><a href="https://angular.cn/api/animations/state" class="code-anchor"><span class="pln">state</span></a><span class="pun">(</span><span class="str">'inactive'</span><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">
      backgroundColor</span><span class="pun">:</span><span class="pln"> </span><span class="str">'#eee'</span><span class="pun">,</span><span class="pln">
      transform</span><span class="pun">:</span><span class="pln"> </span><span class="str">'scale(1)'</span><span class="pln">
    </span><span class="pun">})),</span><span class="pln">
    </span><a href="https://angular.cn/api/animations/state" class="code-anchor"><span class="pln">state</span></a><span class="pun">(</span><span class="str">'active'</span><span class="pun">,</span><span class="pln">   </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">
      backgroundColor</span><span class="pun">:</span><span class="pln"> </span><span class="str">'#cfd8dc'</span><span class="pun">,</span><span class="pln">
      transform</span><span class="pun">:</span><span class="pln"> </span><span class="str">'scale(1.1)'</span><span class="pln">
    </span><span class="pun">})),</span><span class="pln">
    </span><a href="https://angular.cn/api/animations/transition" class="code-anchor"><span class="pln">transition</span></a><span class="pun">(</span><span class="str">'inactive =&gt; active'</span><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/animations/animate" class="code-anchor"><span class="pln">animate</span></a><span class="pun">(</span><span class="str">'100ms ease-in'</span><span class="pun">)),</span><span class="pln">
    </span><a href="https://angular.cn/api/animations/transition" class="code-anchor"><span class="pln">transition</span></a><span class="pun">(</span><span class="str">'active =&gt; inactive'</span><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/animations/animate" class="code-anchor"><span class="pln">animate</span></a><span class="pun">(</span><span class="str">'100ms ease-out'</span><span class="pun">))</span><span class="pln">
  </span><span class="pun">])</span><span class="pln">
</span><span class="pun">]</span></code>
    </pre></aio-code></code-example>
<div class="alert is-helpful">
<p translation-result="">在这个例子中，你在元数据中用内联的方式定义了动画样式(<code>color</code> 和 <code>transform</code>)。在即将到来的一个 Angular 版本中，还将支持从组件的 CSS 样式表中提取样式。</p><p translation-origin="off">In this example, you are defining animation styles (color and transform) inline in the
animation metadata.</p>

</div>
<p translation-result="">现在，使用 <code>[@triggerName]</code> 语法来把刚刚定义的动画附加到组件模板中一个或多个元素上。</p><p translation-origin="off">Now, using the <code>[@triggerName]</code> syntax, attach the animation that you just defined to
one or more elements in the component's template.</p>

<code-example path="animations/src/app/hero-list-basic.component.ts" region="template" title="hero-list-basic.component.ts (excerpt)" linenums="false" ng-version="6.0.0"><div style="display: none">
template: `
  &lt;ul&gt;
    &lt;li *<a href="https://angular.cn/api/common/NgForOf" class="code-anchor">ngFor</a>="let hero of heroes"
        [@heroState]="hero.state"
        (click)="hero.toggleState()"&gt;
      {{hero.name}}
    &lt;/li&gt;
  &lt;/ul&gt;
`,

</div><!----><header class="ng-star-inserted">hero-list-basic.component.ts (excerpt)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from hero-list-basic.component.ts (excerpt)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="kwd">template</span><span class="pun">:</span><span class="pln"> </span><span class="str">`
  &lt;ul&gt;
    &lt;li *</span><a href="https://angular.cn/api/common/NgForOf" class="code-anchor"><span class="str">ngFor</span></a><span class="str">="let hero of heroes"
        [@heroState]="hero.state"
        (click)="hero.toggleState()"&gt;
      {{hero.name}}
    &lt;/li&gt;
  &lt;/ul&gt;
`</span><span class="pun">,</span></code>
    </pre></aio-code></code-example>
<p translation-result="">这里，动画触发器被添加到了由 <code><a href="https://angular.cn/api/common/NgForOf" class="code-anchor">ngFor</a></code> 重复出来的每一个元素上。每个重复出来的元素都有独立的动画效果。
然后把 <code>@triggerName</code> 属性(Attribute)的值设置成表达式 <code>hero.state</code>。这个值应该是 <code>inactive</code> 或 <code>active</code> 之一。</p><p translation-origin="off">Here, the animation trigger applies to every element repeated by an <code><a href="https://angular.cn/api/common/NgForOf" class="code-anchor">ngFor</a></code>. Each of
the repeated elements animates independently. The value of the
attribute is bound to the expression <code>hero.state</code> and is always either <code>active</code> or <code>inactive</code>.</p>

<p translation-result="">通过这些设置，一旦英雄对象的状态发生了变化，就会触发一个转场动画。下面是完整的组件实现：</p><p translation-origin="off">With this setup, an animated transition appears whenever a hero object changes state.
Here's the full component implementation:</p>

<code-example path="animations/src/app/hero-list-basic.component.ts" title="hero-list-basic.component.ts" ng-version="6.0.0"><div style="display: none">
import {
  <a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a>,
  <a href="https://angular.cn/api/core/Input" class="code-anchor">Input</a>
} from '@angular/core';
import {
  <a href="https://angular.cn/api/animations/trigger" class="code-anchor">trigger</a>,
  <a href="https://angular.cn/api/animations/state" class="code-anchor">state</a>,
  <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>,
  <a href="https://angular.cn/api/animations/animate" class="code-anchor">animate</a>,
  <a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a>
} from '@angular/animations';

import { Hero } from './hero.service';

@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a>({
  selector: 'app-hero-list-basic',
  template: `
    &lt;ul&gt;
      &lt;li *<a href="https://angular.cn/api/common/NgForOf" class="code-anchor">ngFor</a>="let hero of heroes"
          [@heroState]="hero.state"
          (click)="hero.toggleState()"&gt;
        {{hero.name}}
      &lt;/li&gt;
    &lt;/ul&gt;
  `,
  styleUrls: ['./hero-list.component.css'],
  animations: [
    <a href="https://angular.cn/api/animations/trigger" class="code-anchor">trigger</a>('heroState', [
      <a href="https://angular.cn/api/animations/state" class="code-anchor">state</a>('inactive', <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({
        backgroundColor: '#eee',
        transform: 'scale(1)'
      })),
      <a href="https://angular.cn/api/animations/state" class="code-anchor">state</a>('active',   <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({
        backgroundColor: '#cfd8dc',
        transform: 'scale(1.1)'
      })),
      <a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a>('inactive =&gt; active', <a href="https://angular.cn/api/animations/animate" class="code-anchor">animate</a>('100ms ease-in')),
      <a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a>('active =&gt; inactive', <a href="https://angular.cn/api/animations/animate" class="code-anchor">animate</a>('100ms ease-out'))
    ])
  ]
})
export class HeroListBasicComponent {
   @<a href="https://angular.cn/api/core/Input" class="code-anchor">Input</a>() heroes: Hero[];
}


</div><!----><header class="ng-star-inserted">hero-list-basic.component.ts</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from hero-list-basic.component.ts">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><ol class="linenums"><li class="L0"><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span></li><li class="L1"><span class="pln">  </span><a href="https://angular.cn/api/core/Component" class="code-anchor"><span class="typ">Component</span></a><span class="pun">,</span></li><li class="L2"><span class="pln">  </span><a href="https://angular.cn/api/core/Input" class="code-anchor"><span class="typ">Input</span></a></li><li class="L3"><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'@angular/core'</span><span class="pun">;</span></li><li class="L4"><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span></li><li class="L5"><span class="pln">  </span><a href="https://angular.cn/api/animations/trigger" class="code-anchor"><span class="pln">trigger</span></a><span class="pun">,</span></li><li class="L6"><span class="pln">  </span><a href="https://angular.cn/api/animations/state" class="code-anchor"><span class="pln">state</span></a><span class="pun">,</span></li><li class="L7"><span class="pln">  </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">,</span></li><li class="L8"><span class="pln">  </span><a href="https://angular.cn/api/animations/animate" class="code-anchor"><span class="pln">animate</span></a><span class="pun">,</span></li><li class="L9"><span class="pln">  </span><a href="https://angular.cn/api/animations/transition" class="code-anchor"><span class="pln">transition</span></a></li><li class="L0"><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'@angular/animations'</span><span class="pun">;</span></li><li class="L1"><span class="pln">&nbsp;</span></li><li class="L2"><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="typ">Hero</span><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'./hero.service'</span><span class="pun">;</span></li><li class="L3"><span class="pln">&nbsp;</span></li><li class="L4"><span class="lit">@</span><a href="https://angular.cn/api/core/Component" class="code-anchor"><span class="lit">Component</span></a><span class="pun">({</span></li><li class="L5"><span class="pln">  selector</span><span class="pun">:</span><span class="pln"> </span><span class="str">'app-hero-list-basic'</span><span class="pun">,</span></li><li class="L6"><span class="pln">  </span><span class="kwd">template</span><span class="pun">:</span><span class="pln"> </span><span class="str">`</span></li><li class="L7"><span class="str">    &lt;ul&gt;</span></li><li class="L8"><span class="str">      &lt;li *</span><a href="https://angular.cn/api/common/NgForOf" class="code-anchor"><span class="str">ngFor</span></a><span class="str">="let hero of heroes"</span></li><li class="L9"><span class="str">          [@heroState]="hero.state"</span></li><li class="L0"><span class="str">          (click)="hero.toggleState()"&gt;</span></li><li class="L1"><span class="str">        {{hero.name}}</span></li><li class="L2"><span class="str">      &lt;/li&gt;</span></li><li class="L3"><span class="str">    &lt;/ul&gt;</span></li><li class="L4"><span class="str">  `</span><span class="pun">,</span></li><li class="L5"><span class="pln">  styleUrls</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="str">'./hero-list.component.css'</span><span class="pun">],</span></li><li class="L6"><span class="pln">  animations</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span></li><li class="L7"><span class="pln">    </span><a href="https://angular.cn/api/animations/trigger" class="code-anchor"><span class="pln">trigger</span></a><span class="pun">(</span><span class="str">'heroState'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span></li><li class="L8"><span class="pln">      </span><a href="https://angular.cn/api/animations/state" class="code-anchor"><span class="pln">state</span></a><span class="pun">(</span><span class="str">'inactive'</span><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span></li><li class="L9"><span class="pln">        backgroundColor</span><span class="pun">:</span><span class="pln"> </span><span class="str">'#eee'</span><span class="pun">,</span></li><li class="L0"><span class="pln">        transform</span><span class="pun">:</span><span class="pln"> </span><span class="str">'scale(1)'</span></li><li class="L1"><span class="pln">      </span><span class="pun">})),</span></li><li class="L2"><span class="pln">      </span><a href="https://angular.cn/api/animations/state" class="code-anchor"><span class="pln">state</span></a><span class="pun">(</span><span class="str">'active'</span><span class="pun">,</span><span class="pln">   </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span></li><li class="L3"><span class="pln">        backgroundColor</span><span class="pun">:</span><span class="pln"> </span><span class="str">'#cfd8dc'</span><span class="pun">,</span></li><li class="L4"><span class="pln">        transform</span><span class="pun">:</span><span class="pln"> </span><span class="str">'scale(1.1)'</span></li><li class="L5"><span class="pln">      </span><span class="pun">})),</span></li><li class="L6"><span class="pln">      </span><a href="https://angular.cn/api/animations/transition" class="code-anchor"><span class="pln">transition</span></a><span class="pun">(</span><span class="str">'inactive =&gt; active'</span><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/animations/animate" class="code-anchor"><span class="pln">animate</span></a><span class="pun">(</span><span class="str">'100ms ease-in'</span><span class="pun">)),</span></li><li class="L7"><span class="pln">      </span><a href="https://angular.cn/api/animations/transition" class="code-anchor"><span class="pln">transition</span></a><span class="pun">(</span><span class="str">'active =&gt; inactive'</span><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/animations/animate" class="code-anchor"><span class="pln">animate</span></a><span class="pun">(</span><span class="str">'100ms ease-out'</span><span class="pun">))</span></li><li class="L8"><span class="pln">    </span><span class="pun">])</span></li><li class="L9"><span class="pln">  </span><span class="pun">]</span></li><li class="L0"><span class="pun">})</span></li><li class="L1"><span class="kwd">export</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">HeroListBasicComponent</span><span class="pln"> </span><span class="pun">{</span></li><li class="L2"><span class="pln">   </span><span class="lit">@</span><a href="https://angular.cn/api/core/Input" class="code-anchor"><span class="lit">Input</span></a><span class="pun">()</span><span class="pln"> heroes</span><span class="pun">:</span><span class="pln"> </span><span class="typ">Hero</span><span class="pun">[];</span></li><li class="L3"><span class="pun">}</span></li></ol></code>
    </pre></aio-code></code-example>
<h2 translation-result="" id="states-and-transitions">状态与转场<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#states-and-transitions"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="states-and-transitions">States and transitions<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#states-and-transitions"><i class="material-icons">link</i></a></h2>

<p translation-result="">Angular 动画是由<strong>状态</strong>和<strong>状态之间的转场效果</strong>所定义的。</p><p translation-origin="off">Angular animations are defined as logical <strong>states</strong> and <strong>transitions</strong>
between states.</p>

<p translation-result="">动画状态是一个由程序代码中定义的字符串值。在上面的例子中，<code>'active'</code> 和 <code>'inactive'</code> 是基于英雄对象的逻辑状态的。
状态的来源可以是像本例中这样简单的对象属性，也可以是由方法计算出来的值。重点是，你要能从组件模板中读取它。</p><p translation-origin="off">An animation state is a string value that you define in your application code. In the example
above, the states <code>'active'</code> and <code>'inactive'</code> are based on the logical state of
hero objects. The source of the state can be a simple object attribute, as it was in this case,
or it can be a value computed in a method. The important thing is that you can read it into the
component's template.</p>

<p translation-result="">你可以为每个动画状态定义了<em>一组样式</em>：</p><p translation-origin="off">You can define <em>styles</em> for each animation state:</p>

<code-example path="animations/src/app/hero-list-basic.component.ts" region="states" title="src/app/hero-list-basic.component.ts" linenums="false" ng-version="6.0.0"><div style="display: none">
<a href="https://angular.cn/api/animations/state" class="code-anchor">state</a>('inactive', <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({
  backgroundColor: '#eee',
  transform: 'scale(1)'
})),
<a href="https://angular.cn/api/animations/state" class="code-anchor">state</a>('active',   <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({
  backgroundColor: '#cfd8dc',
  transform: 'scale(1.1)'
})),

</div><!----><header class="ng-star-inserted">src/app/hero-list-basic.component.ts</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/hero-list-basic.component.ts">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><a href="https://angular.cn/api/animations/state" class="code-anchor"><span class="pln">state</span></a><span class="pun">(</span><span class="str">'inactive'</span><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">
  backgroundColor</span><span class="pun">:</span><span class="pln"> </span><span class="str">'#eee'</span><span class="pun">,</span><span class="pln">
  transform</span><span class="pun">:</span><span class="pln"> </span><span class="str">'scale(1)'</span><span class="pln">
</span><span class="pun">})),</span><span class="pln">
</span><a href="https://angular.cn/api/animations/state" class="code-anchor"><span class="pln">state</span></a><span class="pun">(</span><span class="str">'active'</span><span class="pun">,</span><span class="pln">   </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">
  backgroundColor</span><span class="pun">:</span><span class="pln"> </span><span class="str">'#cfd8dc'</span><span class="pun">,</span><span class="pln">
  transform</span><span class="pun">:</span><span class="pln"> </span><span class="str">'scale(1.1)'</span><span class="pln">
</span><span class="pun">})),</span></code>
    </pre></aio-code></code-example>
<p translation-result="">这些 <code><a href="https://angular.cn/api/animations/state" class="code-anchor">state</a></code> 具体定义了每个状态的<em>最终样式</em>。一旦元素转场到那个状态，该样式就会被应用到此元素上，<em>当它留在此状态时</em>，这些样式也会一直保持着。
从这个意义上讲，这里其实并不只是在定义动画，而是在定义该元素在不同状态时应该具有的样式。</p><p translation-origin="off">These <code><a href="https://angular.cn/api/animations/state" class="code-anchor">state</a></code> definitions specify the <em>end styles</em> of each state.
They are applied to the element once it has transitioned to that state, and stay
<em>as long as it remains in that state</em>. In effect, you're defining what styles the element has in different states.</p>

<p translation-result="">定义完状态，就能定义在状态之间的各种<em>转场</em>了。每个转场都会控制一条在一组样式和下一组样式之间切换的时间线：</p><p translation-origin="off">After you define states, you can define <em>transitions</em> between the states. Each transition
controls the timing of switching between one set of styles and the next:</p>

<code-example path="animations/src/app/hero-list-basic.component.ts" region="transitions" title="src/app/hero-list-basic.component.ts" linenums="false" ng-version="6.0.0"><div style="display: none">
<a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a>('inactive =&gt; active', <a href="https://angular.cn/api/animations/animate" class="code-anchor">animate</a>('100ms ease-in')),
<a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a>('active =&gt; inactive', <a href="https://angular.cn/api/animations/animate" class="code-anchor">animate</a>('100ms ease-out'))

</div><!----><header class="ng-star-inserted">src/app/hero-list-basic.component.ts</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/hero-list-basic.component.ts">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><a href="https://angular.cn/api/animations/transition" class="code-anchor"><span class="pln">transition</span></a><span class="pun">(</span><span class="str">'inactive =&gt; active'</span><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/animations/animate" class="code-anchor"><span class="pln">animate</span></a><span class="pun">(</span><span class="str">'100ms ease-in'</span><span class="pun">)),</span><span class="pln">
</span><a href="https://angular.cn/api/animations/transition" class="code-anchor"><span class="pln">transition</span></a><span class="pun">(</span><span class="str">'active =&gt; inactive'</span><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/animations/animate" class="code-anchor"><span class="pln">animate</span></a><span class="pun">(</span><span class="str">'100ms ease-out'</span><span class="pun">))</span></code>
    </pre></aio-code></code-example>
<figure>
  <img src="./Angular - 动画_files/ng_animate_transitions_inactive_active.png" alt="In Angular animations you define states and transitions between states" width="400">
</figure>
<p translation-result="">如果多个转场都有同样的时间线配置，就可以把它们合并进同一个 <code><a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a></code> 定义中：</p><p translation-origin="off">If several transitions have the same timing configuration, you can combine
them into the same <code><a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a></code> definition:</p>

<code-example path="animations/src/app/hero-list-combined-transitions.component.ts" region="transitions" title="src/app/hero-list-combined-transitions.component.ts" linenums="false" ng-version="6.0.0"><div style="display: none">
<a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a>('inactive =&gt; active, active =&gt; inactive',
 <a href="https://angular.cn/api/animations/animate" class="code-anchor">animate</a>('100ms ease-out'))

</div><!----><header class="ng-star-inserted">src/app/hero-list-combined-transitions.component.ts</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/hero-list-combined-transitions.component.ts">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><a href="https://angular.cn/api/animations/transition" class="code-anchor"><span class="pln">transition</span></a><span class="pun">(</span><span class="str">'inactive =&gt; active, active =&gt; inactive'</span><span class="pun">,</span><span class="pln">
 </span><a href="https://angular.cn/api/animations/animate" class="code-anchor"><span class="pln">animate</span></a><span class="pun">(</span><span class="str">'100ms ease-out'</span><span class="pun">))</span></code>
    </pre></aio-code></code-example>
<p translation-result="">如果要对同一个转场的两个方向都使用相同的时间线（就像前面的例子中那样），就可以使用 <code>&lt;=&gt;</code> 这种简写语法：</p><p translation-origin="off">When both directions of a transition have the same timing, as in the previous
example, you can use the shorthand syntax <code>&lt;=&gt;</code>:</p>

<code-example path="animations/src/app/hero-list-twoway.component.ts" region="transitions" title="src/app/hero-list-twoway.component.ts" linenums="false" ng-version="6.0.0"><div style="display: none">
<a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a>('inactive &lt;=&gt; active', <a href="https://angular.cn/api/animations/animate" class="code-anchor">animate</a>('100ms ease-out'))

</div><!----><header class="ng-star-inserted">src/app/hero-list-twoway.component.ts</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/hero-list-twoway.component.ts">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><a href="https://angular.cn/api/animations/transition" class="code-anchor"><span class="pln">transition</span></a><span class="pun">(</span><span class="str">'inactive &lt;=&gt; active'</span><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/animations/animate" class="code-anchor"><span class="pln">animate</span></a><span class="pun">(</span><span class="str">'100ms ease-out'</span><span class="pun">))</span></code>
    </pre></aio-code></code-example>
<p translation-result="">有时希望一些样式只在动画期间生效，但在结束后并不保留它们。这时可以把这些样式内联在 <code><a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a></code> 中进行定义。
在这个例子中，该元素会立刻获得一组样式，然后动态转场到下一个状态。当转场结束时，这些样式并不会被保留，因为它们并没有被定义在 <code><a href="https://angular.cn/api/animations/state" class="code-anchor">state</a></code> 中。</p><p translation-origin="off">You can also apply a style during an animation but not keep it around
after the animation finishes. You can define such styles inline, in the <code><a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a></code>. In this example,
the element receives one set of styles immediately and is then animated to the next.
When the transition finishes, none of these styles are kept because they're not
defined in a <code><a href="https://angular.cn/api/animations/state" class="code-anchor">state</a></code>.</p>

<code-example path="animations/src/app/hero-list-inline-styles.component.ts" region="transitions" title="src/app/hero-list-inline-styles.component.ts" linenums="false" ng-version="6.0.0"><div style="display: none">
<a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a>('inactive =&gt; active', [
  <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({
    backgroundColor: '#cfd8dc',
    transform: 'scale(1.3)'
  }),
  <a href="https://angular.cn/api/animations/animate" class="code-anchor">animate</a>('80ms ease-in', <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({
    backgroundColor: '#eee',
    transform: 'scale(1)'
  }))
]),

</div><!----><header class="ng-star-inserted">src/app/hero-list-inline-styles.component.ts</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/hero-list-inline-styles.component.ts">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><a href="https://angular.cn/api/animations/transition" class="code-anchor"><span class="pln">transition</span></a><span class="pun">(</span><span class="str">'inactive =&gt; active'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
  </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">
    backgroundColor</span><span class="pun">:</span><span class="pln"> </span><span class="str">'#cfd8dc'</span><span class="pun">,</span><span class="pln">
    transform</span><span class="pun">:</span><span class="pln"> </span><span class="str">'scale(1.3)'</span><span class="pln">
  </span><span class="pun">}),</span><span class="pln">
  </span><a href="https://angular.cn/api/animations/animate" class="code-anchor"><span class="pln">animate</span></a><span class="pun">(</span><span class="str">'80ms ease-in'</span><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">
    backgroundColor</span><span class="pun">:</span><span class="pln"> </span><span class="str">'#eee'</span><span class="pun">,</span><span class="pln">
    transform</span><span class="pun">:</span><span class="pln"> </span><span class="str">'scale(1)'</span><span class="pln">
  </span><span class="pun">}))</span><span class="pln">
</span><span class="pun">]),</span></code>
    </pre></aio-code></code-example>
<h3 translation-result="" id="the-wildcard-state-codecode"><code>*</code>(通配符)状态<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#the-wildcard-state-codecode"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="the-wildcard-state-">The wildcard state <code>*</code><a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#the-wildcard-state-"><i class="material-icons">link</i></a></h3>

<p translation-result=""><code>*</code>(通配符)状态匹配<em>任何</em>动画状态。当定义那些不需要管当前处于什么状态的样式及转场时，这很有用。比如：</p><p translation-origin="off">The <code>*</code> ("wildcard") state matches <em>any</em> animation state. This is useful for defining styles and
transitions that apply regardless of which state the animation is in. For example:</p>

<ul>
<li>
<p translation-result=""> 当该元素的状态从 <code>active</code> 变成任何其它状态时，<code>active =&gt; *</code> 转场都会生效。</p><p translation-origin="off">The <code>active =&gt; *</code> transition applies when the element's state changes from <code>active</code> to anything else.</p>

</li>
<li>
<p translation-result=""> 当在<em>任意</em>两个状态之间切换时，<code>* =&gt; *</code> 转场都会生效。</p><p translation-origin="off">The <code>* =&gt; *</code> transition applies when <em>any</em> change between two states takes place.</p>

</li>
</ul>
<figure>
  <img src="./Angular - 动画_files/ng_animate_transitions_inactive_active_wildcards.png" alt="The wildcard state can be used to match many different transitions at once" width="400">
</figure>
<h3 translation-result="" id="the-codevoidcode-state"><code>void</code> 状态<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#the-codevoidcode-state"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="the-void-state">The <code>void</code> state<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#the-void-state"><i class="material-icons">link</i></a></h3>

<p translation-result="">有一种叫做 <code>void</code> 的特殊状态，它可以应用在任何动画中。它表示元素<em>没有</em>被附加到视图。这种情况可能是由于它尚未被添加进来或者已经被移除了。
<code>void</code> 状态在定义“进场”和“离场”的动画时会非常有用。</p><p translation-origin="off">The special state called <code>void</code> can apply to any animation. It applies
when the element is <em>not</em> attached to a view, perhaps because it has not yet been
added or because it has been removed. The <code>void</code> state is useful for defining enter and
leave animations.</p>

<p translation-result="">比如当一个元素离开视图时，<code>* =&gt; void</code> 转场就会生效，而不管它在离场以前是什么状态。</p><p translation-origin="off">For example the <code>* =&gt; void</code> transition applies when the element leaves the view,
regardless of what state it was in before it left.</p>

<figure>
  <img src="./Angular - 动画_files/ng_animate_transitions_void_in.png" alt="The void state can be used for enter and leave transitions" width="400">
</figure>
<p translation-result=""><code>*</code> 通配符状态也能匹配 <code>void</code>。</p><p translation-origin="off">The wildcard state <code>*</code> also matches <code>void</code>.</p>

<h2 translation-result="" id="example-entering-and-leaving">例子：进场与离场<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#example-entering-and-leaving"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="example-entering-and-leaving">Example: Entering and leaving<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#example-entering-and-leaving"><i class="material-icons">link</i></a></h2>

<img src="./Angular - 动画_files/animation_enter_leave.gif" alt="Enter and leave animations" class="right" width="250">
<p translation-result="">使用 <code>void</code> 和 <code>*</code> 状态，可以定义元素进场与离场时的转场动画：</p><p translation-origin="off">Using the <code>void</code> and <code>*</code> states you can define transitions that animate the
entering and leaving of elements:</p>

<ul>
<li>
<p translation-result=""> 进场：<code>void =&gt; *</code></p><p translation-origin="off">Enter: <code>void =&gt; *</code></p>

</li>
<li>
<p translation-result=""> 离场：<code>* =&gt; void</code></p><p translation-origin="off">Leave: <code>* =&gt; void</code></p>

</li>
</ul>
<p translation-result="">例如，在下面的 <code>animations</code> 数组中，这两个转场语句使用 <code>void =&gt; *</code> 和 <code>* =&gt; void</code> 语法来让该元素以动画形式进入和离开当前视图。</p><p translation-origin="off">For example, in the <code>animations</code> array below there are two transitions that use
the <code>void =&gt; *</code> and <code>* =&gt; void</code> syntax to animate the element in and out of the view.</p>

<code-example path="animations/src/app/hero-list-enter-leave.component.ts" region="animationdef" title="hero-list-enter-leave.component.ts (excerpt)" linenums="false" ng-version="6.0.0"><div style="display: none">
animations: [
  <a href="https://angular.cn/api/animations/trigger" class="code-anchor">trigger</a>('flyInOut', [
    <a href="https://angular.cn/api/animations/state" class="code-anchor">state</a>('in', <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({transform: 'translateX(0)'})),
    <a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a>('void =&gt; *', [
      <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({transform: 'translateX(-100%)'}),
      <a href="https://angular.cn/api/animations/animate" class="code-anchor">animate</a>(100)
    ]),
    <a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a>('* =&gt; void', [
      <a href="https://angular.cn/api/animations/animate" class="code-anchor">animate</a>(100, <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({transform: 'translateX(100%)'}))
    ])
  ])
]

</div><!----><header class="ng-star-inserted">hero-list-enter-leave.component.ts (excerpt)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from hero-list-enter-leave.component.ts (excerpt)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="pln">animations</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
  </span><a href="https://angular.cn/api/animations/trigger" class="code-anchor"><span class="pln">trigger</span></a><span class="pun">(</span><span class="str">'flyInOut'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
    </span><a href="https://angular.cn/api/animations/state" class="code-anchor"><span class="pln">state</span></a><span class="pun">(</span><span class="str">'in'</span><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">transform</span><span class="pun">:</span><span class="pln"> </span><span class="str">'translateX(0)'</span><span class="pun">})),</span><span class="pln">
    </span><a href="https://angular.cn/api/animations/transition" class="code-anchor"><span class="pln">transition</span></a><span class="pun">(</span><span class="str">'void =&gt; *'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
      </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">transform</span><span class="pun">:</span><span class="pln"> </span><span class="str">'translateX(-100%)'</span><span class="pun">}),</span><span class="pln">
      </span><a href="https://angular.cn/api/animations/animate" class="code-anchor"><span class="pln">animate</span></a><span class="pun">(</span><span class="lit">100</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">]),</span><span class="pln">
    </span><a href="https://angular.cn/api/animations/transition" class="code-anchor"><span class="pln">transition</span></a><span class="pun">(</span><span class="str">'* =&gt; void'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
      </span><a href="https://angular.cn/api/animations/animate" class="code-anchor"><span class="pln">animate</span></a><span class="pun">(</span><span class="lit">100</span><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">transform</span><span class="pun">:</span><span class="pln"> </span><span class="str">'translateX(100%)'</span><span class="pun">}))</span><span class="pln">
    </span><span class="pun">])</span><span class="pln">
  </span><span class="pun">])</span><span class="pln">
</span><span class="pun">]</span></code>
    </pre></aio-code></code-example>
<p translation-result="">注意，在这个例子中，这些样式在转场定义中被直接应用到了 <code>void</code> 状态，但并没有一个单独的 <code><a href="https://angular.cn/api/animations/state" class="code-anchor">state</a>(void)</code> 定义。
这么做是因为希望在进场与离场时使用不一样的转换效果：元素从左侧进场，从右侧离开。</p><p translation-origin="off">Note that in this case the styles are applied to the void state directly in the
transition definitions, and not in a separate <code><a href="https://angular.cn/api/animations/state" class="code-anchor">state</a>(void)</code> definition. Thus, the transforms
are different on enter and leave: the element enters from the left
and leaves to the right.</p>

<div class="l-sub-section">
<p translation-result="">这两个常见的动画有自己的别名：</p><p translation-origin="off">These two common animations have their own aliases:</p>

<code-example language="typescript" ng-version="6.0.0"><div style="display: none">
  <a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a>(':enter', [ ... ]); // void =&gt; *
  <a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a>(':leave', [ ... ]); // * =&gt; void
</div><!----><aio-code><pre class="prettyprint lang-typescript">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><a href="https://angular.cn/api/animations/transition" class="code-anchor"><span class="pln">transition</span></a><span class="pun">(</span><span class="str">':enter'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln"> </span><span class="pun">...</span><span class="pln"> </span><span class="pun">]);</span><span class="pln"> </span><span class="com">// void =&gt; *</span><span class="pln">
</span><a href="https://angular.cn/api/animations/transition" class="code-anchor"><span class="pln">transition</span></a><span class="pun">(</span><span class="str">':leave'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln"> </span><span class="pun">...</span><span class="pln"> </span><span class="pun">]);</span><span class="pln"> </span><span class="com">// * =&gt; void</span></code>
    </pre></aio-code></code-example>
</div>
<h2 translation-result="" id="example-entering-and-leaving-from-different-states">范例：从不同的状态下进场和离场<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#example-entering-and-leaving-from-different-states"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="example-entering-and-leaving-from-different-states">Example: Entering and leaving from different states<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#example-entering-and-leaving-from-different-states"><i class="material-icons">link</i></a></h2>

<img src="./Angular - 动画_files/animation_enter_leave_states.gif" alt="Enter and leave animations combined with state animations" class="right" width="200">
<p translation-result="">通过把英雄的状态用作动画的状态，还能把该动画跟以前的转场动画组合成一个复合动画。这让你能根据该英雄的当前状态为其配置不同的进场与离场动画：</p><p translation-origin="off">You can also combine this animation with the earlier state transition animation by
using the hero state as the animation state. This lets you configure
different transitions for entering and leaving based on what the state of the hero
is:</p>

<ul>
<li>
<p translation-result=""> 非激活英雄进场：<code>void =&gt; inactive</code></p><p translation-origin="off">Inactive hero enter: <code>void =&gt; inactive</code></p>

</li>
<li>
<p translation-result=""> 激活英雄进场：<code>void =&gt; active</code></p><p translation-origin="off">Active hero enter: <code>void =&gt; active</code></p>

</li>
<li>
<p translation-result=""> 非激活英雄离场：<code>inactive =&gt; void</code></p><p translation-origin="off">Inactive hero leave: <code>inactive =&gt; void</code></p>

</li>
<li>
<p translation-result=""> 激活英雄离场：<code>active =&gt; void</code></p><p translation-origin="off">Active hero leave: <code>active =&gt; void</code></p>

</li>
</ul>
<p translation-result="">现在就对每一种转场都有了细粒度的控制：</p><p translation-origin="off">This gives you fine-grained control over each transition:</p>

<figure>
  <img src="./Angular - 动画_files/ng_animate_transitions_inactive_active_void.png" alt="This example transitions between active, inactive, and void states" width="400">
</figure>
<code-example path="animations/src/app/hero-list-enter-leave-states.component.ts" region="animationdef" title="hero-list-enter-leave.component.ts (excerpt)" linenums="false" ng-version="6.0.0"><div style="display: none">
animations: [
  <a href="https://angular.cn/api/animations/trigger" class="code-anchor">trigger</a>('heroState', [
    <a href="https://angular.cn/api/animations/state" class="code-anchor">state</a>('inactive', <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({transform: 'translateX(0) scale(1)'})),
    <a href="https://angular.cn/api/animations/state" class="code-anchor">state</a>('active',   <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({transform: 'translateX(0) scale(1.1)'})),
    <a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a>('inactive =&gt; active', <a href="https://angular.cn/api/animations/animate" class="code-anchor">animate</a>('100ms ease-in')),
    <a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a>('active =&gt; inactive', <a href="https://angular.cn/api/animations/animate" class="code-anchor">animate</a>('100ms ease-out')),
    <a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a>('void =&gt; inactive', [
      <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({transform: 'translateX(-100%) scale(1)'}),
      <a href="https://angular.cn/api/animations/animate" class="code-anchor">animate</a>(100)
    ]),
    <a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a>('inactive =&gt; void', [
      <a href="https://angular.cn/api/animations/animate" class="code-anchor">animate</a>(100, <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({transform: 'translateX(100%) scale(1)'}))
    ]),
    <a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a>('void =&gt; active', [
      <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({transform: 'translateX(0) scale(0)'}),
      <a href="https://angular.cn/api/animations/animate" class="code-anchor">animate</a>(200)
    ]),
    <a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a>('active =&gt; void', [
      <a href="https://angular.cn/api/animations/animate" class="code-anchor">animate</a>(200, <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({transform: 'translateX(0) scale(0)'}))
    ])
  ])
]

</div><!----><header class="ng-star-inserted">hero-list-enter-leave.component.ts (excerpt)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from hero-list-enter-leave.component.ts (excerpt)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="pln">animations</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
  </span><a href="https://angular.cn/api/animations/trigger" class="code-anchor"><span class="pln">trigger</span></a><span class="pun">(</span><span class="str">'heroState'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
    </span><a href="https://angular.cn/api/animations/state" class="code-anchor"><span class="pln">state</span></a><span class="pun">(</span><span class="str">'inactive'</span><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">transform</span><span class="pun">:</span><span class="pln"> </span><span class="str">'translateX(0) scale(1)'</span><span class="pun">})),</span><span class="pln">
    </span><a href="https://angular.cn/api/animations/state" class="code-anchor"><span class="pln">state</span></a><span class="pun">(</span><span class="str">'active'</span><span class="pun">,</span><span class="pln">   </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">transform</span><span class="pun">:</span><span class="pln"> </span><span class="str">'translateX(0) scale(1.1)'</span><span class="pun">})),</span><span class="pln">
    </span><a href="https://angular.cn/api/animations/transition" class="code-anchor"><span class="pln">transition</span></a><span class="pun">(</span><span class="str">'inactive =&gt; active'</span><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/animations/animate" class="code-anchor"><span class="pln">animate</span></a><span class="pun">(</span><span class="str">'100ms ease-in'</span><span class="pun">)),</span><span class="pln">
    </span><a href="https://angular.cn/api/animations/transition" class="code-anchor"><span class="pln">transition</span></a><span class="pun">(</span><span class="str">'active =&gt; inactive'</span><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/animations/animate" class="code-anchor"><span class="pln">animate</span></a><span class="pun">(</span><span class="str">'100ms ease-out'</span><span class="pun">)),</span><span class="pln">
    </span><a href="https://angular.cn/api/animations/transition" class="code-anchor"><span class="pln">transition</span></a><span class="pun">(</span><span class="str">'void =&gt; inactive'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
      </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">transform</span><span class="pun">:</span><span class="pln"> </span><span class="str">'translateX(-100%) scale(1)'</span><span class="pun">}),</span><span class="pln">
      </span><a href="https://angular.cn/api/animations/animate" class="code-anchor"><span class="pln">animate</span></a><span class="pun">(</span><span class="lit">100</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">]),</span><span class="pln">
    </span><a href="https://angular.cn/api/animations/transition" class="code-anchor"><span class="pln">transition</span></a><span class="pun">(</span><span class="str">'inactive =&gt; void'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
      </span><a href="https://angular.cn/api/animations/animate" class="code-anchor"><span class="pln">animate</span></a><span class="pun">(</span><span class="lit">100</span><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">transform</span><span class="pun">:</span><span class="pln"> </span><span class="str">'translateX(100%) scale(1)'</span><span class="pun">}))</span><span class="pln">
    </span><span class="pun">]),</span><span class="pln">
    </span><a href="https://angular.cn/api/animations/transition" class="code-anchor"><span class="pln">transition</span></a><span class="pun">(</span><span class="str">'void =&gt; active'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
      </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">transform</span><span class="pun">:</span><span class="pln"> </span><span class="str">'translateX(0) scale(0)'</span><span class="pun">}),</span><span class="pln">
      </span><a href="https://angular.cn/api/animations/animate" class="code-anchor"><span class="pln">animate</span></a><span class="pun">(</span><span class="lit">200</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">]),</span><span class="pln">
    </span><a href="https://angular.cn/api/animations/transition" class="code-anchor"><span class="pln">transition</span></a><span class="pun">(</span><span class="str">'active =&gt; void'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
      </span><a href="https://angular.cn/api/animations/animate" class="code-anchor"><span class="pln">animate</span></a><span class="pun">(</span><span class="lit">200</span><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">transform</span><span class="pun">:</span><span class="pln"> </span><span class="str">'translateX(0) scale(0)'</span><span class="pun">}))</span><span class="pln">
    </span><span class="pun">])</span><span class="pln">
  </span><span class="pun">])</span><span class="pln">
</span><span class="pun">]</span></code>
    </pre></aio-code></code-example>
<h2 translation-result="" id="animatable-properties-and-units">可动的(Animatable)属性与单位<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#animatable-properties-and-units"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="animatable-properties-and-units">Animatable properties and units<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#animatable-properties-and-units"><i class="material-icons">link</i></a></h2>

<p translation-result="">由于 Angular 的动画支持是基于 Web Animations 标准的，所以也能支持浏览器认为可以<em>参与动画</em>的任何属性。这些属性包括位置(position)、大小(size)、变换(transform)、颜色(color)、边框(border)等很多属性。W3C 维护着
<a href="https://www.w3.org/TR/css3-transitions/#animatable-properties">一个“可动”属性列表</a>。</p><p translation-origin="off">Since Angular's animation support builds on top of Web Animations, you can animate any property
that the browser considers <em>animatable</em>. This includes positions, sizes, transforms, colors,
borders, and many others. The W3C maintains
<a href="https://www.w3.org/TR/css3-transitions/#animatable-properties">a list of animatable properties</a>
on its <a href="https://www.w3.org/TR/css3-transitions">CSS Transitions page</a>.</p>

<p translation-result="">尺寸类属性(如位置、大小、边框等)包括一个数字值和一个用来定义长度单位的后缀：</p><p translation-origin="off">For positional properties that have a numeric value, you can define a unit by providing
the value as a string with the appropriate suffix:</p>

<ul>
<li>
<p translation-origin="off"><code>'50px'</code></p>
</li>
<li>
<p translation-origin="off"><code>'3em'</code></p>
</li>
<li>
<p translation-origin="off"><code>'100%'</code></p>
</li>
</ul>
<p translation-result="">对大多数尺寸类属性而言，还能只定义一个数字，那就表示它使用的是像素(px)数：</p><p translation-origin="off">If you don't provide a unit when specifying dimension, Angular assumes the default of <code>px</code>:</p>

<ul>
<li>
<p translation-result=""> <code>50</code> 相当于 <code>'50px'</code></p><p translation-origin="off"><code>50</code> is the same as saying <code>'50px'</code></p>

</li>
</ul>
<h2 translation-result="" id="automatic-property-calculation">自动属性值计算<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#automatic-property-calculation"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="automatic-property-calculation">Automatic property calculation<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#automatic-property-calculation"><i class="material-icons">link</i></a></h2>

<img src="./Angular - 动画_files/animation_auto.gif" alt="Animation with automated height calculation" class="right" width="220">
<p translation-result="">有时候，你在开始运行之前都无法知道某个样式属性的值。比如，元素的宽度和高度往往依赖于它们的内容和屏幕的尺寸。处理这些属性对 CSS 动画而言通常是相当棘手的。</p><p translation-origin="off">Sometimes you don't know the value of a dimensional style property until runtime.
For example, elements often have widths and heights that
depend on their content and the screen size. These properties are often tricky
to animate with CSS.</p>

<p translation-result="">如果用 Angular 动画，就可以用一个特殊的 <code>*</code> 属性值来处理这种情况。该属性的值将会在运行期被计算出来，然后插入到这个动画中。</p><p translation-origin="off">In these cases, you can use a special <code>*</code> property value so that the value of the
property is computed at runtime and then plugged into the animation.</p>

<p translation-result="">这个例子中的“离场”动画会取得该元素在离场前的高度，并且把它从这个高度用动画转场到 0 高度：</p><p translation-origin="off">In this example, the leave animation takes whatever height the element has before it
leaves and animates from that height to zero:</p>

<code-example path="animations/src/app/hero-list-auto.component.ts" region="animationdef" title="src/app/hero-list-auto.component.ts" linenums="false" ng-version="6.0.0"><div style="display: none">
animations: [
  <a href="https://angular.cn/api/animations/trigger" class="code-anchor">trigger</a>('shrinkOut', [
    <a href="https://angular.cn/api/animations/state" class="code-anchor">state</a>('in', <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({height: '*'})),
    <a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a>('* =&gt; void', [
      <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({height: '*'}),
      <a href="https://angular.cn/api/animations/animate" class="code-anchor">animate</a>(250, <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({height: 0}))
    ])
  ])
]

</div><!----><header class="ng-star-inserted">src/app/hero-list-auto.component.ts</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/hero-list-auto.component.ts">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="pln">animations</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
  </span><a href="https://angular.cn/api/animations/trigger" class="code-anchor"><span class="pln">trigger</span></a><span class="pun">(</span><span class="str">'shrinkOut'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
    </span><a href="https://angular.cn/api/animations/state" class="code-anchor"><span class="pln">state</span></a><span class="pun">(</span><span class="str">'in'</span><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">height</span><span class="pun">:</span><span class="pln"> </span><span class="str">'*'</span><span class="pun">})),</span><span class="pln">
    </span><a href="https://angular.cn/api/animations/transition" class="code-anchor"><span class="pln">transition</span></a><span class="pun">(</span><span class="str">'* =&gt; void'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
      </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">height</span><span class="pun">:</span><span class="pln"> </span><span class="str">'*'</span><span class="pun">}),</span><span class="pln">
      </span><a href="https://angular.cn/api/animations/animate" class="code-anchor"><span class="pln">animate</span></a><span class="pun">(</span><span class="lit">250</span><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">height</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">}))</span><span class="pln">
    </span><span class="pun">])</span><span class="pln">
  </span><span class="pun">])</span><span class="pln">
</span><span class="pun">]</span></code>
    </pre></aio-code></code-example>
<h2 translation-result="" id="animation-timing">动画时间线<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#animation-timing"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="animation-timing">Animation timing<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#animation-timing"><i class="material-icons">link</i></a></h2>

<p translation-result="">对每一个动画转场效果，有三种时间线属性可以调整：持续时间(duration)、延迟(delay)和缓动(easing)函数。它们被合并到了一个单独的<em>转场时间线字符串</em>。</p><p translation-origin="off">There are three timing properties you can tune for every animated transition:
the duration, the delay, and the easing function. They are all combined into
a single transition <em>timing string</em>.</p>

<h3 translation-result="" id="duration">持续时间<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#duration"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="duration">Duration<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#duration"><i class="material-icons">link</i></a></h3>

<p translation-result="">持续时间控制动画从开始到结束要花多长时间。可以用三种方式定义持续时间：</p><p translation-origin="off">The duration controls how long the animation takes to run from start to finish.
You can define a duration in three ways:</p>

<ul>
<li>
<p translation-result=""> 作为一个普通数字，以毫秒为单位，如：<code>100</code></p><p translation-origin="off">As a plain number, in milliseconds: <code>100</code></p>

</li>
<li>
<p translation-result=""> 作为一个字符串，以毫秒为单位，如：<code>'100ms'</code></p><p translation-origin="off">In a string, as milliseconds: <code>'100ms'</code></p>

</li>
<li>
<p translation-result=""> 作为一个字符串，以秒为单位，如：<code>'0.1s'</code></p><p translation-origin="off">In a string, as seconds: <code>'0.1s'</code></p>

</li>
</ul>
<h3 translation-result="" id="delay">延迟<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#delay"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="delay">Delay<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#delay"><i class="material-icons">link</i></a></h3>

<p translation-result="">延迟控制的是在动画已经触发但尚未真正开始转场之前要等待多久。可以把它添加到字符串中的持续时间后面，它的选项格式也跟持续时间是一样的：</p><p translation-origin="off">The delay controls the length of time between the animation trigger and the beginning
of the transition. You can define one by adding it to the same string
following the duration. It also has the same format options as the duration:</p>

<ul>
<li>
<p translation-result=""> 等待 100 毫秒，然后运行 200 毫秒：<code>'0.2s 100ms'</code>。</p><p translation-origin="off">Wait for 100ms and then run for 200ms: <code>'0.2s 100ms'</code></p>

</li>
</ul>
<h3 translation-result="" id="easing">缓动函数<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#easing"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="easing">Easing<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#easing"><i class="material-icons">link</i></a></h3>

<p translation-result=""><a href="http://easings.net/">缓动函数</a>用于控制动画在运行期间如何加速和减速。比如：使用 <code>ease-in</code> 函数意味着动画开始时相对缓慢，然后在进行中逐步加速。可以通过在这个字符串中的持续时间和延迟后面添加<em>第三个</em>值来控制使用哪个缓动函数(如果没有定义延迟就作为<em>第二个</em>值)。</p><p translation-origin="off">The <a href="http://easings.net/">easing function</a> controls how the animation accelerates
and decelerates during its runtime. For example, an <code>ease-in</code> function causes
the animation to begin relatively slowly but pick up speed as it progresses. You
can control the easing by adding it as a <em>third</em> value in the string after the duration
and the delay (or as the <em>second</em> value when there is no delay):</p>

<ul>
<li>
<p translation-result=""> 等待 100 毫秒，然后运行 200 毫秒，并且带缓动：<code>'0.2s 100ms ease-out'</code></p><p translation-origin="off">Wait for 100ms and then run for 200ms, with easing: <code>'0.2s 100ms ease-out'</code></p>

</li>
<li>
<p translation-result=""> 运行 200 毫秒，并且带缓动：<code>'0.2s ease-in-out'</code></p><p translation-origin="off">Run for 200ms, with easing: <code>'0.2s ease-in-out'</code></p>

</li>
</ul>
<img src="./Angular - 动画_files/animation_timings.gif" alt="Animations with specific timings" class="right" width="220">
<h3 translation-result="" id="example">例子<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#example"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="example">Example<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#example"><i class="material-icons">link</i></a></h3>

<p translation-result="">这里是两个自定义时间线的动态演示。“进场”和“离场”都持续 200 毫秒，也就是 <code>0.2s</code>，但它们有不同的缓动函数。“离场”动画会在 100 毫秒的延迟之后开始，也就是 <code>'0.2s 10 ease-out'</code>：</p><p translation-origin="off">Here are a couple of custom timings in action. Both enter and leave last for
200 milliseconds, that is <code>0.2s</code>, but they have different easings. The leave begins after a
slight delay of 10 milliseconds as specified in <code>'0.2s 10 ease-out'</code>:</p>

<code-example path="animations/src/app/hero-list-timings.component.ts" region="animationdef" title="hero-list-timings.component.ts (excerpt)" linenums="false" ng-version="6.0.0"><div style="display: none">
animations: [
  <a href="https://angular.cn/api/animations/trigger" class="code-anchor">trigger</a>('flyInOut', [
    <a href="https://angular.cn/api/animations/state" class="code-anchor">state</a>('in', <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({opacity: 1, transform: 'translateX(0)'})),
    <a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a>('void =&gt; *', [
      <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({
        opacity: 0,
        transform: 'translateX(-100%)'
      }),
      <a href="https://angular.cn/api/animations/animate" class="code-anchor">animate</a>('0.2s ease-in')
    ]),
    <a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a>('* =&gt; void', [
      <a href="https://angular.cn/api/animations/animate" class="code-anchor">animate</a>('0.2s 0.1s ease-out', <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({
        opacity: 0,
        transform: 'translateX(100%)'
      }))
    ])
  ])
]

</div><!----><header class="ng-star-inserted">hero-list-timings.component.ts (excerpt)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from hero-list-timings.component.ts (excerpt)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="pln">animations</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
  </span><a href="https://angular.cn/api/animations/trigger" class="code-anchor"><span class="pln">trigger</span></a><span class="pun">(</span><span class="str">'flyInOut'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
    </span><a href="https://angular.cn/api/animations/state" class="code-anchor"><span class="pln">state</span></a><span class="pun">(</span><span class="str">'in'</span><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">opacity</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"> transform</span><span class="pun">:</span><span class="pln"> </span><span class="str">'translateX(0)'</span><span class="pun">})),</span><span class="pln">
    </span><a href="https://angular.cn/api/animations/transition" class="code-anchor"><span class="pln">transition</span></a><span class="pun">(</span><span class="str">'void =&gt; *'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
      </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">
        opacity</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln">
        transform</span><span class="pun">:</span><span class="pln"> </span><span class="str">'translateX(-100%)'</span><span class="pln">
      </span><span class="pun">}),</span><span class="pln">
      </span><a href="https://angular.cn/api/animations/animate" class="code-anchor"><span class="pln">animate</span></a><span class="pun">(</span><span class="str">'0.2s ease-in'</span><span class="pun">)</span><span class="pln">
    </span><span class="pun">]),</span><span class="pln">
    </span><a href="https://angular.cn/api/animations/transition" class="code-anchor"><span class="pln">transition</span></a><span class="pun">(</span><span class="str">'* =&gt; void'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
      </span><a href="https://angular.cn/api/animations/animate" class="code-anchor"><span class="pln">animate</span></a><span class="pun">(</span><span class="str">'0.2s 0.1s ease-out'</span><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">
        opacity</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln">
        transform</span><span class="pun">:</span><span class="pln"> </span><span class="str">'translateX(100%)'</span><span class="pln">
      </span><span class="pun">}))</span><span class="pln">
    </span><span class="pun">])</span><span class="pln">
  </span><span class="pun">])</span><span class="pln">
</span><span class="pun">]</span></code>
    </pre></aio-code></code-example>
<h2 translation-result="" id="multi-step-animations-with-keyframes">基于关键帧(Keyframes)的多阶段动画<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#multi-step-animations-with-keyframes"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="multi-step-animations-with-keyframes">Multi-step animations with keyframes<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#multi-step-animations-with-keyframes"><i class="material-icons">link</i></a></h2>

<img src="./Angular - 动画_files/animation_multistep.gif" alt="Animations with some bounce implemented with keyframes" class="right" width="220">
<p translation-result="">通过定义动画的<em>关键帧</em>，可以把两组样式之间的简单转场，升级成一种更复杂的动画，它会在转场期间经历一个或多个中间样式。</p><p translation-origin="off">Animation <em>keyframes</em> go beyond a simple transition to a more intricate animation
that goes through one or more intermediate styles when transitioning between two sets of styles.</p>

<p translation-result="">每个关键帧都可以被指定一个<em>偏移量</em>，用来定义该关键帧将被用在动画期间的哪个时间点。偏移量是一个介于 0(表示动画起点)和 1(表示动画终点)之间的数组。</p><p translation-origin="off">For each keyframe, you specify an <em>offset</em> that defines at which point
in the animation that keyframe applies. The offset is a number between zero,
which marks the beginning of the animation, and one, which marks the end.</p>

<p translation-result="">这个例子使用关键帧来为进场和离场动画添加一些“反弹效果”：</p><p translation-origin="off">This example adds some "bounce" to the enter and leave animations with
keyframes:</p>

<code-example path="animations/src/app/hero-list-multistep.component.ts" region="animationdef" title="hero-list-multistep.component.ts (excerpt)" linenums="false" ng-version="6.0.0"><div style="display: none">
animations: [
  <a href="https://angular.cn/api/animations/trigger" class="code-anchor">trigger</a>('flyInOut', [
    <a href="https://angular.cn/api/animations/state" class="code-anchor">state</a>('in', <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({transform: 'translateX(0)'})),
    <a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a>('void =&gt; *', [
      <a href="https://angular.cn/api/animations/animate" class="code-anchor">animate</a>(300, <a href="https://angular.cn/api/animations/keyframes" class="code-anchor">keyframes</a>([
        <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({opacity: 0, transform: 'translateX(-100%)', offset: 0}),
        <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({opacity: 1, transform: 'translateX(15px)',  offset: 0.3}),
        <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({opacity: 1, transform: 'translateX(0)',     offset: 1.0})
      ]))
    ]),
    <a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a>('* =&gt; void', [
      <a href="https://angular.cn/api/animations/animate" class="code-anchor">animate</a>(300, <a href="https://angular.cn/api/animations/keyframes" class="code-anchor">keyframes</a>([
        <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({opacity: 1, transform: 'translateX(0)',     offset: 0}),
        <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({opacity: 1, transform: 'translateX(-15px)', offset: 0.7}),
        <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({opacity: 0, transform: 'translateX(100%)',  offset: 1.0})
      ]))
    ])
  ])
]

</div><!----><header class="ng-star-inserted">hero-list-multistep.component.ts (excerpt)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from hero-list-multistep.component.ts (excerpt)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="pln">animations</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
  </span><a href="https://angular.cn/api/animations/trigger" class="code-anchor"><span class="pln">trigger</span></a><span class="pun">(</span><span class="str">'flyInOut'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
    </span><a href="https://angular.cn/api/animations/state" class="code-anchor"><span class="pln">state</span></a><span class="pun">(</span><span class="str">'in'</span><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">transform</span><span class="pun">:</span><span class="pln"> </span><span class="str">'translateX(0)'</span><span class="pun">})),</span><span class="pln">
    </span><a href="https://angular.cn/api/animations/transition" class="code-anchor"><span class="pln">transition</span></a><span class="pun">(</span><span class="str">'void =&gt; *'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
      </span><a href="https://angular.cn/api/animations/animate" class="code-anchor"><span class="pln">animate</span></a><span class="pun">(</span><span class="lit">300</span><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/animations/keyframes" class="code-anchor"><span class="pln">keyframes</span></a><span class="pun">([</span><span class="pln">
        </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">opacity</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> transform</span><span class="pun">:</span><span class="pln"> </span><span class="str">'translateX(-100%)'</span><span class="pun">,</span><span class="pln"> offset</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">}),</span><span class="pln">
        </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">opacity</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"> transform</span><span class="pun">:</span><span class="pln"> </span><span class="str">'translateX(15px)'</span><span class="pun">,</span><span class="pln">  offset</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0.3</span><span class="pun">}),</span><span class="pln">
        </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">opacity</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"> transform</span><span class="pun">:</span><span class="pln"> </span><span class="str">'translateX(0)'</span><span class="pun">,</span><span class="pln">     offset</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1.0</span><span class="pun">})</span><span class="pln">
      </span><span class="pun">]))</span><span class="pln">
    </span><span class="pun">]),</span><span class="pln">
    </span><a href="https://angular.cn/api/animations/transition" class="code-anchor"><span class="pln">transition</span></a><span class="pun">(</span><span class="str">'* =&gt; void'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
      </span><a href="https://angular.cn/api/animations/animate" class="code-anchor"><span class="pln">animate</span></a><span class="pun">(</span><span class="lit">300</span><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/animations/keyframes" class="code-anchor"><span class="pln">keyframes</span></a><span class="pun">([</span><span class="pln">
        </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">opacity</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"> transform</span><span class="pun">:</span><span class="pln"> </span><span class="str">'translateX(0)'</span><span class="pun">,</span><span class="pln">     offset</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">}),</span><span class="pln">
        </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">opacity</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"> transform</span><span class="pun">:</span><span class="pln"> </span><span class="str">'translateX(-15px)'</span><span class="pun">,</span><span class="pln"> offset</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0.7</span><span class="pun">}),</span><span class="pln">
        </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">opacity</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> transform</span><span class="pun">:</span><span class="pln"> </span><span class="str">'translateX(100%)'</span><span class="pun">,</span><span class="pln">  offset</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1.0</span><span class="pun">})</span><span class="pln">
      </span><span class="pun">]))</span><span class="pln">
    </span><span class="pun">])</span><span class="pln">
  </span><span class="pun">])</span><span class="pln">
</span><span class="pun">]</span></code>
    </pre></aio-code></code-example>
<p translation-result="">注意，这个偏移量并<em>不是</em>用绝对数字定义的时间段，而是在 0 到 1 之间的相对值（百分比）。动画的最终时间线会基于关键帧的偏移量、持续时间、延迟和缓动函数计算出来。</p><p translation-origin="off">Note that the offsets are <em>not</em> defined in terms of absolute time. They are relative
measures from zero to one. The final timeline of the animation is based on the combination
of keyframe offsets, duration, delay, and easing.</p>

<p translation-result="">为关键帧定义偏移量是可选的。如果省略它们，偏移量会自动根据帧数平均分布出来。例如，三个未定义过偏移量的关键帧会分别获得偏移量：<code>0</code>、<code>0.5</code> 和 <code>1</code>。</p><p translation-origin="off">Defining offsets for keyframes is optional. If you omit them, offsets with even
spacing are automatically assigned. For example, three keyframes without predefined
offsets receive offsets <code>0</code>, <code>0.5</code>, and <code>1</code>.</p>

<h2 translation-result="" id="parallel-animation-groups">并行动画组(Group)<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#parallel-animation-groups"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="parallel-animation-groups">Parallel animation groups<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#parallel-animation-groups"><i class="material-icons">link</i></a></h2>

<img src="./Angular - 动画_files/animation_groups.gif" alt="Parallel animations with different timings, implemented with groups" class="right" width="220px">
<p translation-result="">你已经知道该如何在同一时间段进行多个样式的动画了：只要把它们都放进同一个 <code><a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>()</code> 定义中就行了！</p><p translation-origin="off">You've seen how to animate multiple style properties at the same time:
just put all of them into the same <code><a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>()</code> definition.</p>

<p translation-result="">但你也可能会希望为同时发生的几个动画配置不同的<em>时间线</em>。比如，同时对两个 CSS 属性做动画，但又得为它们定义不同的缓动函数。</p><p translation-origin="off">But you may also want to configure different <em>timings</em> for animations that happen
in parallel. For example, you may want to animate two CSS properties but use a
different easing function for each one.</p>

<p translation-result="">这种情况下就可以用动画<em>组</em>来解决了。在这个例子中，同时在进场和离场时使用了组，以便能让它们使用两种不同的时间线配置。
它们被同时应用到同一个元素上，但又彼此独立运行：</p><p translation-origin="off">For this you can use animation <em>groups</em>. In this example, using groups both on
enter and leave allows for two different timing configurations. Both
are applied to the same element in parallel, but run independently of each other:</p>

<code-example path="animations/src/app/hero-list-groups.component.ts" region="animationdef" title="hero-list-groups.component.ts (excerpt)" linenums="false" ng-version="6.0.0"><div style="display: none">
animations: [
  <a href="https://angular.cn/api/animations/trigger" class="code-anchor">trigger</a>('flyInOut', [
    <a href="https://angular.cn/api/animations/state" class="code-anchor">state</a>('in', <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({width: 120, transform: 'translateX(0)', opacity: 1})),
    <a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a>('void =&gt; *', [
      <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({width: 10, transform: 'translateX(50px)', opacity: 0}),
      <a href="https://angular.cn/api/animations/group" class="code-anchor">group</a>([
        <a href="https://angular.cn/api/animations/animate" class="code-anchor">animate</a>('0.3s 0.1s ease', <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({
          transform: 'translateX(0)',
          width: 120
        })),
        <a href="https://angular.cn/api/animations/animate" class="code-anchor">animate</a>('0.3s ease', <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({
          opacity: 1
        }))
      ])
    ]),
    <a href="https://angular.cn/api/animations/transition" class="code-anchor">transition</a>('* =&gt; void', [
      <a href="https://angular.cn/api/animations/group" class="code-anchor">group</a>([
        <a href="https://angular.cn/api/animations/animate" class="code-anchor">animate</a>('0.3s ease', <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({
          transform: 'translateX(50px)',
          width: 10
        })),
        <a href="https://angular.cn/api/animations/animate" class="code-anchor">animate</a>('0.3s 0.2s ease', <a href="https://angular.cn/api/animations/style" class="code-anchor">style</a>({
          opacity: 0
        }))
      ])
    ])
  ])
]

</div><!----><header class="ng-star-inserted">hero-list-groups.component.ts (excerpt)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from hero-list-groups.component.ts (excerpt)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="pln">animations</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
  </span><a href="https://angular.cn/api/animations/trigger" class="code-anchor"><span class="pln">trigger</span></a><span class="pun">(</span><span class="str">'flyInOut'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
    </span><a href="https://angular.cn/api/animations/state" class="code-anchor"><span class="pln">state</span></a><span class="pun">(</span><span class="str">'in'</span><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">width</span><span class="pun">:</span><span class="pln"> </span><span class="lit">120</span><span class="pun">,</span><span class="pln"> transform</span><span class="pun">:</span><span class="pln"> </span><span class="str">'translateX(0)'</span><span class="pun">,</span><span class="pln"> opacity</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">})),</span><span class="pln">
    </span><a href="https://angular.cn/api/animations/transition" class="code-anchor"><span class="pln">transition</span></a><span class="pun">(</span><span class="str">'void =&gt; *'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
      </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">width</span><span class="pun">:</span><span class="pln"> </span><span class="lit">10</span><span class="pun">,</span><span class="pln"> transform</span><span class="pun">:</span><span class="pln"> </span><span class="str">'translateX(50px)'</span><span class="pun">,</span><span class="pln"> opacity</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">}),</span><span class="pln">
      </span><a href="https://angular.cn/api/animations/group" class="code-anchor"><span class="kwd">group</span></a><span class="pun">([</span><span class="pln">
        </span><a href="https://angular.cn/api/animations/animate" class="code-anchor"><span class="pln">animate</span></a><span class="pun">(</span><span class="str">'0.3s 0.1s ease'</span><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">
          transform</span><span class="pun">:</span><span class="pln"> </span><span class="str">'translateX(0)'</span><span class="pun">,</span><span class="pln">
          width</span><span class="pun">:</span><span class="pln"> </span><span class="lit">120</span><span class="pln">
        </span><span class="pun">})),</span><span class="pln">
        </span><a href="https://angular.cn/api/animations/animate" class="code-anchor"><span class="pln">animate</span></a><span class="pun">(</span><span class="str">'0.3s ease'</span><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">
          opacity</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pln">
        </span><span class="pun">}))</span><span class="pln">
      </span><span class="pun">])</span><span class="pln">
    </span><span class="pun">]),</span><span class="pln">
    </span><a href="https://angular.cn/api/animations/transition" class="code-anchor"><span class="pln">transition</span></a><span class="pun">(</span><span class="str">'* =&gt; void'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
      </span><a href="https://angular.cn/api/animations/group" class="code-anchor"><span class="kwd">group</span></a><span class="pun">([</span><span class="pln">
        </span><a href="https://angular.cn/api/animations/animate" class="code-anchor"><span class="pln">animate</span></a><span class="pun">(</span><span class="str">'0.3s ease'</span><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">
          transform</span><span class="pun">:</span><span class="pln"> </span><span class="str">'translateX(50px)'</span><span class="pun">,</span><span class="pln">
          width</span><span class="pun">:</span><span class="pln"> </span><span class="lit">10</span><span class="pln">
        </span><span class="pun">})),</span><span class="pln">
        </span><a href="https://angular.cn/api/animations/animate" class="code-anchor"><span class="pln">animate</span></a><span class="pun">(</span><span class="str">'0.3s 0.2s ease'</span><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/animations/style" class="code-anchor"><span class="pln">style</span></a><span class="pun">({</span><span class="pln">
          opacity</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pln">
        </span><span class="pun">}))</span><span class="pln">
      </span><span class="pun">])</span><span class="pln">
    </span><span class="pun">])</span><span class="pln">
  </span><span class="pun">])</span><span class="pln">
</span><span class="pun">]</span></code>
    </pre></aio-code></code-example>
<p translation-result="">其中一个动画组对元素的 <code>transform</code> 和 <code>width</code> 做动画，另一个组则对 <code>opacity</code> 做动画。</p><p translation-origin="off">One group animates the element transform and width; the other group animates the opacity.</p>

<h2 translation-result="" id="animation-callbacks">动画回调<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#animation-callbacks"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="animation-callbacks">Animation callbacks<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/animations#animation-callbacks"><i class="material-icons">link</i></a></h2>

<p translation-result="">当动画开始和结束时，会触发一个回调。</p><p translation-origin="off">A callback is fired when an animation is started and also when it is done.</p>

<p translation-result="">对于例子中的这个关键帧，你有一个叫做 <code>@flyInOut</code> 的 <code><a href="https://angular.cn/api/animations/trigger" class="code-anchor">trigger</a></code>。在那里你可以挂钩到那些回调，比如：</p><p translation-origin="off">In the keyframes example, you have a <code><a href="https://angular.cn/api/animations/trigger" class="code-anchor">trigger</a></code> called <code>@flyInOut</code>. You can hook
those callbacks like this:</p>

<code-example path="animations/src/app/hero-list-multistep.component.ts" region="template" title="hero-list-multistep.component.ts (excerpt)" linenums="false" ng-version="6.0.0"><div style="display: none">
template: `
  &lt;ul&gt;
    &lt;li *<a href="https://angular.cn/api/common/NgForOf" class="code-anchor">ngFor</a>="let hero of heroes"
        (@flyInOut.start)="animationStarted($event)"
        (@flyInOut.done)="animationDone($event)"
        [@flyInOut]="'in'"&gt;
      {{hero.name}}
    &lt;/li&gt;
  &lt;/ul&gt;
`,

</div><!----><header class="ng-star-inserted">hero-list-multistep.component.ts (excerpt)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from hero-list-multistep.component.ts (excerpt)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="kwd">template</span><span class="pun">:</span><span class="pln"> </span><span class="str">`
  &lt;ul&gt;
    &lt;li *</span><a href="https://angular.cn/api/common/NgForOf" class="code-anchor"><span class="str">ngFor</span></a><span class="str">="let hero of heroes"
        (@flyInOut.start)="animationStarted($event)"
        (@flyInOut.done)="animationDone($event)"
        [@flyInOut]="'in'"&gt;
      {{hero.name}}
    &lt;/li&gt;
  &lt;/ul&gt;
`</span><span class="pun">,</span></code>
    </pre></aio-code></code-example>
<p translation-result="">这些回调接收一个 <code>AnimationTransitionEvent</code> 参数，它包含一些有用的属性，例如 <code>fromState</code>，<code>toState</code> 和 <code>totalTime</code>。</p><p translation-origin="off">The callbacks receive an <code><a href="https://angular.cn/api/animations/AnimationEvent" class="code-anchor">AnimationEvent</a></code> that contains useful properties such as
<code>fromState</code>, <code>toState</code> and <code>totalTime</code>.</p>

<p translation-result="">无论动画是否实际执行过，那些回调都会触发。</p><p translation-origin="off">Those callbacks will fire whether or not an animation is picked up.</p>


</div>
<!-- links to this doc:
 - guide/architecture-next-steps
 - guide/browser-support
 - guide/glossary
 - guide/npm-packages
 - guide/router
 - guide/upgrade
-->
<!-- links from this doc:
 - /api/animations/AnimationBuilder
 - api/animations/AnimationEvent
 - api/animations/animate
 - api/animations/group
 - api/animations/keyframes
 - api/animations/state
 - api/animations/style
 - api/animations/transition
 - api/animations/trigger
 - api/common/NgForOf
 - api/core/Component
 - api/core/Input
 - api/core/NgModule
 - api/platform-browser/BrowserModule
 - api/platform-browser/animations/BrowserAnimationsModule
 - guide/animations#animatable-properties-and-units
 - guide/animations#animation-callbacks
 - guide/animations#animation-timing
 - guide/animations#animations
 - guide/animations#automatic-property-calculation
 - guide/animations#delay
 - guide/animations#duration
 - guide/animations#easing
 - guide/animations#example
 - guide/animations#example-basics
 - guide/animations#example-entering-and-leaving
 - guide/animations#example-entering-and-leaving-from-different-states
 - guide/animations#multi-step-animations-with-keyframes
 - guide/animations#overview
 - guide/animations#parallel-animation-groups
 - guide/animations#setup
 - guide/animations#states-and-transitions
 - guide/animations#the-codevoidcode-state
 - guide/animations#the-void-state
 - guide/animations#the-wildcard-state-
 - guide/animations#the-wildcard-state-codecode
 - guide/animations#transitioning-between-two-states
 - http://caniuse.com/#feat=web-animation
 - http://easings.net/
 - https://w3c.github.io/web-animations/
 - https://www.w3.org/TR/css3-transitions
 - https://www.w3.org/TR/css3-transitions/#animatable-properties
--></div></aio-doc-viewer><aio-dt><!----></aio-dt></section></mat-sidenav-content></mat-sidenav-container><!----><div class="toc-container no-print ng-star-inserted" style="max-height: 3682px;"><aio-toc><!----><div class="toc-inner no-print collapsed ng-star-inserted"><!----><!----><ul class="toc-list"><!----><!----><!----><li title="动画link" class="h1 active ng-star-inserted"><a href="https://angular.cn/guide/animations#animations">动画</a></li><!----><!----><!----><li title="概览link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/animations#overview">概览</a></li><!----><!----><!----><li title="准备工作link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/animations#setup">准备工作</a></li><!----><!----><!----><li title="快速起步范例：在两个状态间转场link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/animations#transitioning-between-two-states">快速起步范例：在两个状态间转场</a></li><!----><!----><!----><li title="状态与转场link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/animations#states-and-transitions">状态与转场</a></li><!----><!----><!----><li title="*(通配符)状态link" class="h3 ng-star-inserted"><a href="https://angular.cn/guide/animations#the-wildcard-state-codecode"><code>*</code>(通配符)状态</a></li><!----><!----><!----><li title="void 状态link" class="h3 ng-star-inserted"><a href="https://angular.cn/guide/animations#the-codevoidcode-state"><code>void</code> 状态</a></li><!----><!----><!----><li title="例子：进场与离场link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/animations#example-entering-and-leaving">例子：进场与离场</a></li><!----><!----><!----><li title="范例：从不同的状态下进场和离场link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/animations#example-entering-and-leaving-from-different-states">范例：从不同的状态下进场和离场</a></li><!----><!----><!----><li title="可动的(Animatable)属性与单位link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/animations#animatable-properties-and-units">可动的(Animatable)属性与单位</a></li><!----><!----><!----><li title="自动属性值计算link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/animations#automatic-property-calculation">自动属性值计算</a></li><!----><!----><!----><li title="动画时间线link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/animations#animation-timing">动画时间线</a></li><!----><!----><!----><li title="持续时间link" class="h3 ng-star-inserted"><a href="https://angular.cn/guide/animations#duration">持续时间</a></li><!----><!----><!----><li title="延迟link" class="h3 ng-star-inserted"><a href="https://angular.cn/guide/animations#delay">延迟</a></li><!----><!----><!----><li title="缓动函数link" class="h3 ng-star-inserted"><a href="https://angular.cn/guide/animations#easing">缓动函数</a></li><!----><!----><!----><li title="例子link" class="h3 ng-star-inserted"><a href="https://angular.cn/guide/animations#example">例子</a></li><!----><!----><!----><li title="基于关键帧(Keyframes)的多阶段动画link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/animations#multi-step-animations-with-keyframes">基于关键帧(Keyframes)的多阶段动画</a></li><!----><!----><!----><li title="并行动画组(Group)link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/animations#parallel-animation-groups">并行动画组(Group)</a></li><!----><!----><!----><li title="动画回调link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/animations#animation-callbacks">动画回调</a></li><!----></ul><!----></div></aio-toc></div><footer class="no-print"><aio-footer><div class="grid-fluid"><!----><div class="footer-block ng-star-inserted"><h3>资源</h3><ul><!----><li class="ng-star-inserted"><a class="link" href="https://angular.cn/about" title="Angular 贡献者。">关于</a></li><li class="ng-star-inserted"><a class="link" href="https://angular.cn/resources" title="网络上的 Angular 工具、培训、博客等">资源列表</a></li><li class="ng-star-inserted"><a class="link" href="https://angular.cn/presskit" title="我们的联系方式、LOGO 和品牌">宣传资料</a></li><li class="ng-star-inserted"><a class="link" href="https://blog.angular.io/" title="Angular 官方博客">博客</a></li></ul></div><div class="footer-block ng-star-inserted"><h3>帮助</h3><ul><!----><li class="ng-star-inserted"><a class="link" href="https://stackoverflow.com/questions/tagged/angular" title="Stack Overflow: 这里的社区会回答你关于 Angular 的技术问题">Stack Overflow</a></li><li class="ng-star-inserted"><a class="link" href="https://gitter.im/angular/angular" title="和老鸟聊 Angular">Gitter</a></li><li class="ng-star-inserted"><a class="link" href="https://github.com/angular/angular/issues" title="在 github 上报告问题和建议。">报告问题</a></li><li class="ng-star-inserted"><a class="link" href="https://github.com/angular/code-of-conduct/blob/master/CODE_OF_CONDUCT.md" title="让我们彼此尊重">行为规范</a></li></ul></div><div class="footer-block ng-star-inserted"><h3>社区</h3><ul><!----><li class="ng-star-inserted"><a class="link" href="https://angular.cn/events" title="Post issues and suggestions on github.">活动</a></li><li class="ng-star-inserted"><a class="link" href="http://www.meetup.com/topics/angularjs/" title="参加聚会，向别的开发人员学习">聚会</a></li><li class="ng-star-inserted"><a class="link" href="https://twitter.com/angular" title="Twitter">Twitter</a></li><li class="ng-star-inserted"><a class="link" href="https://github.com/angular/angular" title="GitHub">GitHub</a></li><li class="ng-star-inserted"><a class="link" href="https://angular.cn/contribute" title="向 Angular 做贡献">做贡献</a></li></ul></div><div class="footer-block ng-star-inserted"><h3>多语言</h3><ul><!----><li class="ng-star-inserted"><a class="link" href="https://angular.io/" title="English Version.">English Version</a></li><li class="ng-star-inserted"><a class="link" href="https://angular.jp/" title="日本語版">日本語版</a></li></ul></div></div><p> Powered by Google ©2010-2018. 代码授权方式：<a href="https://angular.cn/license" title="License text">MIT-style License</a>. 文档授权方式：<a href="http://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a>. </p><p><span class="text-caption">本网站由第三方公司洛阳永欣维护 &nbsp;<a href="http://www.miitbeian.gov.cn/">豫ICP备16019859号-1</a></span></p><p> 当前版本：6.0.1-build.180+sha.8494cf4. </p></aio-footer></footer></aio-shell>

  <noscript>
    &lt;div class="background-sky hero"&gt;&lt;/div&gt;
    &lt;section id="intro"&gt;
      &lt;div class="hero-logo"&gt;
        &lt;img src="assets/images/logos/angular/angular.svg" width="250" height="250"&gt;
      &lt;/div&gt;
      &lt;div class="homepage-container"&gt;
        &lt;div class="hero-headline"&gt;一套框架，多种平台&lt;br&gt;移动 &amp;amp; 桌面&lt;/div&gt;
      &lt;/div&gt;
    &lt;/section&gt;
    &lt;h2 style="color: red; text-align: center; margin-top: -50px;"&gt;
      &lt;b&gt;&lt;i&gt;该网站需要浏览器支持 JavaScript &lt;/i&gt;&lt;/b&gt;
    &lt;/h2&gt;
  </noscript>


<script type="text/javascript" src="./Angular - 动画_files/runtime.e7e60529879ffb07e28e.js.下载"></script><script type="text/javascript" src="./Angular - 动画_files/polyfills.56dafdd128abda80a86c.js.下载"></script><script type="text/javascript" src="./Angular - 动画_files/main.e580488e21fdad9d749c.js.下载"></script><div class="cdk-visually-hidden" aria-atomic="true" aria-live="polite"></div></body></html>