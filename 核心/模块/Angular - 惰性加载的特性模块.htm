<!DOCTYPE html>
<!-- saved from url=(0042)https://angular.cn/guide/sharing-ngmodules -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  
  <title>Angular - 惰性加载的特性模块</title>
  <!--<base href="/">--><base href=".">

  <meta name="viewport" content="width=device-width, initial-scale=1">

  <link rel="icon" type="image/x-icon" href="https://angular.cn/favicon.ico">
  <link rel="icon" type="image/x-icon" href="https://angular.cn/assets/images/favicons/favicon.ico">
  <link rel="icon" type="image/png" href="https://angular.cn/assets/images/favicons/favicon-32x32.png" sizes="32x32">
  <link rel="icon" type="image/png" href="https://angular.cn/assets/images/favicons/favicon-194x194.png" sizes="194x194">
  <link rel="icon" type="image/png" href="https://angular.cn/assets/images/favicons/favicon-96x96.png" sizes="96x96">
  <link rel="icon" type="image/png" href="https://angular.cn/assets/images/favicons/favicon-16x16.png" sizes="16x16">
  <link rel="apple-touch-icon" sizes="144x144" href="https://angular.cn/assets/images/favicons/apple-touch-icon-144x144.png">
  <link rel="apple-touch-icon-precomposed" sizes="144x144" href="https://angular.cn/assets/images/favicons/apple-touch-icon-144x144.png">

  <!-- NOTE: These need to be kept in sync with `ngsw-manifest.json`. -->
  <link href="./Angular - 惰性加载的特性模块_files/Material_Icons.css" rel="stylesheet">
  <link href="./Angular - 惰性加载的特性模块_files/Droid_Sans_Mono.css" rel="stylesheet">
  <link href="./Angular - 惰性加载的特性模块_files/font-awesome.min.css" rel="stylesheet">
  <!-- -->

  <link rel="manifest" href="https://angular.cn/pwa-manifest.json">
  <meta name="theme-color" content="#1976d2">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-status-bar-style" content="translucent">

  <script async="" src="./Angular - 惰性加载的特性模块_files/analytics.js.下载"></script><script>
    // Dynamically, pre-emptively, add `noindex`, which will be removed when the doc is ready and valid
    tag = document.createElement('meta'); tag.name = 'robots'; tag.content = 'noindex';
    document.head.appendChild(tag);
  </script>

  <!-- Google Analytics -->
  <script>
  // Note this is a customised version of the GA tracking snippet
  // See the comments below for more info
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;
  ~i.name.indexOf('NG_DEFER_BOOTSTRAP')|| // only load library if not running e2e tests
  m.parentNode.insertBefore(a,m)
  })(window,document,'script','assets/js/analytics.js','ga');
  </script>
  <!-- End Google Analytics -->

  <script>
    // Report fatal errors to Google Analytics
    window.onerror = function() {
      ga('send', 'exception', {exDescription: formatError.apply(null, arguments), exFatal: true});

      function formatError(msg, url, line, col, e) {
        var stack;
        msg = msg.replace(/^Error: /, '');
        if (e) {
          stack = e.stack
              // strip the leading "Error: " from the stack trace
              .replace(/^Error: /, '')
              // strip the message from the stack trace, if present
              .replace(msg + '\n', '')
              // strip leading spaces
              .replace(/^ +/gm, '')
              // strip all leading "at " for each frame
              .replace(/^at /gm, '')
              // replace long urls with just the last segment: `filename:line:column`
              .replace(/(?: \(|@)http.+\/([^/)]+)\)?(?:\n|$)/gm, '@$1\n')
              // replace "eval code" in Edge
              .replace(/ *\(eval code(:\d+:\d+)\)(?:\n|$)/gm, '@???$1\n')
        } else {
          line = line || '?';
          col = col || '?';
          stack = url + ':' + line + ':' + col;
        }
        return (msg + '\n' + stack).substr(0, 150);
      }
    };
  </script>

  <script>
    if (window.document.documentMode) {
      // polyfill IE11 in a blocking way
      var s = document.createElement('script');
      s.src = 'generated/ie-polyfills.min.js';
      document.head.appendChild(s);
    } else if (!Object.assign) {
      // polyfill other non-evergreen browsers in a blocking way
      var polyfillUrl = "https://cdn.polyfill.io/v2/polyfill.min.js?features=default,Array.prototype.find&flags=gated&unknown=polyfill";

      // send a blocking XHR to fetch the polyfill
      // then append it to the document so that its eval-ed synchronously
      // this is required because the method used for IE is not reliable with other non-evergreen browsers
      var xhr = new XMLHttpRequest();
      xhr.addEventListener("load", function() {
        var s = document.createElement('script');
        s.type = 'text/javascript';
        var code = this.responseText;
        s.appendChild(document.createTextNode(code));
        document.head.appendChild(s);
      });
      xhr.open("GET", polyfillUrl, false);
      xhr.send();
    }
  </script>

  <script>
    //load CE polyfill
    //HACK: webpack's html plugin mangles the document.write calls if we don't trick it.

    //load the ES5 shim for browsers with native CE support
    function loadCustomElementsShim(){
      document.write('<scri' + 'pt src="assets/js/native-shim.js"><' + '/script>');
    }

    //load the full custom elements polyfill for browsers without support
    function loadCustomElementsPolyfill(){
      document.write('<scri' + 'pt src="assets/js/custom-elements.min.js"><' + '/script>');
    }
    //detect if we have native CE support
    if(!window.customElements){
      loadCustomElementsPolyfill();
    }
    else {
      loadCustomElementsShim();
    }
  </script><script src="./Angular - 惰性加载的特性模块_files/native-shim.js.下载"></script>

<link rel="stylesheet" href="./Angular - 惰性加载的特性模块_files/styles.613b7c8de73e274bd4c6.css"><style>@media screen and (-ms-high-contrast:active){.mat-toolbar{outline:solid 1px}}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media (max-width:599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}</style><style>.mat-button,.mat-flat-button,.mat-icon-button,.mat-stroked-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;overflow:visible}.mat-button[disabled],.mat-flat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner{border:0}.mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{transition:none;opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:1}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-raised-button:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-raised-button[disabled]{box-shadow:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}.mat-flat-button:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-fab::-moz-focus-inner{border:0}.mat-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-fab[disabled]{box-shadow:none}.mat-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}.mat-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-mini-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-mini-fab[disabled]{box-shadow:none}.mat-mini-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}.mat-mini-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button .mat-icon,.mat-icon-button i{line-height:24px}.mat-button-focus-overlay,.mat-button-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-focus-overlay{background-color:rgba(0,0,0,.12);border-radius:inherit;opacity:0;transition:opacity .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1)}@media screen and (-ms-high-contrast:active){.mat-button-focus-overlay{background-color:rgba(255,255,255,.5)}}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}@media screen and (-ms-high-contrast:active){.mat-button,.mat-fab,.mat-flat-button,.mat-icon-button,.mat-mini-fab,.mat-raised-button{outline:solid 1px}}</style><style>.mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1,1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}</style><style>.mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-opened{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:background-color,visibility}@media screen and (-ms-high-contrast:active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%,0,0)}@media screen and (-ms-high-contrast:active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media screen and (-ms-high-contrast:active){.mat-drawer.mat-drawer-end,[dir=rtl] .mat-drawer{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer{transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%,0,0)}.mat-drawer:not(.mat-drawer-side){box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12)}.mat-sidenav-fixed{position:fixed}</style><script charset="utf-8" src="./Angular - 惰性加载的特性模块_files/current-location-current-location-module-ngfactory.f94bfe4754b66577c07b.js.下载"></script><style>.mat-progress-bar{display:block;height:5px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:'';display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2s infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2s infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(.5,0,.70173,.49582);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(.30244,.38135,.55,.95635);transform:translateX(83.67142%)}100%{transform:translateX(200.61106%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(.08)}36.65%{animation-timing-function:cubic-bezier(.33473,.12482,.78584,1);transform:scaleX(.08)}69.15%{animation-timing-function:cubic-bezier(.06,.11,.6,1);transform:scaleX(.66148)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:translateX(37.65191%)}48.35%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:translateX(84.38617%)}100%{transform:translateX(160.27778%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:scaleX(.08)}19.15%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:scaleX(.4571)}44.15%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:scaleX(.72796)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-10px)}}</style><script charset="utf-8" src="./Angular - 惰性加载的特性模块_files/code-code-example-module-ngfactory_code-code-tabs-module-ngfactory.6a5aabadc81dbdfa0f4e.js.下载"></script><script charset="utf-8" src="./Angular - 惰性加载的特性模块_files/code-code-tabs-module-ngfactory.8315a94f020cd25fe92d.js.下载"></script><script charset="utf-8" src="./Angular - 惰性加载的特性模块_files/code-code-example-module-ngfactory.d0ec50584c7428d1d6ed.js.下载"></script><script charset="utf-8" src="./Angular - 惰性加载的特性模块_files/12.50857b4475720140b255.js.下载"></script><style>.mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.mat-tab-label.mat-tab-disabled{cursor:default}.mat-tab-label.mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (max-width:599px){.mat-tab-label{padding:0 12px}}@media (max-width:959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs] .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}</style><style>.mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.mat-tab-label.mat-tab-disabled{cursor:default}.mat-tab-label.mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (max-width:599px){.mat-tab-label{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media screen and (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-header-pagination{position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-tab-labels{display:flex}</style><style>.mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}</style><script charset="utf-8" src="./Angular - 惰性加载的特性模块_files/live-example-live-example-module-ngfactory.76888e8a441aab262101.js.下载"></script></head>
<body>

  <aio-shell ng-version="6.0.0" class="mode-stable sidenav-open page-guide-lazy-loading-ngmodules folder-guide view-SideNav aio-notification-hide "><div id="top-of-page"></div><!----><mat-toolbar class="app-toolbar no-print mat-toolbar mat-primary mat-toolbar-multiple-rows" color="primary"><mat-toolbar-row class="notification-container mat-toolbar-row"><aio-notification actionurl="https://bit.ly/angular-survey-2018" buttontext="Go to survey" expirationdate="2018-01-19" icon="insert_comment" iconlabel="Survey" notificationid="survey-january-2018" class="ng-tns-c2-0 ng-trigger ng-trigger-hideAnimation" style="height: 0px;"><a class="content" href="https://bit.ly/angular-survey-2018"><mat-icon class="icon mat-icon" role="img" aria-hidden="true" aria-label="Survey"><svg fill="#FFFFFF" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M20 2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg></mat-icon><span class="message"> Help Angular by taking a <b>1 minute survey</b>! </span><span class="action-button">Go to survey</span></a><button class="close-button mat-icon-button" aria-label="Close" mat-icon-button=""><span class="mat-button-wrapper"><mat-icon aria-label="Dismiss notification" class="mat-icon ng-tns-c2-0" role="img" svgicon="close" aria-hidden="true"><svg fill="#ffffff" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg></mat-icon></span><div class="mat-button-ripple mat-ripple mat-button-ripple-round" matripple=""></div><div class="mat-button-focus-overlay"></div></button></aio-notification></mat-toolbar-row><mat-toolbar-row class="mat-toolbar-row"><button class="hamburger mat-button" mat-button="" title="Docs menu"><span class="mat-button-wrapper"><mat-icon class="mat-icon" role="img" svgicon="menu" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"></path></svg></mat-icon></span><div class="mat-button-ripple mat-ripple" matripple=""></div><div class="mat-button-focus-overlay"></div></button><a class="nav-link home" href="https://angular.cn/"><!----><img alt="Home" height="40" src="./Angular - 惰性加载的特性模块_files/logo-nav@2x.png" title="Home" width="150" class="ng-star-inserted"><!----></a><!----><aio-top-menu class="ng-star-inserted"><ul role="navigation"><!----><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/features" title="特性">特性</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/docs" title="文档">文档</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/resources" title="资源">资源</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/events" title="会议">会议</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://blog.angular.io/" title="博客">博客</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/translations/cn/home" title="关于中文版">关于中文版</a></li></ul></aio-top-menu><aio-search-box class="search-container"><input aria-label="search" placeholder="搜索" type="search"></aio-search-box></mat-toolbar-row></mat-toolbar><!----><mat-sidenav-container class="sidenav-container mat-drawer-container mat-sidenav-container mat-drawer-transition has-floating-toc" role="main"><!----><div class="mat-drawer-backdrop ng-star-inserted"></div><div tabindex="-1" class="cdk-visually-hidden cdk-focus-trap-anchor"></div><mat-sidenav class="sidenav mat-drawer mat-sidenav ng-tns-c6-1 ng-trigger ng-trigger-transform mat-drawer-side ng-star-inserted" tabindex="-1" style="transform: translate3d(0px, 0px, 0px); visibility: visible;"><!----><aio-nav-menu><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-1 collapsed" href="https://angular.cn/guide/quickstart" title="Angular 破冰"> 快速上手 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-1 collapsed" type="button" title="此《英雄指南》教程会带你用 TypeScript 一步步创建一个 Angular 应用。" aria-pressed="false"> 教程 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-1 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/tutorial" title="第一部分：《英雄指南》教程简介"> 1. 简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/tutorial/toh-pt0" title="第二部分：创建应用的外壳"> 2. 应用的“外壳” </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/tutorial/toh-pt1" title="第三部分：构建一个简单的英雄编辑器"> 3. 英雄编辑器 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/tutorial/toh-pt2" title="第四部分：构建一个主从结构的页面，用于展现英雄列表"> 4. 显示英雄列表 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/tutorial/toh-pt3" title="第五部分：把主从结构的页面重构成多个组件"> 5. 主从组件 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/tutorial/toh-pt4" title="第六部分：创建一个可复用的服务来管理英雄数据"> 6. 服务 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/tutorial/toh-pt5" title="第七部分：添加 Angular 路由器，并且学习在视图之间导航"> 7. 路由 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/tutorial/toh-pt6" title="第八部分：通过 HTTP 来获取并保存英雄数据"> 8. HTTP </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-1 expanded selected" type="button" title="学习 Angular 的核心知识" aria-pressed="true"> 核心知识 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-1 expanded selected"><!----><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Angular 应用的基本构造块。" aria-pressed="false"> 架构 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/architecture" title="Angular 应用的基本构造块"> 架构概览 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/architecture-modules" title="关于模块。"> 模块（NgModule）简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/architecture-components" title="关于组件、模板和视图。"> 组件简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/architecture-services" title="关于服务与依赖注入。"> 服务与 DI 简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/architecture-next-steps" title="学完基础知识之后……"> 后续步骤 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="使用数据绑定构建动态视图" aria-pressed="false"> 组件与模板 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/displaying-data" title="属性绑定可以帮助应用把数据显示在界面上"> 显示数据 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/template-syntax" title="学习如何写模板，以便借助数据绑定机制显示数据并响应事件。"> 模板语法 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/lifecycle-hooks" title="Angular 调用指令和组件的生命周期钩子函数，包括它的创建、变更和销毁时。"> 生命周期钩子 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/component-interaction" title="在不同的指令和组件之间共享信息"> 组件交互 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/component-styles" title="添加专属于某个组件的样式"> 组件样式 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/elements" title="把组件转换成自定义元素。"> Angular 自定义元素 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dynamic-component-loader" title="动态加载组件"> 动态组件 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/attribute-directives" title="属性型指令把行为添加到现有元素上。"> 属性型指令 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/structural-directives" title="结构型指令可以操纵页面的布局"> 结构型指令 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/pipes" title="管道可以在模板中转换显示的内容。"> 管道 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/animations" title="Angular 动画体系指南"> 动画 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Angular 的表单" aria-pressed="false"> 表单 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/user-input" title="用户输入触发 DOM 事件。我们通过事件绑定来监听它们，把更新过的数据导入回我们的组件和 model。"> 用户输入 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/forms" title="表单可以创建集中、高效、引人注目的输入体验。Angular 表单可以协调一组数据绑定控件，跟踪变更，验证输入，并表达错误信息。"> 模板驱动表单 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/form-validation" title="验证用户的表单输入"> 表单验证 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/reactive-forms" title="使用 FormBuilder 、分组和数组创建响应式表单。"> 响应式表单 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dynamic-form" title="使用FormGroup渲染动态表单"> 动态表单 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Observable 与 RxJS" aria-pressed="false"> Observable 与 RxJS <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/observables" title=""> 可观察对象(Observable) </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/rx-library" title=""> RxJS 库 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/observables-in-angular" title=""> Angular 中的可观察对象 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/practical-observable-usage" title=""> 用法实战 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/comparing-observables" title=""> 与其它技术的比较 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/bootstrapping" title="在应用的根模块（AppModule）中告诉 Angular 如何构造并引导引用。"> 引导启动 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 expanded selected" type="button" title="Angular 中的模块" aria-pressed="true"> Angular 模块 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 expanded selected"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/ngmodules" title="使用 NgModule 让你的应用更高效"> NgModule 简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/ngmodule-vs-jsmodule" title="JavaScript 模块和 NgModule 之间的差异"> JS 模块 vs NgModule </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/frequent-ngmodules" title="介绍最常用的 Angular 模块"> 常用模块 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/module-types" title="介绍特性模块的几种类型"> 特性模块的分类 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/entry-components" title="关于 Angular 中入口组件的一切"> 入口组件 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/feature-modules" title="创建特性模块，以组织你的代码"> 特性模块 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/providers" title="服务提供商与 Angular 模块"> 服务提供商 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/singleton-services" title="创建单例应用"> 单例应用 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/lazy-loading-ngmodules" title="惰性加载模块，以提高应用的性能"> 惰性加载的特性模块 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded selected" href="https://angular.cn/guide/sharing-ngmodules" title="共享 Angular 模块让你的应用现代化。"> 共享 Angular 模块 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ngmodule-api" title="理解 NgModule 的那些细节。"> NgModule API </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ngmodule-faq" title="回答关于 NgModules 的常见问题。"> NgModule 常见问题 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="依赖注入：创建并注入各种服务。" aria-pressed="false"> 依赖注入 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dependency-injection-pattern" title="学习 Angular 依赖注入系统背后的依赖注入模式"> 依赖注入模式 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dependency-injection" title="Angular 的依赖注入系统能够为 Angular 创建的类创建并交付它们所依赖的服务。"> Angular 依赖注入 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/hierarchical-dependency-injection" title="Angular 的多级注入体系会建立与组件平行的注入器树。"> 多级注入器 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dependency-injection-in-action" title="依赖注入的使用技巧"> DI 实用技巧 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/http" title="通过 HTTP 协议与远程服务器对话。"> HttpClient </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/router" title="揭示如何通过 Angular 路由进行基本的屏幕导航。"> 路由与导航 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/testing" title="测试 Angular 应用的技巧与实践。"> 测试 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/cheatsheet" title="关于 Angular 常用编码技术的快速指南。"> 速查表 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-1 collapsed" type="button" title="把 Angular 用到你的实际工作中的一些技巧" aria-pressed="false"> 其它技术 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-1 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/i18n" title="把应用模板中的文本翻译成多种语言。"> 国际化 (i18n) </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/language-service" title="使用 Angular 语言服务来为开发提速。"> 语言服务 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/security" title="Angular 应用开发中的安全技术。"> 安全 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="环境准备与部署" aria-pressed="false"> 环境准备与部署 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/setup" title="在你自己的机器上安装 Angular QuickStart 种子，以便更快、更高效的开发。"> 搭建本地开发环境 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/setup-systemjs-anatomy" title="基于 SystemJS 的本地开发环境内幕。"> 搭建方式剖析 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/browser-support" title="浏览器支持与 Polyfills 指南"> 浏览器支持 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/npm-packages" title="建议的 npm 包，以及如何指定包的依赖。"> npm 包 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/typescript-configuration" title="给 Angular 开发者的 TypeScript 配置。"> TypeScript 配置 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/aot-compiler" title="学习如何使用 AOT 预编译器。"> 预先（AOT）编译 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/deployment" title="学习如何部署你的 Angular 应用。"> 部署 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/custom-elements" title="把 Angular 组件用作自定义元素。"> 自定义元素 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Angular 的 Service Worker：控制应用的资源缓存。" aria-pressed="false"> Service Worker <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-intro" title="Angular 对 Service Worker 的实现提升了慢速或不稳定的网络连接下的用户体验。"> 简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-getting-started" title="在 CLI 项目中启用 Service Worker，并在浏览器中查看效果。"> 快速起步 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-communications" title="那些能让你和 Angular 的 Service Worker 通讯的服务类。"> 与 Service Worker 通讯 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-devops" title="使用 Service Worker 运行应用、管理应用更新、调试以及杀掉正在运行的应用。"> 生产环境下的 Service Worker </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-config" title="配置 Service Worker 的缓存行为。"> Service Worker 配置 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Angular 的发布实践，更新计划以及与更新有关的资源。" aria-pressed="false"> 保持最新 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/updating" title="关于如何把 Angular 应用升级到最新版的信息。"> 更新你的项目 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/releases" title="Angular 的版本、发布、支持与弃用策略。"> Angular 的版本发布 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="把 AngularJS 应用增量式的升级到 Angular。" aria-pressed="false"> 从 AngularJS 升级 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/upgrade" title="把 AngularJS 应用增量式的升级到 Angular。"> 升级步骤 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ajs-quick-reference" title="学习如何把 AngularJS 的概念映射到 Angular 中。"> AngularJS 与 Angular 的概念对照 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/universal" title="使用 Angular Universal 在服务端渲染 HTML。">  服务端渲染 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/visual-studio-2015" title="在 Visual Studio 2015 中使用快速起步中的文件"> Visual Studio 2015 快速上手 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/styleguide" title="写出 Angular 风格的程序"> 风格指南 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/glossary" title="Angular 中最重要的词汇的简要定义。"> 词汇表 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-1 collapsed" href="https://angular.cn/api" title="关于 Angular 中类和值的详细信息。"> API 参考手册 </a></div><!----></aio-nav-item></aio-nav-menu><div class="doc-version"><aio-select><div class="form-select-menu"><button class="form-select-button"><strong></strong><!---->stable (v6.0.0) </button><!----></div></aio-select></div></mat-sidenav><div tabindex="-1" class="cdk-visually-hidden cdk-focus-trap-anchor"></div><!----><mat-sidenav-content cdkscrollable="" class="mat-drawer-content mat-sidenav-content ng-star-inserted" style="margin-left: 262px; margin-right: 0px;"><section class="sidenav-content" role="content" id="guide-lazy-loading-ngmodules"><aio-mode-banner><!----></aio-mode-banner><aio-doc-viewer class=""><div style="opacity: 1; transition: all 200ms ease-in-out;">
<div class="content">
<h1 translation-result="" id="lazy-loading-feature-modules">惰性加载的特性模块<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/lazy-loading-ngmodules#lazy-loading-feature-modules"><i class="material-icons">link</i></a></h1><aio-toc class="embedded"></aio-toc><h1 translation-origin="off" id="lazy-loading-feature-modules">Lazy Loading Feature Modules<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/lazy-loading-ngmodules#lazy-loading-feature-modules"><i class="material-icons">link</i></a></h1>

<h4 translation-result="" id="prerequisites-4">前提条件<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/lazy-loading-ngmodules#prerequisites-4"><i class="material-icons">link</i></a></h4><h4 translation-origin="off" id="prerequisites">Prerequisites<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/lazy-loading-ngmodules#prerequisites"><i class="material-icons">link</i></a></h4>

<p translation-result="">对下列知识有基本的了解：</p><p translation-origin="off">A basic understanding of the following:</p>

<ul>
<li>
<p translation-result=""> <a href="https://angular.cn/guide/feature-modules">特性模块</a></p><p translation-origin="off"><a href="https://angular.cn/guide/feature-modules">Feature Modules</a>.</p>

</li>
<li>
<p translation-result=""> <a href="https://angular.cn/guide/ngmodule-vs-jsmodule">JavaScript 模块与 NgModules</a>。</p><p translation-origin="off"><a href="https://angular.cn/guide/ngmodule-vs-jsmodule">JavaScript Modules vs. NgModules</a>.</p>

</li>
<li>
<p translation-result=""> <a href="https://angular.cn/guide/frequent-ngmodules">常用模块</a>。</p><p translation-origin="off"><a href="https://angular.cn/guide/frequent-ngmodules">Frequently Used Modules</a>.</p>

</li>
<li>
<p translation-result=""> <a href="https://angular.cn/guide/module-types">特性模块的分类</a>。</p><p translation-origin="off"><a href="https://angular.cn/guide/module-types">Types of Feature Modules</a>.</p>

</li>
<li>
<p translation-result=""> <a href="https://angular.cn/guide/router">路由与导航</a>。</p><p translation-origin="off"><a href="https://angular.cn/guide/router">Routing and Navigation</a>.</p>

</li>
</ul>
<p translation-result="">如果需要本页描述的具有两个惰性加载模块的范例应用，参见<live-example ng-version="6.0.0"><span><!----><!----><!----><!----><span class="ng-star-inserted"><a target="_blank" href="https://angular.cn/generated/live-examples/lazy-loading-ngmodules/stackblitz.html" title="在线例子">在线例子</a><!----><span class="ng-star-inserted"> / <a download="" title="下载范例" href="https://angular.cn/generated/zips/lazy-loading-ngmodules/lazy-loading-ngmodules.zip">下载范例</a></span></span></span></live-example>。</p><p translation-origin="off">For the final sample app with two lazy loaded modules that this page describes, see the
<live-example ng-version="6.0.0"><span><!----><!----><!----><!----><span class="ng-star-inserted"><a target="_blank" href="https://angular.cn/generated/live-examples/lazy-loading-ngmodules/stackblitz.html" title="在线例子">在线例子</a><!----><span class="ng-star-inserted"> / <a download="" title="下载范例" href="https://angular.cn/generated/zips/lazy-loading-ngmodules/lazy-loading-ngmodules.zip">下载范例</a></span></span></span></live-example>.</p>

<hr>
<h2 translation-result="" id="high-level-view">高层视角<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/lazy-loading-ngmodules#high-level-view"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="high-level-view">High level view<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/lazy-loading-ngmodules#high-level-view"><i class="material-icons">link</i></a></h2>

<p translation-result="">要想建立一个惰性加载的特性模块，有三个主要步骤：</p><p translation-origin="off">There are three main steps to setting up a lazy loaded feature module:</p>

<ol>
<li>
<p translation-result="">创建该特性模块。</p><p translation-origin="off">Create the feature module.</p>

</li>
<li>
<p translation-result="">创建该特性模块的路由模块。</p><p translation-origin="off">Create the feature module’s routing module.</p>

</li>
<li>
<p translation-result="">配置相关路由。</p><p translation-origin="off">Configure the routes.</p>

</li>
</ol>
<h2 translation-result="" id="set-up-an-app">建立应用<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/lazy-loading-ngmodules#set-up-an-app"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="set-up-an-app">Set up an app<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/lazy-loading-ngmodules#set-up-an-app"><i class="material-icons">link</i></a></h2>

<p translation-result="">如果你还没有应用，可以遵循下面的步骤使用 CLI 创建一个。如果已经有了，可以直接跳到 <a href="https://angular.cn/guide/lazy-loading-ngmodules#config-routes">配置路由</a>部分。
输入下列命令，其中的 <code>customer-app</code> 表示你的应用名称：</p><p translation-origin="off">If you don’t already have an app, you can follow the steps below to
create one with the CLI. If you do already have an app, skip to
<a href="https://angular.cn/guide/lazy-loading-ngmodules#config-routes">Configure the routes</a>. Enter the following command
where <code>customer-app</code> is the name of your app:</p>

<code-example language="sh" ng-version="6.0.0"><div style="display: none">
ng new customer-app --routing
</div><!----><aio-code><pre class="prettyprint lang-sh">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="pln">ng new customer</span><span class="pun">-</span><span class="pln">app </span><span class="pun">--</span><span class="pln">routing</span></code>
    </pre></aio-code></code-example>
<p translation-result="">这会创建一个名叫 <code>customer-app</code> 的应用，而 <code>--routing</code> 标识生成了一个名叫 <code>app-routing.module.ts</code> 的文件，它是你建立惰性加载的特性模块时所必须的。
输入命令 <code>cd customer-app</code> 进入该项目。</p><p translation-origin="off">This creates an app called <code>customer-app</code> and the <code>--routing</code> flag
generates a file called <code>app-routing.module.ts</code>, which is one of
the files you need for setting up lazy loading for your feature module.
Navigate into the project by issuing the command <code>cd customer-app</code>.</p>

<h2 translation-result="" id="create-a-feature-module-with-routing">创建一个带路由的特性模块<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/lazy-loading-ngmodules#create-a-feature-module-with-routing"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="create-a-feature-module-with-routing">Create a feature module with routing<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/lazy-loading-ngmodules#create-a-feature-module-with-routing"><i class="material-icons">link</i></a></h2>

<p translation-result="">接下来，你需要一个要路由到的特性模块。要生成一个，请输入下列命令，其中的 <code>customers</code> 是该模块的名字：</p><p translation-origin="off">Next, you’ll need a feature module to route to. To make one, enter
the following command at the terminal window prompt where <code>customers</code> is the name of the module:</p>

<code-example language="sh" ng-version="6.0.0"><div style="display: none">
ng generate module customers --routing
</div><!----><aio-code><pre class="prettyprint lang-sh">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="pln">ng generate module customers </span><span class="pun">--</span><span class="pln">routing</span></code>
    </pre></aio-code></code-example>
<p translation-result="">这会创建一个 <code>customers</code> 目录，其中有两个文件：<code>CustomersModule</code> 和 <code>CustomersRoutingModule</code>。
<code>CustomersModule</code> 扮演的是与客户紧密相关的所有事物的管理员。<code>CustomersRoutingModule</code> 则会处理任何与客户有关的路由。
这样就可以在应用不断成长时保持应用的良好结构，并且当复用本模块时，你可以轻松的让其路由保持完好。</p><p translation-origin="off">This creates a customers folder with two files inside; <code>CustomersModule</code>
and <code>CustomersRoutingModule</code>. <code>CustomersModule</code> will act as the gatekeeper
for anything that concerns customers. <code>CustomersRoutingModule</code> will handle
any customer-related routing. This keeps the app’s structure organized as
the app grows and allows you to reuse this module while easily keeping its routing intact.</p>

<p translation-result="">CLI 会把 <code>CustomersRoutingModule</code> 自动导入到 <code>CustomersModule</code>。它会在文件的顶部添加一条 JavaScript 的 <code>import</code> 语句，并把 <code>CustomersRoutingModule</code> 添加到 <code>@<a href="https://angular.cn/api/core/NgModule" class="code-anchor">NgModule</a></code> 的 <code>imports</code> 数组中。</p><p translation-origin="off">The CLI imports the <code>CustomersRoutingModule</code> into the <code>CustomersModule</code> by
adding a JavaScript import statement at the top of the file and adding
<code>CustomersRoutingModule</code> to the <code>@<a href="https://angular.cn/api/core/NgModule" class="code-anchor">NgModule</a></code> <code>imports</code> array.</p>

<h2 translation-result="" id="add-a-component-to-the-feature-module">向特性模块中添加组件<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/lazy-loading-ngmodules#add-a-component-to-the-feature-module"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="add-a-component-to-the-feature-module">Add a component to the feature module<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/lazy-loading-ngmodules#add-a-component-to-the-feature-module"><i class="material-icons">link</i></a></h2>

<p translation-result="">要想在浏览器中看出该模块惰性加载成功了，就创建一个组件用来在应用加载 <code>CustomersModule</code> 之后渲染出一些 HTML。在命令行中输入如下命令：</p><p translation-origin="off">In order to see the module being lazy loaded in the browser, create a component to render some HTML when the app loads <code>CustomersModule</code>. At the command line, enter the following:</p>

<code-example language="sh" ng-version="6.0.0"><div style="display: none">
ng generate component customers/customer-list
</div><!----><aio-code><pre class="prettyprint lang-sh">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="pln">ng generate component customers</span><span class="pun">/</span><span class="pln">customer</span><span class="pun">-</span><span class="pln">list</span></code>
    </pre></aio-code></code-example>
<p translation-result="">这会在 <code>customers</code> 目录中创建一个名叫 <code>customer-list</code> 的文件夹，其中包含该组件的四个文件。</p><p translation-origin="off">This creates a folder inside of <code>customers</code> called <code>customer-list</code>
with the four files that make up the component.</p>

<!-- For more information
about components, see [Components](). -->
<p translation-result="">就像路由模块一样，CLI 也自动把 <code>CustomerListComponent</code> 导入了 <code>CustomersModule</code>。</p><p translation-origin="off">Just like with the routing module, the CLI imports the
<code>CustomerListComponent</code> into the <code>CustomersModule</code>.</p>

<h2 translation-result="" id="add-another-feature-module">再添加一个特性模块<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/lazy-loading-ngmodules#add-another-feature-module"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="add-another-feature-module">Add another feature module<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/lazy-loading-ngmodules#add-another-feature-module"><i class="material-icons">link</i></a></h2>

<p translation-result="">为了提供另一个可路由到的地点，再创建第二个带路由的特性模块：</p><p translation-origin="off">For another place to route to, create a second feature module with routing:</p>

<code-example language="sh" ng-version="6.0.0"><div style="display: none">
ng generate module orders --routing
</div><!----><aio-code><pre class="prettyprint lang-sh">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="pln">ng generate module orders </span><span class="pun">--</span><span class="pln">routing</span></code>
    </pre></aio-code></code-example>
<p translation-result="">这会创建一个名叫 <code>orders</code> 的新文件夹，其中包含 <code>OrdersModule</code> 和 <code>OrdersRoutingModule</code>。</p><p translation-origin="off">This makes a new folder called <code>orders</code> containing an <code>OrdersModule</code> and an <code>OrdersRoutingModule</code>.</p>

<p translation-result="">现在，像 <code>CustomersModule</code> 一样，给它添加一些内容：</p><p translation-origin="off">Now, just like with the <code>CustomersModule</code>, give it some content:</p>

<code-example language="sh" ng-version="6.0.0"><div style="display: none">
ng generate component orders/order-list
</div><!----><aio-code><pre class="prettyprint lang-sh">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="pln">ng generate component orders</span><span class="pun">/</span><span class="pln">order</span><span class="pun">-</span><span class="pln">list</span></code>
    </pre></aio-code></code-example>
<h2 translation-result="" id="set-up-the-ui">建立 UI<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/lazy-loading-ngmodules#set-up-the-ui"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="set-up-the-ui">Set up the UI<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/lazy-loading-ngmodules#set-up-the-ui"><i class="material-icons">link</i></a></h2>

<p translation-result="">虽然你也可以在地址栏中输入 URL，不过导航菜单会更好用，而且更常见。
把 <code>app.component.html</code> 中的占位脚本替换成一个自定义的导航，以便你在浏览器中能轻松地在模块之间导航。</p><p translation-origin="off">Though you can type the URL into the address bar, a nav
is easier for the user and more common. Replace the default
placeholder markup in <code>app.component.html</code> with a custom nav
so you can easily navigate to your modules in the browser:</p>

<code-example path="lazy-loading-ngmodules/src/app/app.component.html" region="app-component-template" title="src/app/app.component.html" linenums="false" ng-version="6.0.0"><div style="display: none">
&lt;h1&gt;
  {{title}}
&lt;/h1&gt;

&lt;button <a href="https://angular.cn/api/router/RouterLink" class="code-anchor">routerLink</a>="/customers"&gt;Customers&lt;/button&gt;
&lt;button <a href="https://angular.cn/api/router/RouterLink" class="code-anchor">routerLink</a>="/orders"&gt;Orders&lt;/button&gt;
&lt;button <a href="https://angular.cn/api/router/RouterLink" class="code-anchor">routerLink</a>=""&gt;Home&lt;/button&gt;

&lt;<a href="https://angular.cn/api/router/RouterOutlet" class="code-anchor">router-outlet</a>&gt;&lt;/<a href="https://angular.cn/api/router/RouterOutlet" class="code-anchor">router-outlet</a>&gt;


</div><!----><header class="ng-star-inserted">src/app/app.component.html</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/app.component.html">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="tag">&lt;h1&gt;</span><span class="pln">
  {{title}}
</span><span class="tag">&lt;/h1&gt;</span><span class="pln">

</span><span class="tag">&lt;button</span><span class="pln"> </span><a href="https://angular.cn/api/router/RouterLink" class="code-anchor"><span class="atn">routerLink</span></a><span class="pun">=</span><span class="atv">"/customers"</span><span class="tag">&gt;</span><span class="pln">Customers</span><span class="tag">&lt;/button&gt;</span><span class="pln">
</span><span class="tag">&lt;button</span><span class="pln"> </span><a href="https://angular.cn/api/router/RouterLink" class="code-anchor"><span class="atn">routerLink</span></a><span class="pun">=</span><span class="atv">"/orders"</span><span class="tag">&gt;</span><span class="pln">Orders</span><span class="tag">&lt;/button&gt;</span><span class="pln">
</span><span class="tag">&lt;button</span><span class="pln"> </span><a href="https://angular.cn/api/router/RouterLink" class="code-anchor"><span class="atn">routerLink</span></a><span class="pun">=</span><span class="atv">""</span><span class="tag">&gt;</span><span class="pln">Home</span><span class="tag">&lt;/button&gt;</span><span class="pln">

</span><span class="tag">&lt;</span><a href="https://angular.cn/api/router/RouterOutlet" class="code-anchor"><span class="tag">router-outlet</span></a><span class="tag">&gt;&lt;/</span><a href="https://angular.cn/api/router/RouterOutlet" class="code-anchor"><span class="tag">router-outlet</span></a><span class="tag">&gt;</span></code>
    </pre></aio-code></code-example>
<p translation-result="">要想在浏览器中看到你的应用，就在终端窗口中输入下列命令：</p><p translation-origin="off">To see your app in the browser so far, enter the following command in the terminal window:</p>

<code-example language="sh" ng-version="6.0.0"><div style="display: none">
ng serve
</div><!----><aio-code><pre class="prettyprint lang-sh">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="pln">ng serve</span></code>
    </pre></aio-code></code-example>
<p translation-result="">然后，跳转到 <code>localhost:4200</code>，这时你应该看到 “app works!” 和三个按钮。</p><p translation-origin="off">Then go to <code>localhost:4200</code> where you should see “app works!” and three buttons.</p>

<figure>
 <img src="./Angular - 惰性加载的特性模块_files/three-buttons.png" width="300" alt="three buttons in the browser">
</figure>
<p translation-result="">要想让这些按钮生效，你需要配置一下这些路由模块。</p><p translation-origin="off">To make the buttons work, you need to configure the routing modules.</p>

<a id="config-routes"></a>
<h2 translation-result="" id="configure-the-routes">配置路由<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/lazy-loading-ngmodules#configure-the-routes"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="configure-the-routes">Configure the routes<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/lazy-loading-ngmodules#configure-the-routes"><i class="material-icons">link</i></a></h2>

<p translation-result="">这两个特性模块（<code>OrdersModule</code> 和 <code>CustomersModule</code>）应该挂接到 <code>AppRoutingModule</code> 中，来让路由器知道它们。其结构如下：</p><p translation-origin="off">The two feature modules, <code>OrdersModule</code> and <code>CustomersModule</code>, have to be
wired up to the <code>AppRoutingModule</code> so the router knows about them. The structure is as follows:</p>

<figure>
 <img src="./Angular - 惰性加载的特性模块_files/lazy-load-relationship.jpg" width="400" alt="lazy loaded modules diagram">
</figure>
<p translation-result="">每个特性模块都是路由器中的一个“门口”。在 <code>AppRoutingModule</code> 中，你配置了一些路由指向这些特性模块（即 <code>OrderModule</code> 和 <code>CustomersModule</code>）。
通过这种方式，路由器就知道了如何跳转到特性模块。然后，特性模块就把 <code>AppRoutingModule</code> 和 <code>CustomersRoutingModule</code> 或 <code>OrdersRoutingModule</code> 连接到一起。这些路由模块会告诉路由器该到哪里去加载相应的组件。</p><p translation-origin="off">Each feature module acts as a doorway via the router. In the <code>AppRoutingModule</code>, you configure the routes to the feature modules, in this case <code>OrdersModule</code> and <code>CustomersModule</code>. This way, the router knows to go to the feature module. The feature module then connects the <code>AppRoutingModule</code> to the <code>CustomersRoutingModule</code> or the <code>OrdersRoutingModule</code>. Those routing modules tell the router where to go to load relevant components.</p>

<h3 translation-result="" id="routes-at-the-app-level">顶层的路由<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/lazy-loading-ngmodules#routes-at-the-app-level"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="routes-at-the-app-level">Routes at the app level<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/lazy-loading-ngmodules#routes-at-the-app-level"><i class="material-icons">link</i></a></h3>

<p translation-result="">在 <code>AppRoutingModule</code> 中，把 <code>routes</code> 数组修改成这样：</p><p translation-origin="off">In <code>AppRoutingModule</code>, update the <code>routes</code> array with the following:</p>

<code-example path="lazy-loading-ngmodules/src/app/app-routing.module.ts" region="const-routes" title="src/app/app-routing.module.ts" linenums="false" ng-version="6.0.0"><div style="display: none">
const routes: <a href="https://angular.cn/api/router/Routes" class="code-anchor">Routes</a> = [
  {
    path: 'customers',
    loadChildren: 'app/customers/customers.module#CustomersModule'
  },
  {
    path: 'orders',
    loadChildren: 'app/orders/orders.module#OrdersModule'
  },
  {
    path: '',
    redirectTo: '',
    pathMatch: 'full'
  }
];

</div><!----><header class="ng-star-inserted">src/app/app-routing.module.ts</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/app-routing.module.ts">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="kwd">const</span><span class="pln"> routes</span><span class="pun">:</span><span class="pln"> </span><a href="https://angular.cn/api/router/Routes" class="code-anchor"><span class="typ">Routes</span></a><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
  </span><span class="pun">{</span><span class="pln">
    path</span><span class="pun">:</span><span class="pln"> </span><span class="str">'customers'</span><span class="pun">,</span><span class="pln">
    loadChildren</span><span class="pun">:</span><span class="pln"> </span><span class="str">'app/customers/customers.module#CustomersModule'</span><span class="pln">
  </span><span class="pun">},</span><span class="pln">
  </span><span class="pun">{</span><span class="pln">
    path</span><span class="pun">:</span><span class="pln"> </span><span class="str">'orders'</span><span class="pun">,</span><span class="pln">
    loadChildren</span><span class="pun">:</span><span class="pln"> </span><span class="str">'app/orders/orders.module#OrdersModule'</span><span class="pln">
  </span><span class="pun">},</span><span class="pln">
  </span><span class="pun">{</span><span class="pln">
    path</span><span class="pun">:</span><span class="pln"> </span><span class="str">''</span><span class="pun">,</span><span class="pln">
    redirectTo</span><span class="pun">:</span><span class="pln"> </span><span class="str">''</span><span class="pun">,</span><span class="pln">
    pathMatch</span><span class="pun">:</span><span class="pln"> </span><span class="str">'full'</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
</span><span class="pun">];</span></code>
    </pre></aio-code></code-example>
<p translation-result="">这些 <code>import</code> 语句没有变化。前两个路径分别路由到了 <code>CustomersModule</code> 和 <code>OrdersModule</code>。注意看惰性加载的语法：<code>loadChildren</code> 后面紧跟着一个字符串，它指向模块路径，然后是一个 <code>#</code>，然后是该模块的类名。</p><p translation-origin="off">The import statements stay the same. The first two paths are the routes to the <code>CustomersModule</code> and the <code>OrdersModule</code> respectively. Notice that the lazy loading syntax uses <code>loadChildren</code> followed by a string that is the path to the module, a hash mark or <code>#</code>, and the module’s class name.</p>

<h3 translation-result="" id="inside-the-feature-module">特性模块内部<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/lazy-loading-ngmodules#inside-the-feature-module"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="inside-the-feature-module">Inside the feature module<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/lazy-loading-ngmodules#inside-the-feature-module"><i class="material-icons">link</i></a></h3>

<p translation-result="">接下来看看 <code>customers.module.ts</code>。如果你使用的是 CLI，并遵循本页面中给出的步骤，那么在这里你不必做任何事。
特性模块就像是 <code>AppRoutingModule</code> 和该特性自己的路由模块之间的连接器。
<code>AppRoutingModule</code> 导入了特性模块 <code>CustomersModule</code>，而 <code>CustomersModule</code> 又导入了 <code>CustomersRoutingModule</code>。</p><p translation-origin="off">Next, take a look at <code>customers.module.ts</code>. If you’re using the CLI and following the steps outlined in this page, you don’t have to do anything here. The feature module is like a connector between the <code>AppRoutingModule</code> and the feature routing module. The <code>AppRoutingModule</code> imports the feature module, <code>CustomersModule</code>, and <code>CustomersModule</code> in turn imports the <code>CustomersRoutingModule</code>.</p>

<code-example path="lazy-loading-ngmodules/src/app/customers/customers.module.ts" region="customers-module" title="src/app/customers/customers.module.ts" linenums="false" ng-version="6.0.0"><div style="display: none">
import { <a href="https://angular.cn/api/core/NgModule" class="code-anchor">NgModule</a> } from '@angular/core';
import { <a href="https://angular.cn/api/common/CommonModule" class="code-anchor">CommonModule</a> } from '@angular/common';
import { CustomersRoutingModule } from './customers-routing.module';
import { CustomerListComponent } from './customer-list/customer-list.component';

@<a href="https://angular.cn/api/core/NgModule" class="code-anchor">NgModule</a>({
  imports: [
    <a href="https://angular.cn/api/common/CommonModule" class="code-anchor">CommonModule</a>,
    CustomersRoutingModule
  ],
  declarations: [CustomerListComponent]
})
export class CustomersModule { }

</div><!----><header class="ng-star-inserted">src/app/customers/customers.module.ts</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/customers/customers.module.ts">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><a href="https://angular.cn/api/core/NgModule" class="code-anchor"><span class="typ">NgModule</span></a><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'@angular/core'</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><a href="https://angular.cn/api/common/CommonModule" class="code-anchor"><span class="typ">CommonModule</span></a><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'@angular/common'</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="typ">CustomersRoutingModule</span><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'./customers-routing.module'</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="typ">CustomerListComponent</span><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'./customer-list/customer-list.component'</span><span class="pun">;</span><span class="pln">

</span><span class="lit">@</span><a href="https://angular.cn/api/core/NgModule" class="code-anchor"><span class="lit">NgModule</span></a><span class="pun">({</span><span class="pln">
  imports</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
    </span><a href="https://angular.cn/api/common/CommonModule" class="code-anchor"><span class="typ">CommonModule</span></a><span class="pun">,</span><span class="pln">
    </span><span class="typ">CustomersRoutingModule</span><span class="pln">
  </span><span class="pun">],</span><span class="pln">
  declarations</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="typ">CustomerListComponent</span><span class="pun">]</span><span class="pln">
</span><span class="pun">})</span><span class="pln">
</span><span class="kwd">export</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">CustomersModule</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="pun">}</span></code>
    </pre></aio-code></code-example>
<p translation-result=""><code>customers.module.ts</code> 文件导入了 <code>CustomersRoutingModule</code> 和 <code>CustomerListComponent</code>，所以 <code>CustomersModule</code> 类可以访问它们。
接着 <code>CustomersRoutingModule</code> 出现在了 <code>@<a href="https://angular.cn/api/core/NgModule" class="code-anchor">NgModule</a></code> 的 <code>imports</code> 数组中，这让 <code>CustomersModule</code> 可以访问它的路由模块。而 <code>CustomerListComponent</code> 出现在了 <code>declarations</code> 数组中，这表示 <code>CustomerListComponent</code> 属于 <code>CustomersModule</code>。</p><p translation-origin="off">The <code>customers.module.ts</code> file imports the <code>CustomersRoutingModule</code> and <code>CustomerListComponent</code> so the <code>CustomersModule</code> class can have access to them. <code>CustomersRoutingModule</code> is then listed in the <code>@<a href="https://angular.cn/api/core/NgModule" class="code-anchor">NgModule</a></code> <code>imports</code> array giving <code>CustomersModule</code> access to its own routing module, and <code>CustomerListComponent</code> is in the <code>declarations</code> array, which means <code>CustomerListComponent</code> belongs to the <code>CustomersModule</code>.</p>

<h3 translation-result="" id="configure-the-feature-modules-routes">配置该特性模块的路由<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/lazy-loading-ngmodules#configure-the-feature-modules-routes"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="configure-the-feature-modules-routes">Configure the feature module’s routes<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/lazy-loading-ngmodules#configure-the-feature-modules-routes"><i class="material-icons">link</i></a></h3>

<p translation-result="">接下来的步骤位于 <code>customers-routing.module.ts</code> 中。首先，在文件的顶部使用 JS 的 <code>import</code> 语句导入该组件。然后添加指向 <code>CustomerListComponent</code> 的路由。</p><p translation-origin="off">The next step is in <code>customers-routing.module.ts</code>. First, import the component at the top of the file with the other JavaScript import statements. Then, add the route to <code>CustomerListComponent</code>.</p>

<code-example path="lazy-loading-ngmodules/src/app/customers/customers-routing.module.ts" region="customers-routing-module" title="src/app/customers/customers-routing.module.ts" linenums="false" ng-version="6.0.0"><div style="display: none">
import { <a href="https://angular.cn/api/core/NgModule" class="code-anchor">NgModule</a> } from '@angular/core';
import { <a href="https://angular.cn/api/router/Routes" class="code-anchor">Routes</a>, <a href="https://angular.cn/api/router/RouterModule" class="code-anchor">RouterModule</a> } from '@angular/router';

import { CustomerListComponent } from './customer-list/customer-list.component';


const routes: <a href="https://angular.cn/api/router/Routes" class="code-anchor">Routes</a> = [
  {
    path: '',
    component: CustomerListComponent
  }
];

@<a href="https://angular.cn/api/core/NgModule" class="code-anchor">NgModule</a>({
  imports: [RouterModule.forChild(routes)],
  exports: [<a href="https://angular.cn/api/router/RouterModule" class="code-anchor">RouterModule</a>]
})
export class CustomersRoutingModule { }

</div><!----><header class="ng-star-inserted">src/app/customers/customers-routing.module.ts</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/customers/customers-routing.module.ts">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><a href="https://angular.cn/api/core/NgModule" class="code-anchor"><span class="typ">NgModule</span></a><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'@angular/core'</span><span class="pun">;</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><a href="https://angular.cn/api/router/Routes" class="code-anchor"><span class="typ">Routes</span></a><span class="pun">,</span><span class="pln"> </span><a href="https://angular.cn/api/router/RouterModule" class="code-anchor"><span class="typ">RouterModule</span></a><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'@angular/router'</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="typ">CustomerListComponent</span><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'./customer-list/customer-list.component'</span><span class="pun">;</span><span class="pln">


</span><span class="kwd">const</span><span class="pln"> routes</span><span class="pun">:</span><span class="pln"> </span><a href="https://angular.cn/api/router/Routes" class="code-anchor"><span class="typ">Routes</span></a><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
  </span><span class="pun">{</span><span class="pln">
    path</span><span class="pun">:</span><span class="pln"> </span><span class="str">''</span><span class="pun">,</span><span class="pln">
    component</span><span class="pun">:</span><span class="pln"> </span><span class="typ">CustomerListComponent</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
</span><span class="pun">];</span><span class="pln">

</span><span class="lit">@</span><a href="https://angular.cn/api/core/NgModule" class="code-anchor"><span class="lit">NgModule</span></a><span class="pun">({</span><span class="pln">
  imports</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="typ">RouterModule</span><span class="pun">.</span><span class="pln">forChild</span><span class="pun">(</span><span class="pln">routes</span><span class="pun">)],</span><span class="pln">
  exports</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><a href="https://angular.cn/api/router/RouterModule" class="code-anchor"><span class="typ">RouterModule</span></a><span class="pun">]</span><span class="pln">
</span><span class="pun">})</span><span class="pln">
</span><span class="kwd">export</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">CustomersRoutingModule</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="pun">}</span></code>
    </pre></aio-code></code-example>
<p translation-result="">注意，<code>path</code> 被设置成了空字符串。这是因为 <code>AppRoutingModule</code> 中的路径已经设置为了 <code>customers</code>，所以 <code>CustomersRoutingModule</code> 中的这个路由定义已经位于 <code>customers</code> 这个上下文中了。也就是说这个路由模块中的每个路由其实都是子路由。</p><p translation-origin="off">Notice that the <code>path</code> is set to an empty string. This is because the path in <code>AppRoutingModule</code> is already set to <code>customers</code>, so this route in the <code>CustomersRoutingModule</code>, is already within the <code>customers</code> context. Every route in this routing module is a child route.</p>

<p translation-result="">重复这个步骤以导入 <code>OrdersListComponent</code>，并为 <code>orders-routing.module.ts</code> 配置路由树组：</p><p translation-origin="off">Repeat this last step of importing the <code>OrdersListComponent</code> and configuring the Routes array for the <code>orders-routing.module.ts</code>:</p>

<code-example path="lazy-loading-ngmodules/src/app/orders/orders-routing.module.ts" region="orders-routing-module-detail" title="src/app/orders/orders-routing.module.ts (excerpt)" linenums="false" ng-version="6.0.0"><div style="display: none">
import { OrderListComponent } from './order-list/order-list.component';

const routes: <a href="https://angular.cn/api/router/Routes" class="code-anchor">Routes</a> = [
  {
    path: '',
    component: OrderListComponent
  }
];

</div><!----><header class="ng-star-inserted">src/app/orders/orders-routing.module.ts (excerpt)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/orders/orders-routing.module.ts (excerpt)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="typ">OrderListComponent</span><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'./order-list/order-list.component'</span><span class="pun">;</span><span class="pln">

</span><span class="kwd">const</span><span class="pln"> routes</span><span class="pun">:</span><span class="pln"> </span><a href="https://angular.cn/api/router/Routes" class="code-anchor"><span class="typ">Routes</span></a><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[</span><span class="pln">
  </span><span class="pun">{</span><span class="pln">
    path</span><span class="pun">:</span><span class="pln"> </span><span class="str">''</span><span class="pun">,</span><span class="pln">
    component</span><span class="pun">:</span><span class="pln"> </span><span class="typ">OrderListComponent</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
</span><span class="pun">];</span></code>
    </pre></aio-code></code-example>
<p translation-result="">现在，如果你在浏览器中查看该应用，这三个按钮会把你带到每个模块去。</p><p translation-origin="off">Now, if you view the app in the browser, the three buttons take you to each module.</p>

<h2 translation-result="" id="confirm-its-working">确认它工作正常<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/lazy-loading-ngmodules#confirm-its-working"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="confirm-its-working">Confirm it’s working<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/lazy-loading-ngmodules#confirm-its-working"><i class="material-icons">link</i></a></h2>

<p translation-result="">你可以使用 Chrome 开发者工具来确认一下这些模块真的是惰性加载的。
在 Chrome 中，按 <code>Cmd+Option+i</code>（Mac）或 <code>Ctrl+Alt+i</code>（PC），并选中 <code>Network</code> 页标签。</p><p translation-origin="off">You can check to see that a module is indeed being lazy loaded with the Chrome developer tools. In Chrome, open the dev tools by pressing <code>Cmd+Option+i</code> on a Mac or <code>Ctrl+Alt+i</code> on a PC and go to the Network Tab.</p>

<figure>
 <img src="./Angular - 惰性加载的特性模块_files/network-tab.png" width="600" alt="lazy loaded modules diagram">
</figure>
<p translation-result="">点击 Orders 或 Customers 按钮。如果你看到某个 chunk 文件出现了，就表示你已经惰性加载并接入了这个特性模块。Orders 和 Customers 都应该出现一次 chunk，并且它们各自只应该出现一次。</p><p translation-origin="off">Click on the Orders or Customers button. If you see a chunk appear, you’ve wired everything up properly and the feature module is being lazy loaded. A chunk should appear for Orders and for Customers but will only appear once for each.</p>

<figure>
 <img src="./Angular - 惰性加载的特性模块_files/chunk-arrow.png" width="600" alt="lazy loaded modules diagram">
</figure>
<p translation-result="">要想再次查看它或测试本项目后面的行为，只要点击 Network 页左上放的“清除”图标即可。</p><p translation-origin="off">To see it again, or to test after working in the project, clear everything out by clicking the circle with a line through it in the upper left of the Network Tab:</p>

<figure>
 <img src="./Angular - 惰性加载的特性模块_files/clear.gif" width="200" alt="lazy loaded modules diagram">
</figure>
<p translation-result="">然后，使用 <code>Cmd+r</code>（Mac） 或 <code>Ctrl+r</code>（PC） 重新加载页面。</p><p translation-origin="off">Then reload with <code>Cmd+r</code> or <code>Ctrl+r</code>, depending on your platform.</p>

<h2 translation-result="" id="codeforrootcode-and-codeforchildcode"><code>forRoot()</code> 与 <code>forChild()</code><a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/lazy-loading-ngmodules#codeforrootcode-and-codeforchildcode"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="forroot-and-forchild"><code>forRoot()</code> and <code>forChild()</code><a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/lazy-loading-ngmodules#forroot-and-forchild"><i class="material-icons">link</i></a></h2>

<p translation-result="">你可能已经注意到了，CLI 会把 <code>RouterModule.forRoot(routes)</code> 添加到 <code>app-routing.module.ts</code> 的 <code>imports</code> 数组中。
这会让 Angular 知道 <code>AppRoutingModule</code> 是一个路由模块，而 <code>forRoot()</code> 表示这是一个根路由模块。
它会配置你传入的所有路由、让你能访问路由器指令并注册 <code>RouterService</code>。
在 <code>AppRoutingModule</code> 中使用 <code>forRoot()</code>，在本应用中这只会在顶层模块中写一次。</p><p translation-origin="off">You might have noticed that the CLI adds <code>RouterModule.forRoot(routes)</code> to the <code>app-routing.module.ts</code> <code>imports</code> array. This lets Angular know that this module,
<code>AppRoutingModule</code>, is a routing module and <code>forRoot()</code> specifies that this is the root
routing module. It configures all the
routes you pass to it, gives you access to the router directives, and registers the <code>RouterService</code>.
Use <code>forRoot()</code> in the <code>AppRoutingModule</code>—that is, one time in the app at the root level.</p>

<p translation-result="">CLI 还会把 <code>RouterModule.forChild(routes)</code> 添加到各个特性模块中。这种方式下 Angular 就会知道这个路由列表只负责提供额外的路由并且其设计意图是作为特性模块使用。你可以在多个模块中使用 <code>forChild()</code>。</p><p translation-origin="off">The CLI also adds <code>RouterModule.forChild(routes)</code> to feature routing modules. This way, Angular
knows that the route list is only responsible for providing additional routes and is intended for feature modules. You can use <code>forChild()</code> in multiple modules.</p>

<p translation-result=""><code>forRoot()</code> 包含的注入器配置是全局性的，比如对路由器的配置。<code>forChild()</code> 中没有注入器配置，只有像 <code><a href="https://angular.cn/api/router/RouterOutlet" class="code-anchor">RouterOutlet</a></code> 和 <code><a href="https://angular.cn/api/router/RouterLink" class="code-anchor">RouterLink</a></code> 这样的指令。</p><p translation-origin="off"><code>forRoot()</code> contains injector configuration which is global; such as configuring the Router. <code>forChild()</code> has no injector configuration, only directives such as <code><a href="https://angular.cn/api/router/RouterOutlet" class="code-anchor">RouterOutlet</a></code> and <code><a href="https://angular.cn/api/router/RouterLink" class="code-anchor">RouterLink</a></code>.</p>

<hr>
<h2 translation-result="" id="more-on-ngmodules-and-routing">更多关于 NgModule 和路由的知识<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/lazy-loading-ngmodules#more-on-ngmodules-and-routing"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="more-on-ngmodules-and-routing">More on NgModules and routing<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/lazy-loading-ngmodules#more-on-ngmodules-and-routing"><i class="material-icons">link</i></a></h2>

<p translation-result="">你可能还对下列内容感兴趣：</p><p translation-origin="off">You may also be interested in the following:</p>

<ul>
<li>
<p translation-result=""> <a href="https://angular.cn/guide/router">路由与导航</a>。</p><p translation-origin="off"><a href="https://angular.cn/guide/router">Routing and Navigation</a>.</p>

</li>
<li>
<p translation-result=""> <a href="https://angular.cn/guide/providers">服务提供商</a>。</p><p translation-origin="off"><a href="https://angular.cn/guide/providers">Providers</a>.</p>

</li>
<li>
<p translation-result=""> <a href="https://angular.cn/guide/module-types">特性模块的分类</a>。</p><p translation-origin="off"><a href="https://angular.cn/guide/module-types">Types of Feature Modules</a>.</p>

</li>
</ul>

</div>
<!-- links to this doc:
 - guide/dependency-injection
 - guide/entry-components
 - guide/feature-modules
 - guide/module-types
 - guide/providers
 - guide/sharing-ngmodules
 - guide/singleton-services
-->
<!-- links from this doc:
 - api/common/CommonModule
 - api/core/NgModule
 - api/router/RouterLink
 - api/router/RouterModule
 - api/router/RouterOutlet
 - api/router/Routes
 - guide/feature-modules
 - guide/frequent-ngmodules
 - guide/lazy-loading-ngmodules#add-a-component-to-the-feature-module
 - guide/lazy-loading-ngmodules#add-another-feature-module
 - guide/lazy-loading-ngmodules#codeforrootcode-and-codeforchildcode
 - guide/lazy-loading-ngmodules#config-routes
 - guide/lazy-loading-ngmodules#configure-the-feature-modules-routes
 - guide/lazy-loading-ngmodules#configure-the-routes
 - guide/lazy-loading-ngmodules#confirm-its-working
 - guide/lazy-loading-ngmodules#create-a-feature-module-with-routing
 - guide/lazy-loading-ngmodules#forroot-and-forchild
 - guide/lazy-loading-ngmodules#high-level-view
 - guide/lazy-loading-ngmodules#inside-the-feature-module
 - guide/lazy-loading-ngmodules#lazy-loading-feature-modules
 - guide/lazy-loading-ngmodules#more-on-ngmodules-and-routing
 - guide/lazy-loading-ngmodules#prerequisites
 - guide/lazy-loading-ngmodules#prerequisites-4
 - guide/lazy-loading-ngmodules#routes-at-the-app-level
 - guide/lazy-loading-ngmodules#set-up-an-app
 - guide/lazy-loading-ngmodules#set-up-the-ui
 - guide/module-types
 - guide/ngmodule-vs-jsmodule
 - guide/providers
 - guide/router
--></div></aio-doc-viewer><aio-dt><!----></aio-dt></section></mat-sidenav-content></mat-sidenav-container><!----><div class="toc-container no-print ng-star-inserted"><aio-toc><!----><div class="toc-inner no-print collapsed ng-star-inserted"><!----><!----><ul class="toc-list"><!----><!----><!----><li title="惰性加载的特性模块link" class="h1 active ng-star-inserted"><a href="https://angular.cn/guide/lazy-loading-ngmodules#lazy-loading-feature-modules">惰性加载的特性模块</a></li><!----><!----><!----><li title="高层视角link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/lazy-loading-ngmodules#high-level-view">高层视角</a></li><!----><!----><!----><li title="建立应用link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/lazy-loading-ngmodules#set-up-an-app">建立应用</a></li><!----><!----><!----><li title="创建一个带路由的特性模块link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/lazy-loading-ngmodules#create-a-feature-module-with-routing">创建一个带路由的特性模块</a></li><!----><!----><!----><li title="向特性模块中添加组件link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/lazy-loading-ngmodules#add-a-component-to-the-feature-module">向特性模块中添加组件</a></li><!----><!----><!----><li title="再添加一个特性模块link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/lazy-loading-ngmodules#add-another-feature-module">再添加一个特性模块</a></li><!----><!----><!----><li title="建立 UIlink" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/lazy-loading-ngmodules#set-up-the-ui">建立 UI</a></li><!----><!----><!----><li title="配置路由link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/lazy-loading-ngmodules#configure-the-routes">配置路由</a></li><!----><!----><!----><li title="顶层的路由link" class="h3 ng-star-inserted"><a href="https://angular.cn/guide/lazy-loading-ngmodules#routes-at-the-app-level">顶层的路由</a></li><!----><!----><!----><li title="特性模块内部link" class="h3 ng-star-inserted"><a href="https://angular.cn/guide/lazy-loading-ngmodules#inside-the-feature-module">特性模块内部</a></li><!----><!----><!----><li title="配置该特性模块的路由link" class="h3 ng-star-inserted"><a href="https://angular.cn/guide/lazy-loading-ngmodules#configure-the-feature-modules-routes">配置该特性模块的路由</a></li><!----><!----><!----><li title="确认它工作正常link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/lazy-loading-ngmodules#confirm-its-working">确认它工作正常</a></li><!----><!----><!----><li title="forRoot() 与 forChild()link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/lazy-loading-ngmodules#codeforrootcode-and-codeforchildcode"><code>forRoot()</code> 与 <code>forChild()</code></a></li><!----><!----><!----><li title="更多关于 NgModule 和路由的知识link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/lazy-loading-ngmodules#more-on-ngmodules-and-routing">更多关于 NgModule 和路由的知识</a></li><!----></ul><!----></div></aio-toc></div><footer class="no-print"><aio-footer><div class="grid-fluid"><!----><div class="footer-block ng-star-inserted"><h3>资源</h3><ul><!----><li class="ng-star-inserted"><a class="link" href="https://angular.cn/about" title="Angular 贡献者。">关于</a></li><li class="ng-star-inserted"><a class="link" href="https://angular.cn/resources" title="网络上的 Angular 工具、培训、博客等">资源列表</a></li><li class="ng-star-inserted"><a class="link" href="https://angular.cn/presskit" title="我们的联系方式、LOGO 和品牌">宣传资料</a></li><li class="ng-star-inserted"><a class="link" href="https://blog.angular.io/" title="Angular 官方博客">博客</a></li></ul></div><div class="footer-block ng-star-inserted"><h3>帮助</h3><ul><!----><li class="ng-star-inserted"><a class="link" href="https://stackoverflow.com/questions/tagged/angular" title="Stack Overflow: 这里的社区会回答你关于 Angular 的技术问题">Stack Overflow</a></li><li class="ng-star-inserted"><a class="link" href="https://gitter.im/angular/angular" title="和老鸟聊 Angular">Gitter</a></li><li class="ng-star-inserted"><a class="link" href="https://github.com/angular/angular/issues" title="在 github 上报告问题和建议。">报告问题</a></li><li class="ng-star-inserted"><a class="link" href="https://github.com/angular/code-of-conduct/blob/master/CODE_OF_CONDUCT.md" title="让我们彼此尊重">行为规范</a></li></ul></div><div class="footer-block ng-star-inserted"><h3>社区</h3><ul><!----><li class="ng-star-inserted"><a class="link" href="https://angular.cn/events" title="Post issues and suggestions on github.">活动</a></li><li class="ng-star-inserted"><a class="link" href="http://www.meetup.com/topics/angularjs/" title="参加聚会，向别的开发人员学习">聚会</a></li><li class="ng-star-inserted"><a class="link" href="https://twitter.com/angular" title="Twitter">Twitter</a></li><li class="ng-star-inserted"><a class="link" href="https://github.com/angular/angular" title="GitHub">GitHub</a></li><li class="ng-star-inserted"><a class="link" href="https://angular.cn/contribute" title="向 Angular 做贡献">做贡献</a></li></ul></div><div class="footer-block ng-star-inserted"><h3>多语言</h3><ul><!----><li class="ng-star-inserted"><a class="link" href="https://angular.io/" title="English Version.">English Version</a></li><li class="ng-star-inserted"><a class="link" href="https://angular.jp/" title="日本語版">日本語版</a></li></ul></div></div><p> Powered by Google ©2010-2018. 代码授权方式：<a href="https://angular.cn/license" title="License text">MIT-style License</a>. 文档授权方式：<a href="http://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a>. </p><p><span class="text-caption">本网站由第三方公司洛阳永欣维护 &nbsp;<a href="http://www.miitbeian.gov.cn/">豫ICP备16019859号-1</a></span></p><p> 当前版本：6.0.1-build.180+sha.8494cf4. </p></aio-footer></footer></aio-shell>

  <noscript>
    &lt;div class="background-sky hero"&gt;&lt;/div&gt;
    &lt;section id="intro"&gt;
      &lt;div class="hero-logo"&gt;
        &lt;img src="assets/images/logos/angular/angular.svg" width="250" height="250"&gt;
      &lt;/div&gt;
      &lt;div class="homepage-container"&gt;
        &lt;div class="hero-headline"&gt;一套框架，多种平台&lt;br&gt;移动 &amp;amp; 桌面&lt;/div&gt;
      &lt;/div&gt;
    &lt;/section&gt;
    &lt;h2 style="color: red; text-align: center; margin-top: -50px;"&gt;
      &lt;b&gt;&lt;i&gt;该网站需要浏览器支持 JavaScript &lt;/i&gt;&lt;/b&gt;
    &lt;/h2&gt;
  </noscript>


<script type="text/javascript" src="./Angular - 惰性加载的特性模块_files/runtime.e7e60529879ffb07e28e.js.下载"></script><script type="text/javascript" src="./Angular - 惰性加载的特性模块_files/polyfills.56dafdd128abda80a86c.js.下载"></script><script type="text/javascript" src="./Angular - 惰性加载的特性模块_files/main.e580488e21fdad9d749c.js.下载"></script><div class="cdk-visually-hidden" aria-atomic="true" aria-live="polite"></div></body></html>