<!DOCTYPE html>
<!-- saved from url=(0048)https://angular.cn/guide/architecture-components -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  
  <title>Angular - 组件简介</title>
  <!--<base href="/">--><base href=".">

  <meta name="viewport" content="width=device-width, initial-scale=1">

  <link rel="icon" type="image/x-icon" href="https://angular.cn/favicon.ico">
  <link rel="icon" type="image/x-icon" href="https://angular.cn/assets/images/favicons/favicon.ico">
  <link rel="icon" type="image/png" href="https://angular.cn/assets/images/favicons/favicon-32x32.png" sizes="32x32">
  <link rel="icon" type="image/png" href="https://angular.cn/assets/images/favicons/favicon-194x194.png" sizes="194x194">
  <link rel="icon" type="image/png" href="https://angular.cn/assets/images/favicons/favicon-96x96.png" sizes="96x96">
  <link rel="icon" type="image/png" href="https://angular.cn/assets/images/favicons/favicon-16x16.png" sizes="16x16">
  <link rel="apple-touch-icon" sizes="144x144" href="https://angular.cn/assets/images/favicons/apple-touch-icon-144x144.png">
  <link rel="apple-touch-icon-precomposed" sizes="144x144" href="https://angular.cn/assets/images/favicons/apple-touch-icon-144x144.png">

  <!-- NOTE: These need to be kept in sync with `ngsw-manifest.json`. -->
  <link href="./Angular - 组件简介_files/Material_Icons.css" rel="stylesheet">
  <link href="./Angular - 组件简介_files/Droid_Sans_Mono.css" rel="stylesheet">
  <link href="./Angular - 组件简介_files/font-awesome.min.css" rel="stylesheet">
  <!-- -->

  <link rel="manifest" href="https://angular.cn/pwa-manifest.json">
  <meta name="theme-color" content="#1976d2">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-status-bar-style" content="translucent">

  <script async="" src="./Angular - 组件简介_files/analytics.js.下载"></script><script>
    // Dynamically, pre-emptively, add `noindex`, which will be removed when the doc is ready and valid
    tag = document.createElement('meta'); tag.name = 'robots'; tag.content = 'noindex';
    document.head.appendChild(tag);
  </script>

  <!-- Google Analytics -->
  <script>
  // Note this is a customised version of the GA tracking snippet
  // See the comments below for more info
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;
  ~i.name.indexOf('NG_DEFER_BOOTSTRAP')|| // only load library if not running e2e tests
  m.parentNode.insertBefore(a,m)
  })(window,document,'script','assets/js/analytics.js','ga');
  </script>
  <!-- End Google Analytics -->

  <script>
    // Report fatal errors to Google Analytics
    window.onerror = function() {
      ga('send', 'exception', {exDescription: formatError.apply(null, arguments), exFatal: true});

      function formatError(msg, url, line, col, e) {
        var stack;
        msg = msg.replace(/^Error: /, '');
        if (e) {
          stack = e.stack
              // strip the leading "Error: " from the stack trace
              .replace(/^Error: /, '')
              // strip the message from the stack trace, if present
              .replace(msg + '\n', '')
              // strip leading spaces
              .replace(/^ +/gm, '')
              // strip all leading "at " for each frame
              .replace(/^at /gm, '')
              // replace long urls with just the last segment: `filename:line:column`
              .replace(/(?: \(|@)http.+\/([^/)]+)\)?(?:\n|$)/gm, '@$1\n')
              // replace "eval code" in Edge
              .replace(/ *\(eval code(:\d+:\d+)\)(?:\n|$)/gm, '@???$1\n')
        } else {
          line = line || '?';
          col = col || '?';
          stack = url + ':' + line + ':' + col;
        }
        return (msg + '\n' + stack).substr(0, 150);
      }
    };
  </script>

  <script>
    if (window.document.documentMode) {
      // polyfill IE11 in a blocking way
      var s = document.createElement('script');
      s.src = 'generated/ie-polyfills.min.js';
      document.head.appendChild(s);
    } else if (!Object.assign) {
      // polyfill other non-evergreen browsers in a blocking way
      var polyfillUrl = "https://cdn.polyfill.io/v2/polyfill.min.js?features=default,Array.prototype.find&flags=gated&unknown=polyfill";

      // send a blocking XHR to fetch the polyfill
      // then append it to the document so that its eval-ed synchronously
      // this is required because the method used for IE is not reliable with other non-evergreen browsers
      var xhr = new XMLHttpRequest();
      xhr.addEventListener("load", function() {
        var s = document.createElement('script');
        s.type = 'text/javascript';
        var code = this.responseText;
        s.appendChild(document.createTextNode(code));
        document.head.appendChild(s);
      });
      xhr.open("GET", polyfillUrl, false);
      xhr.send();
    }
  </script>

  <script>
    //load CE polyfill
    //HACK: webpack's html plugin mangles the document.write calls if we don't trick it.

    //load the ES5 shim for browsers with native CE support
    function loadCustomElementsShim(){
      document.write('<scri' + 'pt src="assets/js/native-shim.js"><' + '/script>');
    }

    //load the full custom elements polyfill for browsers without support
    function loadCustomElementsPolyfill(){
      document.write('<scri' + 'pt src="assets/js/custom-elements.min.js"><' + '/script>');
    }
    //detect if we have native CE support
    if(!window.customElements){
      loadCustomElementsPolyfill();
    }
    else {
      loadCustomElementsShim();
    }
  </script><script src="./Angular - 组件简介_files/native-shim.js.下载"></script>

<link rel="stylesheet" href="./Angular - 组件简介_files/styles.613b7c8de73e274bd4c6.css"><style>@media screen and (-ms-high-contrast:active){.mat-toolbar{outline:solid 1px}}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media (max-width:599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}</style><style>.mat-button,.mat-flat-button,.mat-icon-button,.mat-stroked-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;overflow:visible}.mat-button[disabled],.mat-flat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner{border:0}.mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{transition:none;opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:1}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-raised-button:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-raised-button[disabled]{box-shadow:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}.mat-flat-button:not([class*=mat-elevation-z]){box-shadow:0 0 0 0 rgba(0,0,0,.2),0 0 0 0 rgba(0,0,0,.14),0 0 0 0 rgba(0,0,0,.12)}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-fab::-moz-focus-inner{border:0}.mat-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-fab[disabled]{box-shadow:none}.mat-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}.mat-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:88px;line-height:36px;padding:0 16px;border-radius:2px;overflow:visible;transform:translate3d(0,0,0);transition:background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:1}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-mini-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.mat-mini-fab[disabled]{box-shadow:none}.mat-mini-fab:not([class*=mat-elevation-z]){box-shadow:0 3px 5px -1px rgba(0,0,0,.2),0 6px 10px 0 rgba(0,0,0,.14),0 1px 18px 0 rgba(0,0,0,.12)}.mat-mini-fab:not([disabled]):active:not([class*=mat-elevation-z]){box-shadow:0 7px 8px -4px rgba(0,0,0,.2),0 12px 17px 2px rgba(0,0,0,.14),0 5px 22px 4px rgba(0,0,0,.12)}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button .mat-icon,.mat-icon-button i{line-height:24px}.mat-button-focus-overlay,.mat-button-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-focus-overlay{background-color:rgba(0,0,0,.12);border-radius:inherit;opacity:0;transition:opacity .2s cubic-bezier(.35,0,.25,1),background-color .2s cubic-bezier(.35,0,.25,1)}@media screen and (-ms-high-contrast:active){.mat-button-focus-overlay{background-color:rgba(255,255,255,.5)}}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}@media screen and (-ms-high-contrast:active){.mat-button,.mat-fab,.mat-flat-button,.mat-icon-button,.mat-mini-fab,.mat-raised-button{outline:solid 1px}}</style><style>.mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1,1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}</style><style>.mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-opened{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:background-color,visibility}@media screen and (-ms-high-contrast:active){.mat-drawer-backdrop{opacity:.5}}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:.4s;transition-timing-function:cubic-bezier(.25,.8,.25,1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%,0,0)}@media screen and (-ms-high-contrast:active){.mat-drawer,[dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}}@media screen and (-ms-high-contrast:active){.mat-drawer.mat-drawer-end,[dir=rtl] .mat-drawer{border-left:solid 1px currentColor;border-right:none}}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer{transform:translate3d(100%,0,0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%,0,0)}.mat-drawer:not(.mat-drawer-side){box-shadow:0 8px 10px -5px rgba(0,0,0,.2),0 16px 24px 2px rgba(0,0,0,.14),0 6px 30px 5px rgba(0,0,0,.12)}.mat-sidenav-fixed{position:fixed}</style><script charset="utf-8" src="./Angular - 组件简介_files/live-example-live-example-module-ngfactory.76888e8a441aab262101.js.下载"></script><style>.mat-progress-bar{display:block;height:5px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:'';display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2s infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2s infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2s infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(.5,0,.70173,.49582);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(.30244,.38135,.55,.95635);transform:translateX(83.67142%)}100%{transform:translateX(200.61106%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(.08)}36.65%{animation-timing-function:cubic-bezier(.33473,.12482,.78584,1);transform:scaleX(.08)}69.15%{animation-timing-function:cubic-bezier(.06,.11,.6,1);transform:scaleX(.66148)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:translateX(37.65191%)}48.35%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:translateX(84.38617%)}100%{transform:translateX(160.27778%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(.15,0,.51506,.40969);transform:scaleX(.08)}19.15%{animation-timing-function:cubic-bezier(.31033,.28406,.8,.73371);transform:scaleX(.4571)}44.15%{animation-timing-function:cubic-bezier(.4,.62704,.6,.90203);transform:scaleX(.72796)}100%{transform:scaleX(.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-10px)}}</style><script charset="utf-8" src="./Angular - 组件简介_files/code-code-example-module-ngfactory_code-code-tabs-module-ngfactory.6a5aabadc81dbdfa0f4e.js.下载"></script><script charset="utf-8" src="./Angular - 组件简介_files/code-code-tabs-module-ngfactory.8315a94f020cd25fe92d.js.下载"></script><script charset="utf-8" src="./Angular - 组件简介_files/code-code-example-module-ngfactory.d0ec50584c7428d1d6ed.js.下载"></script><script charset="utf-8" src="./Angular - 组件简介_files/12.50857b4475720140b255.js.下载"></script><style>.mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.mat-tab-label.mat-tab-disabled{cursor:default}.mat-tab-label.mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (max-width:599px){.mat-tab-label{padding:0 12px}}@media (max-width:959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs] .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height .5s cubic-bezier(.35,0,.25,1)}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}</style><style>.mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:0}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.mat-tab-label.mat-tab-disabled{cursor:default}.mat-tab-label.mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}@media (max-width:599px){.mat-tab-label{min-width:72px}}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:.5s cubic-bezier(.35,0,.25,1)}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}@media screen and (-ms-high-contrast:active){.mat-ink-bar{outline:solid 2px;height:0}}.mat-tab-header-pagination{position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-pagination-after,.mat-tab-header-rtl .mat-tab-header-pagination-before{padding-right:4px}.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:'';height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-list{flex-grow:1;position:relative;transition:transform .5s cubic-bezier(.35,0,.25,1)}.mat-tab-labels{display:flex}</style><style>.mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}</style></head>
<body>

  <aio-shell ng-version="6.0.0" class="mode-stable sidenav-open page-guide-architecture-components folder-guide view-SideNav aio-notification-hide "><div id="top-of-page"></div><!----><mat-toolbar class="app-toolbar no-print mat-toolbar mat-primary mat-toolbar-multiple-rows" color="primary"><mat-toolbar-row class="notification-container mat-toolbar-row"><aio-notification actionurl="https://bit.ly/angular-survey-2018" buttontext="Go to survey" expirationdate="2018-01-19" icon="insert_comment" iconlabel="Survey" notificationid="survey-january-2018" class="ng-tns-c2-0 ng-trigger ng-trigger-hideAnimation" style="height: 0px;"><a class="content" href="https://bit.ly/angular-survey-2018"><mat-icon class="icon mat-icon" role="img" aria-hidden="true" aria-label="Survey"><svg fill="#FFFFFF" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M20 2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg></mat-icon><span class="message"> Help Angular by taking a <b>1 minute survey</b>! </span><span class="action-button">Go to survey</span></a><button class="close-button mat-icon-button" aria-label="Close" mat-icon-button=""><span class="mat-button-wrapper"><mat-icon aria-label="Dismiss notification" class="mat-icon ng-tns-c2-0" role="img" svgicon="close" aria-hidden="true"><svg fill="#ffffff" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"></path><path d="M0 0h24v24H0z" fill="none"></path></svg></mat-icon></span><div class="mat-button-ripple mat-ripple mat-button-ripple-round" matripple=""></div><div class="mat-button-focus-overlay"></div></button></aio-notification></mat-toolbar-row><mat-toolbar-row class="mat-toolbar-row"><button class="hamburger mat-button" mat-button="" title="Docs menu"><span class="mat-button-wrapper"><mat-icon class="mat-icon" role="img" svgicon="menu" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"></path></svg></mat-icon></span><div class="mat-button-ripple mat-ripple" matripple=""></div><div class="mat-button-focus-overlay"></div></button><a class="nav-link home" href="https://angular.cn/"><!----><img alt="Home" height="40" src="./Angular - 组件简介_files/logo-nav@2x.png" title="Home" width="150" class="ng-star-inserted"><!----></a><!----><aio-top-menu class="ng-star-inserted"><ul role="navigation"><!----><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/features" title="特性">特性</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/docs" title="文档">文档</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/resources" title="资源">资源</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/events" title="会议">会议</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://blog.angular.io/" title="博客">博客</a></li><li class="ng-star-inserted"><a class="nav-link" href="https://angular.cn/translations/cn/home" title="关于中文版">关于中文版</a></li></ul></aio-top-menu><aio-search-box class="search-container"><input aria-label="search" placeholder="搜索" type="search"></aio-search-box></mat-toolbar-row></mat-toolbar><!----><mat-sidenav-container class="sidenav-container mat-drawer-container mat-sidenav-container mat-drawer-transition has-floating-toc" role="main"><!----><div class="mat-drawer-backdrop ng-star-inserted"></div><div tabindex="-1" class="cdk-visually-hidden cdk-focus-trap-anchor"></div><mat-sidenav class="sidenav mat-drawer mat-sidenav ng-tns-c6-1 ng-trigger ng-trigger-transform mat-drawer-side ng-star-inserted" tabindex="-1" style="transform: translate3d(0px, 0px, 0px); visibility: visible;"><!----><aio-nav-menu><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-1 collapsed" href="https://angular.cn/guide/quickstart" title="Angular 破冰"> 快速上手 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-1 expanded" type="button" title="此《英雄指南》教程会带你用 TypeScript 一步步创建一个 Angular 应用。" aria-pressed="true"> 教程 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-1 expanded"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial" title="第一部分：《英雄指南》教程简介"> 1. 简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt0" title="第二部分：创建应用的外壳"> 2. 应用的“外壳” </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt1" title="第三部分：构建一个简单的英雄编辑器"> 3. 英雄编辑器 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt2" title="第四部分：构建一个主从结构的页面，用于展现英雄列表"> 4. 显示英雄列表 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt3" title="第五部分：把主从结构的页面重构成多个组件"> 5. 主从组件 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt4" title="第六部分：创建一个可复用的服务来管理英雄数据"> 6. 服务 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt5" title="第七部分：添加 Angular 路由器，并且学习在视图之间导航"> 7. 路由 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 expanded" href="https://angular.cn/tutorial/toh-pt6" title="第八部分：通过 HTTP 来获取并保存英雄数据"> 8. HTTP </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-1 expanded selected" type="button" title="学习 Angular 的核心知识" aria-pressed="true"> 核心知识 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-1 expanded selected"><!----><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 expanded selected" type="button" title="Angular 应用的基本构造块。" aria-pressed="true"> 架构 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 expanded selected"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/architecture" title="Angular 应用的基本构造块"> 架构概览 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded" href="https://angular.cn/guide/architecture-modules" title="关于模块。"> 模块（NgModule）简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 expanded selected" href="https://angular.cn/guide/architecture-components" title="关于组件、模板和视图。"> 组件简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/architecture-services" title="关于服务与依赖注入。"> 服务与 DI 简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/architecture-next-steps" title="学完基础知识之后……"> 后续步骤 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="使用数据绑定构建动态视图" aria-pressed="false"> 组件与模板 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/displaying-data" title="属性绑定可以帮助应用把数据显示在界面上"> 显示数据 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/template-syntax" title="学习如何写模板，以便借助数据绑定机制显示数据并响应事件。"> 模板语法 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/lifecycle-hooks" title="Angular 调用指令和组件的生命周期钩子函数，包括它的创建、变更和销毁时。"> 生命周期钩子 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/component-interaction" title="在不同的指令和组件之间共享信息"> 组件交互 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/component-styles" title="添加专属于某个组件的样式"> 组件样式 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/elements" title="把组件转换成自定义元素。"> Angular 自定义元素 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dynamic-component-loader" title="动态加载组件"> 动态组件 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/attribute-directives" title="属性型指令把行为添加到现有元素上。"> 属性型指令 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/structural-directives" title="结构型指令可以操纵页面的布局"> 结构型指令 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/pipes" title="管道可以在模板中转换显示的内容。"> 管道 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/animations" title="Angular 动画体系指南"> 动画 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Angular 的表单" aria-pressed="false"> 表单 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/user-input" title="用户输入触发 DOM 事件。我们通过事件绑定来监听它们，把更新过的数据导入回我们的组件和 model。"> 用户输入 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/forms" title="表单可以创建集中、高效、引人注目的输入体验。Angular 表单可以协调一组数据绑定控件，跟踪变更，验证输入，并表达错误信息。"> 模板驱动表单 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/form-validation" title="验证用户的表单输入"> 表单验证 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/reactive-forms" title="使用 FormBuilder 、分组和数组创建响应式表单。"> 响应式表单 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dynamic-form" title="使用FormGroup渲染动态表单"> 动态表单 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Observable 与 RxJS" aria-pressed="false"> Observable 与 RxJS <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/observables" title=""> 可观察对象(Observable) </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/rx-library" title=""> RxJS 库 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/observables-in-angular" title=""> Angular 中的可观察对象 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/practical-observable-usage" title=""> 用法实战 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/comparing-observables" title=""> 与其它技术的比较 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/bootstrapping" title="在应用的根模块（AppModule）中告诉 Angular 如何构造并引导引用。"> 引导启动 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Angular 中的模块" aria-pressed="false"> Angular 模块 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ngmodules" title="使用 NgModule 让你的应用更高效"> NgModule 简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ngmodule-vs-jsmodule" title="JavaScript 模块和 NgModule 之间的差异"> JS 模块 vs NgModule </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/frequent-ngmodules" title="介绍最常用的 Angular 模块"> 常用模块 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/module-types" title="介绍特性模块的几种类型"> 特性模块的分类 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/entry-components" title="关于 Angular 中入口组件的一切"> 入口组件 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/feature-modules" title="创建特性模块，以组织你的代码"> 特性模块 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/providers" title="服务提供商与 Angular 模块"> 服务提供商 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/singleton-services" title="创建单例应用"> 单例应用 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/lazy-loading-ngmodules" title="惰性加载模块，以提高应用的性能"> 惰性加载的特性模块 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/sharing-ngmodules" title="共享 Angular 模块让你的应用现代化。"> 共享 Angular 模块 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ngmodule-api" title="理解 NgModule 的那些细节。"> NgModule API </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ngmodule-faq" title="回答关于 NgModules 的常见问题。"> NgModule 常见问题 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="依赖注入：创建并注入各种服务。" aria-pressed="false"> 依赖注入 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dependency-injection-pattern" title="学习 Angular 依赖注入系统背后的依赖注入模式"> 依赖注入模式 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dependency-injection" title="Angular 的依赖注入系统能够为 Angular 创建的类创建并交付它们所依赖的服务。"> Angular 依赖注入 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/hierarchical-dependency-injection" title="Angular 的多级注入体系会建立与组件平行的注入器树。"> 多级注入器 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/dependency-injection-in-action" title="依赖注入的使用技巧"> DI 实用技巧 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/http" title="通过 HTTP 协议与远程服务器对话。"> HttpClient </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/router" title="揭示如何通过 Angular 路由进行基本的屏幕导航。"> 路由与导航 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/testing" title="测试 Angular 应用的技巧与实践。"> 测试 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/cheatsheet" title="关于 Angular 常用编码技术的快速指南。"> 速查表 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-1 collapsed" type="button" title="把 Angular 用到你的实际工作中的一些技巧" aria-pressed="false"> 其它技术 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-1 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/i18n" title="把应用模板中的文本翻译成多种语言。"> 国际化 (i18n) </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/language-service" title="使用 Angular 语言服务来为开发提速。"> 语言服务 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/security" title="Angular 应用开发中的安全技术。"> 安全 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="环境准备与部署" aria-pressed="false"> 环境准备与部署 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/setup" title="在你自己的机器上安装 Angular QuickStart 种子，以便更快、更高效的开发。"> 搭建本地开发环境 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/setup-systemjs-anatomy" title="基于 SystemJS 的本地开发环境内幕。"> 搭建方式剖析 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/browser-support" title="浏览器支持与 Polyfills 指南"> 浏览器支持 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/npm-packages" title="建议的 npm 包，以及如何指定包的依赖。"> npm 包 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/typescript-configuration" title="给 Angular 开发者的 TypeScript 配置。"> TypeScript 配置 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/aot-compiler" title="学习如何使用 AOT 预编译器。"> 预先（AOT）编译 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/deployment" title="学习如何部署你的 Angular 应用。"> 部署 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/custom-elements" title="把 Angular 组件用作自定义元素。"> 自定义元素 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Angular 的 Service Worker：控制应用的资源缓存。" aria-pressed="false"> Service Worker <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-intro" title="Angular 对 Service Worker 的实现提升了慢速或不稳定的网络连接下的用户体验。"> 简介 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-getting-started" title="在 CLI 项目中启用 Service Worker，并在浏览器中查看效果。"> 快速起步 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-communications" title="那些能让你和 Angular 的 Service Worker 通讯的服务类。"> 与 Service Worker 通讯 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-devops" title="使用 Service Worker 运行应用、管理应用更新、调试以及杀掉正在运行的应用。"> 生产环境下的 Service Worker </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/service-worker-config" title="配置 Service Worker 的缓存行为。"> Service Worker 配置 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="Angular 的发布实践，更新计划以及与更新有关的资源。" aria-pressed="false"> 保持最新 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/updating" title="关于如何把 Angular 应用升级到最新版的信息。"> 更新你的项目 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/releases" title="Angular 的版本、发布、支持与弃用策略。"> Angular 的版本发布 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><!----><div class="ng-star-inserted"><!----><!----><button class="vertical-menu-item heading ng-star-inserted level-2 collapsed" type="button" title="把 AngularJS 应用增量式的升级到 Angular。" aria-pressed="false"> 从 AngularJS 升级 <mat-icon class="rotating-icon mat-icon" role="img" svgicon="keyboard_arrow_right" aria-hidden="true"><svg xmlns="http://www.w3.org/2000/svg" focusable="false" viewBox="0 0 24 24"><path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"></path></svg></mat-icon></button><div class="heading-children level-2 collapsed"><!----><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/upgrade" title="把 AngularJS 应用增量式的升级到 Angular。"> 升级步骤 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-3 collapsed" href="https://angular.cn/guide/ajs-quick-reference" title="学习如何把 AngularJS 的概念映射到 Angular 中。"> AngularJS 与 Angular 的概念对照 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/universal" title="使用 Angular Universal 在服务端渲染 HTML。">  服务端渲染 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/visual-studio-2015" title="在 Visual Studio 2015 中使用快速起步中的文件"> Visual Studio 2015 快速上手 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/styleguide" title="写出 Angular 风格的程序"> 风格指南 </a></div><!----></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-2 collapsed" href="https://angular.cn/guide/glossary" title="Angular 中最重要的词汇的简要定义。"> 词汇表 </a></div><!----></aio-nav-item></div></div></aio-nav-item><aio-nav-item class="ng-star-inserted"><!----><div class="ng-star-inserted"><a class="vertical-menu-item level-1 collapsed" href="https://angular.cn/api" title="关于 Angular 中类和值的详细信息。"> API 参考手册 </a></div><!----></aio-nav-item></aio-nav-menu><div class="doc-version"><aio-select><div class="form-select-menu"><button class="form-select-button"><strong></strong><!---->stable (v6.0.0) </button><!----></div></aio-select></div></mat-sidenav><div tabindex="-1" class="cdk-visually-hidden cdk-focus-trap-anchor"></div><!----><mat-sidenav-content cdkscrollable="" class="mat-drawer-content mat-sidenav-content ng-star-inserted" style="margin-left: 262px; margin-right: 0px;"><section class="sidenav-content" role="content" id="guide-architecture-components"><aio-mode-banner><!----></aio-mode-banner><aio-doc-viewer class=""><div style="opacity: 1; transition: all 200ms ease-in-out;">
<div class="content">
<h1 translation-result="" id="introduction-to-components">组件简介<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/architecture-components#introduction-to-components"><i class="material-icons">link</i></a></h1><aio-toc class="embedded"></aio-toc><h1 translation-origin="off" id="introduction-to-components">Introduction to components<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/architecture-components#introduction-to-components"><i class="material-icons">link</i></a></h1>

<img src="./Angular - 组件简介_files/hero-component.png" alt="Component" class="left" width="200" height="115">
<p translation-result=""><em>组件</em>控制屏幕上被称为<em>视图</em>的一小片区域。比如，<a href="https://angular.cn/tutorial/index">教程</a>中的下列视图都是由一个个组件所定义和控制的：</p><p translation-origin="off">A <em>component</em> controls a patch of screen called a <em>view</em>. For example, individual components define and control each of the following views from the <a href="https://angular.cn/tutorial/index">Tutorial</a>:</p>

<ul>
<li>
<p translation-result=""> 带有导航链接的应用根组件。</p><p translation-origin="off">The app root with the navigation links.</p>

</li>
<li>
<p translation-result=""> 英雄列表。</p><p translation-origin="off">The list of heroes.</p>

</li>
<li>
<p translation-result=""> 英雄编辑器。</p><p translation-origin="off">The hero editor.</p>

</li>
</ul>
<p translation-result="">你在类中定义组件的应用逻辑，为视图提供支持。
组件通过一些由属性和方法组成的 API 与视图交互。</p><p translation-origin="off">You define a component's application logic—what it does to support the view—inside a class. The class interacts with the view through an API of properties and methods.</p>

<p translation-result="">比如，<code>HeroListComponent</code> 有一个 <code>heroes</code> 属性，它会返回一个从服务中取到的英雄数组。
<code>HeroListComponent</code> 还有一个 <code>selectHero()</code> 方法，当用户从列表中选择一个英雄时，它会设置 <code>selectedHero</code> 属性的值。</p><p translation-origin="off">For example, the <code>HeroListComponent</code> has a <code>heroes</code> property that returns an array of heroes that it acquires from a service. <code>HeroListComponent</code> also has a <code>selectHero()</code> method that sets a <code>selectedHero</code> property when the user clicks to choose a hero from that list.</p>

<code-example path="architecture/src/app/hero-list.component.ts" linenums="false" title="src/app/hero-list.component.ts (class)" region="class" ng-version="6.0.0"><div style="display: none">
export class HeroListComponent implements <a href="https://angular.cn/api/core/OnInit" class="code-anchor">OnInit</a> {
  heroes: Hero[];
  selectedHero: Hero;

  constructor(private service: HeroService) { }

  ngOnInit() {
    this.heroes = this.service.getHeroes();
  }

  selectHero(hero: Hero) { this.selectedHero = hero; }
}


</div><!----><header class="ng-star-inserted">src/app/hero-list.component.ts (class)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/hero-list.component.ts (class)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="kwd">export</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">HeroListComponent</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><a href="https://angular.cn/api/core/OnInit" class="code-anchor"><span class="typ">OnInit</span></a><span class="pln"> </span><span class="pun">{</span><span class="pln">
  heroes</span><span class="pun">:</span><span class="pln"> </span><span class="typ">Hero</span><span class="pun">[];</span><span class="pln">
  selectedHero</span><span class="pun">:</span><span class="pln"> </span><span class="typ">Hero</span><span class="pun">;</span><span class="pln">

  </span><span class="kwd">constructor</span><span class="pun">(</span><span class="kwd">private</span><span class="pln"> service</span><span class="pun">:</span><span class="pln"> </span><span class="typ">HeroService</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="pun">}</span><span class="pln">

  ngOnInit</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">heroes </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">service</span><span class="pun">.</span><span class="pln">getHeroes</span><span class="pun">();</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  selectHero</span><span class="pun">(</span><span class="pln">hero</span><span class="pun">:</span><span class="pln"> </span><span class="typ">Hero</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">selectedHero </span><span class="pun">=</span><span class="pln"> hero</span><span class="pun">;</span><span class="pln"> </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code>
    </pre></aio-code></code-example>
<p translation-result="">当用户在应用中穿行时，Angular 就会创建、更新、销毁一些组件。
你的应用可以通过一些可选的<a href="https://angular.cn/guide/lifecycle-hooks">生命周期钩子</a>（比如<code>ngOnInit()</code>）来在每个特定的时机采取行动。</p><p translation-origin="off">Angular creates, updates, and destroys components as the user moves through the application. Your app can take action at each moment in this lifecycle through optional <a href="https://angular.cn/guide/lifecycle-hooks">lifecycle hooks</a>, like <code>ngOnInit()</code>.</p>

<hr>
<h2 translation-result="" id="component-metadata">组件的元数据<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/architecture-components#component-metadata"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="component-metadata">Component metadata<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/architecture-components#component-metadata"><i class="material-icons">link</i></a></h2>

<img src="./Angular - 组件简介_files/metadata.png" alt="Metadata" class="left" width="170" height="48">
<p translation-result=""><code>@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a></code> 装饰器会指出紧随其后的那个类是个组件类，并为其指定元数据。
在下面的范例代码中，你可以看到 <code>HeroListComponent</code> 只是一个普通类，完全没有 Angular 特有的标记或语法。
直到给它加上了 <code>@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a></code> 装饰器，它才变成了组件。</p><p translation-origin="off">The <code>@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a></code> decorator identifies the class immediately below it as a component class, and specifies its metadata. In the example code below, you can see that <code>HeroListComponent</code> is just a class, with no special Angular notation or syntax at all. It's not a component until you mark it as one with the <code>@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a></code> decorator.</p>

<p translation-result="">组件的元数据告诉 Angular 到哪里获取它需要的主要构造块，以创建和展示这个组件及其视图。
具体来说，它把一个<em>模板</em>（无论是直接内联在代码中还是引用的外部文件）和该组件关联起来。
该组件及其模板，共同描述了一个<em>视图</em>。</p><p translation-origin="off">The metadata for a component tells Angular where to get the major building blocks it needs to create and present the component and its view. In particular, it associates a <em>template</em> with the component, either directly with inline code, or by reference. Together, the component and its template describe a <em>view</em>.</p>

<p translation-result="">除了包含或指向模板之外，<code>@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a></code> 的元数据还会配置要如何在 HTML 中引用该组件，以及该组件需要哪些服务等等。</p><p translation-origin="off">In addition to containing or pointing to the template, the <code>@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a></code> metadata configures, for example, how the component can be referenced in HTML and what services it requires.</p>

<p translation-result=""> 下面的例子中就是 <code>HeroListComponent</code> 的基础元数据：</p><p translation-origin="off"> Here's an example of basic metadata for <code>HeroListComponent</code>:</p>

<code-example path="architecture/src/app/hero-list.component.ts" linenums="false" title="src/app/hero-list.component.ts (metadata)" region="metadata" ng-version="6.0.0"><div style="display: none">
@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a>({
  selector:    'app-hero-list',
  templateUrl: './hero-list.component.html',
  providers:  [ HeroService ]
})
export class HeroListComponent implements <a href="https://angular.cn/api/core/OnInit" class="code-anchor">OnInit</a> {
/* . . . */
}


</div><!----><header class="ng-star-inserted">src/app/hero-list.component.ts (metadata)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/hero-list.component.ts (metadata)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="lit">@</span><a href="https://angular.cn/api/core/Component" class="code-anchor"><span class="lit">Component</span></a><span class="pun">({</span><span class="pln">
  selector</span><span class="pun">:</span><span class="pln">    </span><span class="str">'app-hero-list'</span><span class="pun">,</span><span class="pln">
  templateUrl</span><span class="pun">:</span><span class="pln"> </span><span class="str">'./hero-list.component.html'</span><span class="pun">,</span><span class="pln">
  providers</span><span class="pun">:</span><span class="pln">  </span><span class="pun">[</span><span class="pln"> </span><span class="typ">HeroService</span><span class="pln"> </span><span class="pun">]</span><span class="pln">
</span><span class="pun">})</span><span class="pln">
</span><span class="kwd">export</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">HeroListComponent</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><a href="https://angular.cn/api/core/OnInit" class="code-anchor"><span class="typ">OnInit</span></a><span class="pln"> </span><span class="pun">{</span><span class="pln">
</span><span class="com">/* . . . */</span><span class="pln">
</span><span class="pun">}</span></code>
    </pre></aio-code></code-example>
<p translation-result=""> 这个例子展示了一些最常用的 <code>@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a></code> 配置选项：</p><p translation-origin="off"> This example shows some of the most useful <code>@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a></code> configuration options:</p>

<ul>
<li>
<p translation-result="">   <code>selector</code>：是一个 CSS 选择器，它会告诉 Angular，一旦在模板 HTML 中找到了这个选择器对应的标签，就创建并插入该组件的一个实例。
比如，如果应用的 HTML 中包含 <code>&lt;app-hero-list&gt;&lt;/app-hero-list&gt;</code>，Angular 就会在这些标签中插入一个 <code>HeroListComponent</code> 实例的视图。</p><p translation-origin="off"><code>selector</code>: A CSS selector that tells Angular to create and insert an instance of this component wherever it finds the corresponding tag in template HTML. For example, if an app's  HTML contains <code>&lt;app-hero-list&gt;&lt;/app-hero-list&gt;</code>, then
Angular inserts an instance of the <code>HeroListComponent</code> view between those tags.</p>

</li>
<li>
<p translation-result=""> <code>templateUrl</code>：该组件的 HTML 模板文件相对于这个组件文件的地址。
另外，你还可以用 <code>template</code> 属性的值来提供内联的 HTML 模板。
这个模板定义了该组件的<em>宿主视图</em>。</p><p translation-origin="off"><code>templateUrl</code>: The module-relative address of this component's HTML template. Alternatively, you can provide the HTML template inline, as the value of the <code>template</code> property. This template defines the component's <em>host view</em>.</p>

</li>
<li>
<p translation-result="">   <code>providers</code> 是当前组件所需的<strong>依赖注入提供商</strong>的一个数组。在这个例子中，它告诉 Angular，该组件的构造函数需要一个 <code>HeroService</code> 实例，以获取要显示的英雄列表。</p><p translation-origin="off"><code>providers</code>: An array of <strong>dependency injection providers</strong> for services that the component requires. In the example, this tells Angular that the component's constructor requires a <code>HeroService</code> instance
in order to get the list of heroes to display.</p>

</li>
</ul>
<hr>
<h2 translation-result="" id="templates-and-views">模板与视图<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/architecture-components#templates-and-views"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="templates-and-views">Templates and views<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/architecture-components#templates-and-views"><i class="material-icons">link</i></a></h2>

<img src="./Angular - 组件简介_files/template.png" alt="Template" class="left" width="200" height="114">
<p translation-result="">你要通过组件的配套模板来定义其视图。模板就是一种 HTML，它会告诉 Angular 如何渲染该组件。</p><p translation-origin="off">You define a component's view with its companion template. A template is a form of HTML that tells Angular how to render the component.</p>

<p translation-result="">视图通常会分层次进行组织，让你能以 UI 分区或页面为单位进行修改、显示或隐藏。
与组件直接关联的模板会定义该组件的<em>宿主视图</em>。该组件还可以定义一个<em>带层次结构的视图</em>，它包含一些<em>内嵌的视图</em>作为其它组件的宿主。</p><p translation-origin="off">Views are typically arranged hierarchically, allowing you to modify or show and hide entire UI sections or pages as a unit. The template immediately associated with a component defines that component's <em>host view</em>. The component can also define a <em>view hierarchy</em>, which contains <em>embedded views</em>, hosted by other components.</p>

<figure>
<img src="./Angular - 组件简介_files/component-tree.png" alt="Component tree" class="left" width="300" height="231">
</figure>
<p translation-result="">带层次结构的视图可以包含同一模块（NgModule）中组件的视图，也可以（而且经常会）包含其它模块中定义的组件的视图。</p><p translation-origin="off">A view hierarchy can include views from components in the same NgModule, but it also can (and often does) include views from components that are defined in different NgModules.</p>

<h2 translation-result="" id="template-syntax">模板语法<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/architecture-components#template-syntax"><i class="material-icons">link</i></a></h2><h2 translation-origin="off" id="template-syntax">Template syntax<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/architecture-components#template-syntax"><i class="material-icons">link</i></a></h2>

<p translation-result="">模板很像标准的 HTML，但是它还包含 Angular 的<a href="https://angular.cn/guide/template-syntax">模板语法</a>，这些模板语法可以根据你的应用逻辑、应用状态和 DOM 数据来修改这些 HTML。
你的模板可以使用<em>数据绑定</em>来协调应用和 DOM 中的数据，使用<em>管道</em>在显示出来之前对其进行转换，使用<em>指令</em>来把程序逻辑应用到要显示的内容上。</p><p translation-origin="off">A template looks like regular HTML, except that it also contains Angular <a href="https://angular.cn/guide/template-syntax">template syntax</a>, which alters the HTML based on your app's logic and the state of app and DOM data. Your template can use <em>data binding</em> to coordinate the app and DOM data, <em>pipes</em> to transform data before it is displayed, and <em>directives</em> to apply app logic to what gets displayed.</p>

<p translation-result="">比如，下面是本教程中 <code>HeroListComponent</code> 的模板：</p><p translation-origin="off">For example, here is a template for the Tutorial's <code>HeroListComponent</code>:</p>

<code-example path="architecture/src/app/hero-list.component.html" title="src/app/hero-list.component.html" ng-version="6.0.0"><div style="display: none">
&lt;h2&gt;Hero List&lt;/h2&gt;

&lt;p&gt;&lt;i&gt;Pick <a href="https://angular.cn/api/router/RouterLinkWithHref" class="code-anchor">a</a> hero from the list&lt;/i&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li *<a href="https://angular.cn/api/common/NgForOf" class="code-anchor">ngFor</a>="let hero of heroes" (click)="selectHero(hero)"&gt;
    {{hero.name}}
  &lt;/li&gt;
&lt;/ul&gt;

&lt;app-hero-detail *<a href="https://angular.cn/api/common/NgIf" class="code-anchor">ngIf</a>="selectedHero" [hero]="selectedHero"&gt;&lt;/app-hero-detail&gt;


</div><!----><header class="ng-star-inserted">src/app/hero-list.component.html</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/hero-list.component.html">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="tag">&lt;h2&gt;</span><span class="pln">Hero List</span><span class="tag">&lt;/h2&gt;</span><span class="pln">

</span><span class="tag">&lt;p&gt;&lt;i&gt;</span><span class="pln">Pick </span><a href="https://angular.cn/api/router/RouterLinkWithHref" class="code-anchor"><span class="pln">a</span></a><span class="pln"> hero from the list</span><span class="tag">&lt;/i&gt;&lt;/p&gt;</span><span class="pln">
</span><span class="tag">&lt;ul&gt;</span><span class="pln">
  </span><span class="tag">&lt;li</span><span class="pln"> *</span><a href="https://angular.cn/api/common/NgForOf" class="code-anchor"><span class="atn">ngFor</span></a><span class="pun">=</span><span class="atv">"let hero of heroes"</span><span class="pln"> (</span><span class="atn">click</span><span class="pln">)</span><span class="pun">=</span><span class="atv">"selectHero(hero)"</span><span class="tag">&gt;</span><span class="pln">
    {{hero.name}}
  </span><span class="tag">&lt;/li&gt;</span><span class="pln">
</span><span class="tag">&lt;/ul&gt;</span><span class="pln">

</span><span class="tag">&lt;app-hero-detail</span><span class="pln"> *</span><a href="https://angular.cn/api/common/NgIf" class="code-anchor"><span class="atn">ngIf</span></a><span class="pun">=</span><span class="atv">"selectedHero"</span><span class="pln"> [</span><span class="atn">hero</span><span class="pln">]</span><span class="pun">=</span><span class="atv">"selectedHero"</span><span class="tag">&gt;&lt;/app-hero-detail&gt;</span></code>
    </pre></aio-code></code-example>
<p translation-result="">这个模板使用了典型的 HTML 元素，比如 <code>&lt;h2&gt;</code> 和 <code>&lt;p&gt;</code>，还包括一些 Angular 的模板语法元素，如 <code>*<a href="https://angular.cn/api/common/NgForOf" class="code-anchor">ngFor</a></code>，<code>{{hero.name}}</code>，<code>click</code>、<code>[hero]</code> 和 <code>&lt;app-hero-detail&gt;</code>。这些模板语法元素告诉 Angular 该如何根据程序逻辑和数据在屏幕上渲染 HTML。</p><p translation-origin="off">This template uses typical HTML elements like <code>&lt;h2&gt;</code> and  <code>&lt;p&gt;</code>, and also includes Angular template-syntax elements,  <code>*<a href="https://angular.cn/api/common/NgForOf" class="code-anchor">ngFor</a></code>, <code>{{hero.name}}</code>, <code>(click)</code>, <code>[hero]</code>, and <code>&lt;app-hero-detail&gt;</code>. The template-syntax elements tell Angular how to render the HTML to the screen, using program logic and data.</p>

<ul>
<li>
<p translation-result=""> <code>*<a href="https://angular.cn/api/common/NgForOf" class="code-anchor">ngFor</a></code> 指令告诉 Angular 在一个列表上进行迭代。</p><p translation-origin="off">The  <code>*<a href="https://angular.cn/api/common/NgForOf" class="code-anchor">ngFor</a></code> directive tells Angular to iterate over a list.</p>

</li>
<li>
<p translation-result=""> <code>{{hero.name}}</code>、<code>(click)</code> 和 <code>[hero]</code> 把程序数据绑定到及绑定回 DOM，以响应用户的输入。更多内容参见稍后的<a href="https://angular.cn/guide/architecture-components#data-binding">数据绑定</a>部分。</p><p translation-origin="off">The <code>{{hero.name}}</code>, <code>(click)</code>, and <code>[hero]</code> bind program data to and from the DOM, responding to user input. See more about <a href="https://angular.cn/guide/architecture-components#data-binding">data binding</a> below.</p>

</li>
<li>
<p translation-result=""> 模板中的 <code>&lt;app-hero-detail&gt;</code> 标签是一个代表新组件 <code>HeroDetailComponent</code> 的元素。
<code>HeroDetailComponent</code>（代码略）是 <code>HeroListComponent</code> 的一个子组件，它定义了英雄详情视图。
注意观察像这样的自定义组件是如何与原生 HTML 元素无缝的混合在一起的。</p><p translation-origin="off">The <code>&lt;app-hero-detail&gt;</code> tag in the example is an element that represents a new component, <code>HeroDetailComponent</code>.  The <code>HeroDetailComponent</code>  (code not shown) is a child component of the <code>HeroListComponent</code> that defines the Hero-detail view. Notice how custom components like this mix seamlessly with native HTML in the same layouts.</p>

</li>
</ul>
<h3 translation-result="" id="data-binding">数据绑定<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/architecture-components#data-binding"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="data-binding">Data binding<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/architecture-components#data-binding"><i class="material-icons">link</i></a></h3>

<p translation-result="">如果没有框架，你就要自己负责把数据值推送到 HTML 控件中，并把来自用户的响应转换成动作和对值的更新。
手动写这种数据推拉逻辑会很枯燥、容易出错，难以阅读 —— 用过 jQuery 的程序员一定深有体会。</p><p translation-origin="off">Without a framework, you would be responsible for pushing data values into the HTML controls and turning user responses into actions and value updates. Writing such push/pull logic by hand is tedious, error-prone, and a nightmare to read, as any experienced jQuery programmer can attest.</p>

<p translation-result="">Angular 支持<em>双向数据绑定</em>，这是一种对模板中的各个部件与组件中的各个部件进行协调的机制。
往模板 HTML 中添加绑定标记可以告诉 Angular 该如何连接它们。</p><p translation-origin="off">Angular supports <em>two-way data binding</em>, a mechanism for coordinating parts of a template with parts of a component. Add binding markup to the template HTML to tell Angular how to connect both sides.</p>

<p translation-result="">下图显示了数据绑定标记的四种形式。每种形式都有一个方向 —— 从组件到 DOM、从 DOM 到组件或双向。</p><p translation-origin="off">The following diagram shows the four forms of data binding markup. Each form has a direction—to the DOM, from the DOM, or in both directions.</p>

<figure>
<img src="./Angular - 组件简介_files/databinding.png" alt="Data Binding" class="left" width="220" height="205">
</figure>
<p translation-result="">这个来自 <code>HeroListComponent</code> 模板中的例子使用了其中的三种形式：</p><p translation-origin="off">This example from the <code>HeroListComponent</code> template uses three of these forms:</p>

<code-example path="architecture/src/app/hero-list.component.1.html" linenums="false" title="src/app/hero-list.component.html (binding)" region="binding" ng-version="6.0.0"><div style="display: none">
&lt;li&gt;{{hero.name}}&lt;/li&gt;
&lt;app-hero-detail [hero]="selectedHero"&gt;&lt;/app-hero-detail&gt;
&lt;li (click)="selectHero(hero)"&gt;&lt;/li&gt;

</div><!----><header class="ng-star-inserted">src/app/hero-list.component.html (binding)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/hero-list.component.html (binding)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="tag">&lt;li&gt;</span><span class="pln">{{hero.name}}</span><span class="tag">&lt;/li&gt;</span><span class="pln">
</span><span class="tag">&lt;app-hero-detail</span><span class="pln"> [</span><span class="atn">hero</span><span class="pln">]</span><span class="pun">=</span><span class="atv">"selectedHero"</span><span class="tag">&gt;&lt;/app-hero-detail&gt;</span><span class="pln">
</span><span class="tag">&lt;li</span><span class="pln"> (</span><span class="atn">click</span><span class="pln">)</span><span class="pun">=</span><span class="atv">"selectHero(hero)"</span><span class="tag">&gt;&lt;/li&gt;</span></code>
    </pre></aio-code></code-example>
<ul>
<li>
<p translation-result="">   <code>{{hero.name}}</code><a href="https://angular.cn/guide/displaying-data#interpolation"><em>插值表达式</em></a>在 <code>&lt;li&gt;</code> 标签中显示组件的 <code>hero.name</code> 属性的值。</p><p translation-origin="off">The <code>{{hero.name}}</code> <a href="https://angular.cn/guide/displaying-data#interpolation"><em>interpolation</em></a>
displays the component's <code>hero.name</code> property value within the <code>&lt;li&gt;</code> element.</p>

</li>
<li>
<p translation-result="">   <code>[hero]</code><a href="https://angular.cn/guide/template-syntax#property-binding"><em>属性绑定</em></a>把父组件 <code>HeroListComponent</code> 的 <code>selectedHero</code> 的值传到子组件 <code>HeroDetailComponent</code> 的 <code>hero</code> 属性中。</p><p translation-origin="off">The <code>[hero]</code> <a href="https://angular.cn/guide/template-syntax#property-binding"><em>property binding</em></a> passes the value of <code>selectedHero</code> from
the parent <code>HeroListComponent</code> to the <code>hero</code> property of the child <code>HeroDetailComponent</code>.</p>

</li>
<li>
<p translation-result=""> 当用户点击某个英雄的名字时，<code>(click)</code> <a href="https://angular.cn/guide/user-input#binding-to-user-input-events"><em>事件绑定</em></a>会调用组件的 <code>selectHero</code> 方法。</p><p translation-origin="off">The <code>(click)</code> <a href="https://angular.cn/guide/user-input#binding-to-user-input-events"><em>event binding</em></a> calls the component's <code>selectHero</code> method when the user clicks a hero's name.</p>

</li>
</ul>
<p translation-result="">第四种重要的绑定形式是<strong>双向数据绑定</strong>，它把属性绑定和事件绑定组合成一种单独的写法。下面这个来自 <code>HeroDetailComponent</code> 模板中的例子通过 <code><a href="https://angular.cn/api/forms/NgModel" class="code-anchor">ngModel</a></code> 指令使用了双向数据绑定：</p><p translation-origin="off"><strong>Two-way data binding</strong> is an important fourth form that combines property and event binding in a single notation. Here's an example from the <code>HeroDetailComponent</code> template that uses two-way data binding with the <code><a href="https://angular.cn/api/forms/NgModel" class="code-anchor">ngModel</a></code> directive:</p>

<code-example path="architecture/src/app/hero-detail.component.html" linenums="false" title="src/app/hero-detail.component.html (ngModel)" region="ngModel" ng-version="6.0.0"><div style="display: none">
&lt;input [(<a href="https://angular.cn/api/forms/NgModel" class="code-anchor">ngModel</a>)]="hero.name"&gt;

</div><!----><header class="ng-star-inserted">src/app/hero-detail.component.html (ngModel)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/hero-detail.component.html (ngModel)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="tag">&lt;input</span><span class="pln"> [(</span><a href="https://angular.cn/api/forms/NgModel" class="code-anchor"><span class="atn">ngModel</span></a><span class="pln">)]</span><span class="pun">=</span><span class="atv">"hero.name"</span><span class="tag">&gt;</span></code>
    </pre></aio-code></code-example>
<p translation-result="">在双向绑定中，数据属性值通过属性绑定从组件流到输入框。用户的修改通过事件绑定流回组件，把属性值设置为最新的值。</p><p translation-origin="off">In two-way binding, a data property value flows to the input box from the component as with property binding.
The user's changes also flow back to the component, resetting the property to the latest value,
as with event binding.</p>

<p translation-result="">Angular 在每个 JavaScript 事件循环中处理<em>所有的</em>数据绑定，它会从组件树的根部开始，递归处理全部子组件。</p><p translation-origin="off">Angular processes <em>all</em> data bindings once per JavaScript event cycle,
from the root of the application component tree through all child components.</p>

<figure>
  <img src="./Angular - 组件简介_files/component-databinding.png" alt="Data Binding" class="left" width="358" height="219">
</figure>
<p translation-result="">数据绑定在模板及其组件之间的通讯中扮演了非常重要的角色，它对于父组件和子组件之间的通讯也同样重要。</p><p translation-origin="off">Data binding plays an important role in communication between a template and its component, and is also important for communication between parent and child components.</p>

<figure>
  <img src="./Angular - 组件简介_files/parent-child-binding.png" alt="Parent/Child binding" class="left" width="358" height="171">
</figure>
<h3 translation-result="" id="pipes-1">管道<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/architecture-components#pipes-1"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="pipes">Pipes<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/architecture-components#pipes"><i class="material-icons">link</i></a></h3>

<p translation-result=""> Angular 的管道可以让你在模板中声明显示值的转换逻辑。
带有 <code>@<a href="https://angular.cn/api/core/Pipe" class="code-anchor">Pipe</a></code> 装饰器的类中会定义一个转换函数，用来把输入值转换成供视图显示用的输出值。</p><p translation-origin="off"> Angular pipes let you declare display-value transformations in your template HTML. A class with the <code>@<a href="https://angular.cn/api/core/Pipe" class="code-anchor">Pipe</a></code> decorator defines a function that transforms input values to output values for display in a view.</p>

<p translation-result=""> Angular 自带了很多管道，比如 <a href="https://angular.cn/api/common/DatePipe">date</a> 管道和 <a href="https://angular.cno/api/common/CurrencyPipe">currency</a> 管道，完整的列表参见 <a href="https://angular.cn/api?type=pipe">Pipes API 列表</a>。你也可以自己定义一些新管道。</p><p translation-origin="off"> Angular defines various pipes, such as the <a href="https://angular.io/api/common/DatePipe">date</a> pipe and <a href="https://angular.io/api/common/CurrencyPipe">currency</a> pipe; for a complete list, see the <a href="https://angular.io/api?type=pipe">Pipes API list</a>. You can also define new pipes.</p>

<p translation-result=""> 要在 HTML 模板中指定值的转换方式，请使用 <a href="https://angular.cn/guide/template-syntax#pipe">管道操作符 (|)</a>。</p><p translation-origin="off"> To specify a value transformation in an HTML template, use the <a href="https://angular.io/guide/template-syntax#pipe">pipe operator (|)</a>:</p>

<p translation-origin="off"> <code>{{interpolated_value | pipe_name}}</code></p>
<p translation-result=""> 你可以把管道串联起来，把一个管道函数的输出送给另一个管道函数进行转换。
管道还能接收一些参数，来控制它该如何进行转换。比如，你可以把要使用的日期格式传给 <code>date</code> 管道：</p><p translation-origin="off"> You can chain pipes, sending the output of one pipe function to be transformed by another pipe function. A pipe can also take arguments that control how it performs its transformation. For example, you can pass the desired format to the <code>date</code> pipe:</p>

<code-example ng-version="6.0.0"><div style="display: none">
 &lt;!-- Default format: output 'Jun 15, 2015'--&gt;

 &lt;p&gt;Today is {{today | date}}&lt;/p&gt;

&lt;!-- fullDate format: output 'Monday, June 15, 2015'--&gt;

&lt;p&gt;The date is {{today | date:'fullDate'}}&lt;/p&gt;

 &lt;!-- shortTime format: output '9:43 AM'--&gt;

 &lt;p&gt;The time is {{today | date:'shortTime'}}&lt;/p&gt;
</div><!----><aio-code><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="com">&lt;!-- Default format: output 'Jun 15, 2015'--&gt;</span><span class="pln">

 </span><span class="tag">&lt;p&gt;</span><span class="pln">Today is {{today | date}}</span><span class="tag">&lt;/p&gt;</span><span class="pln">

</span><span class="com">&lt;!-- fullDate format: output 'Monday, June 15, 2015'--&gt;</span><span class="pln">

</span><span class="tag">&lt;p&gt;</span><span class="pln">The date is {{today | date:'fullDate'}}</span><span class="tag">&lt;/p&gt;</span><span class="pln">

 </span><span class="com">&lt;!-- shortTime format: output '9:43 AM'--&gt;</span><span class="pln">

 </span><span class="tag">&lt;p&gt;</span><span class="pln">The time is {{today | date:'shortTime'}}</span><span class="tag">&lt;/p&gt;</span></code>
    </pre></aio-code></code-example>
<hr>
<h3 translation-result="" id="directives">指令<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/architecture-components#directives"><i class="material-icons">link</i></a></h3><h3 translation-origin="off" id="directives">Directives<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/architecture-components#directives"><i class="material-icons">link</i></a></h3>

<img src="./Angular - 组件简介_files/directive.png" alt="Directives" class="left" width="150" height="147">
<p translation-result="">Angular 的模板是<em>动态的</em>。当 Angular 渲染它们的时候，会根据<em>指令</em>给出的指示对 DOM 进行转换。
指令就是一个带有 <code>@<a href="https://angular.cn/api/core/Directive" class="code-anchor">Directive</a></code> 装饰器的类。</p><p translation-origin="off">Angular templates are <em>dynamic</em>. When Angular renders them, it transforms the DOM according to the instructions given by <em>directives</em>. A directive is a class with a <code>@<a href="https://angular.cn/api/core/Directive" class="code-anchor">Directive</a></code> decorator.</p>

<p translation-result="">组件从技术角度上说就是一个指令，但是由于组件对 Angular 应用来说非常独特、非常重要，因此 Angular 专门定义了 <code>@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a></code> 装饰器，它使用一些面向模板的特性扩展了 <code>@<a href="https://angular.cn/api/core/Directive" class="code-anchor">Directive</a></code> 装饰器。</p><p translation-origin="off">A component is technically a directive - but components are so distinctive and central to Angular applications that Angular defines the <code>@<a href="https://angular.cn/api/core/Component" class="code-anchor">Component</a></code> decorator, which extends the <code>@<a href="https://angular.cn/api/core/Directive" class="code-anchor">Directive</a></code> decorator with template-oriented features.</p>

<p translation-result="">除组件外，还有两种指令：<em>结构型指令</em>和<em>属性型指令</em>。和组件一样，指令的元数据把指令类和一个 <code>selector</code> 关联起来，<code>selector</code> 用来把该指令插入到 HTML 中。
在模板中，指令通常作为属性出现在元素标签上，可能仅仅作为名字出现，也可能作为赋值目标或绑定目标出现。</p><p translation-origin="off">There are two kinds of directives besides components:  <em>structural</em> and <em>attribute</em> directives. Just as for components, the metadata for a directive associates the class with a <code>selector</code> that you use to insert it into HTML. In templates, directives typically appear within an element tag as attributes, either by name or as the target of an assignment or a binding.</p>

<h4 translation-result="" id="structural-directives">结构型指令<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/architecture-components#structural-directives"><i class="material-icons">link</i></a></h4><h4 translation-origin="off" id="structural-directives">Structural directives<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/architecture-components#structural-directives"><i class="material-icons">link</i></a></h4>

<p translation-result="">结构型指令通过添加、移除或替换 DOM 元素来修改布局。
这个范例模板使用了两个内置的结构型指令来为要渲染的视图添加程序逻辑：</p><p translation-origin="off">Structural directives alter layout by adding, removing, and replacing elements in DOM. The example template uses two built-in structural directives to add application logic to how the view is rendered:</p>

<code-example path="architecture/src/app/hero-list.component.1.html" linenums="false" title="src/app/hero-list.component.html (structural)" region="structural" ng-version="6.0.0"><div style="display: none">
&lt;li *<a href="https://angular.cn/api/common/NgForOf" class="code-anchor">ngFor</a>="let hero of heroes"&gt;&lt;/li&gt;
&lt;app-hero-detail *<a href="https://angular.cn/api/common/NgIf" class="code-anchor">ngIf</a>="selectedHero"&gt;&lt;/app-hero-detail&gt;


</div><!----><header class="ng-star-inserted">src/app/hero-list.component.html (structural)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/hero-list.component.html (structural)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="tag">&lt;li</span><span class="pln"> *</span><a href="https://angular.cn/api/common/NgForOf" class="code-anchor"><span class="atn">ngFor</span></a><span class="pun">=</span><span class="atv">"let hero of heroes"</span><span class="tag">&gt;&lt;/li&gt;</span><span class="pln">
</span><span class="tag">&lt;app-hero-detail</span><span class="pln"> *</span><a href="https://angular.cn/api/common/NgIf" class="code-anchor"><span class="atn">ngIf</span></a><span class="pun">=</span><span class="atv">"selectedHero"</span><span class="tag">&gt;&lt;/app-hero-detail&gt;</span></code>
    </pre></aio-code></code-example>
<ul>
<li>
<p translation-result=""> <a href="https://angular.cn/guide/displaying-data#ngFor"><code>*ngFor</code></a> 是一个迭代器，它要求 Angular 为 <code>heroes</code> 列表中的每个 <code>&lt;li&gt;</code> 渲染出一个 <code>&lt;li&gt;</code>。</p><p translation-origin="off"><a href="https://angular.cn/guide/displaying-data#ngFor"><code>*ngFor</code></a> is an iterative; it tells Angular to stamp out one <code>&lt;li&gt;</code> per hero in the <code>heroes</code> list.</p>

</li>
<li>
<p translation-result=""> <a href="https://angular.cn/guide/displaying-data#ngIf"><code>*ngIf</code></a> 是个条件语句，只有当选中的英雄存在时，它才会包含 <code>HeroDetail</code> 组件。</p><p translation-origin="off"><a href="https://angular.cn/guide/displaying-data#ngIf"><code>*ngIf</code></a> is a conditional; it includes the <code>HeroDetail</code> component only if a selected hero exists.</p>

</li>
</ul>
<h4 translation-result="" id="attribute-directives">属性型指令<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/architecture-components#attribute-directives"><i class="material-icons">link</i></a></h4><h4 translation-origin="off" id="attribute-directives">Attribute directives<a title="Link to this heading" class="header-link" aria-hidden="true" href="https://angular.cn/guide/architecture-components#attribute-directives"><i class="material-icons">link</i></a></h4>

<p translation-result="">属性型指令会修改现有元素的外观或行为。
在模板中，它们看起来就像普通的 HTML 属性一样，因此得名“属性型指令”。</p><p translation-origin="off">Attribute directives alter the appearance or behavior of an existing element.
In templates they look like regular HTML attributes, hence the name.</p>

<p translation-result=""><code><a href="https://angular.cn/api/forms/NgModel" class="code-anchor">ngModel</a></code> 指令就是属性型指令的一个例子，它实现了双向数据绑定。
<code><a href="https://angular.cn/api/forms/NgModel" class="code-anchor">ngModel</a></code> 修改现有元素（一般是 <code>&lt;input&gt;</code>）的行为：设置其显示属性值，并响应 change 事件。</p><p translation-origin="off">The <code><a href="https://angular.cn/api/forms/NgModel" class="code-anchor">ngModel</a></code> directive, which implements two-way data binding, is an example of an attribute directive. <code><a href="https://angular.cn/api/forms/NgModel" class="code-anchor">ngModel</a></code> modifies the behavior of an existing element (typically an <code>&lt;input&gt;</code>) by setting its display value property and responding to change events.</p>

<code-example path="architecture/src/app/hero-detail.component.html" linenums="false" title="src/app/hero-detail.component.html (ngModel)" region="ngModel" ng-version="6.0.0"><div style="display: none">
&lt;input [(<a href="https://angular.cn/api/forms/NgModel" class="code-anchor">ngModel</a>)]="hero.name"&gt;

</div><!----><header class="ng-star-inserted">src/app/hero-detail.component.html (ngModel)</header><aio-code class="headed-code"><pre class="prettyprint lang-">      <!----><button class="material-icons copy-button no-print ng-star-inserted" title="Copy code snippet" aria-label="Copy code snippet from src/app/hero-detail.component.html (ngModel)">
        <span aria-hidden="true">content_copy</span>
      </button>
      <code class="animated fadeIn"><span class="tag">&lt;input</span><span class="pln"> [(</span><a href="https://angular.cn/api/forms/NgModel" class="code-anchor"><span class="atn">ngModel</span></a><span class="pln">)]</span><span class="pun">=</span><span class="atv">"hero.name"</span><span class="tag">&gt;</span></code>
    </pre></aio-code></code-example>
<p translation-result="">Angular 还有很多预定义指令，它们或者修改布局结构（比如 <a href="https://angular.cn/guide/template-syntax#ngSwitch">ngSwitch</a>），或者修改 DOM 元素和组件的某些方面（比如 <a href="https://angular.cn/guide/template-syntax#ngStyle">ngStyle</a> 和 <a href="https://angular.cn/guide/template-syntax#ngClass">ngClass</a>）。</p><p translation-origin="off">Angular has more pre-defined directives that either alter the layout structure
(for example, <a href="https://angular.cn/guide/template-syntax#ngSwitch">ngSwitch</a>)
or modify aspects of DOM elements and components
(for example, <a href="https://angular.cn/guide/template-syntax#ngStyle">ngStyle</a> and <a href="https://angular.cn/guide/template-syntax#ngClass">ngClass</a>).</p>

<p translation-result="">你还可以写自己的指令。像 <code>HeroListComponent</code> 这样的组件就是一种自定义指令，你还可以创建自定义的结构型指令和属性型指令。</p><p translation-origin="off">You can also write your own directives. Components such as <code>HeroListComponent</code> are one kind of custom directive. You can also create custom structural and attribute directives.</p>

<!-- PENDING: link to where to learn more about other kinds! -->

</div>
<!-- links to this doc:
 - guide/architecture
 - guide/architecture-modules
-->
<!-- links from this doc:
 - api/common/NgForOf
 - api/common/NgIf
 - api/core/Component
 - api/core/Directive
 - api/core/OnInit
 - api/core/Pipe
 - api/forms/NgModel
 - api/router/RouterLinkWithHref
 - guide/architecture-components#attribute-directives
 - guide/architecture-components#component-metadata
 - guide/architecture-components#data-binding
 - guide/architecture-components#directives
 - guide/architecture-components#introduction-to-components
 - guide/architecture-components#pipes
 - guide/architecture-components#pipes-1
 - guide/architecture-components#structural-directives
 - guide/architecture-components#template-syntax
 - guide/architecture-components#templates-and-views
 - guide/displaying-data#interpolation
 - guide/displaying-data#ngFor
 - guide/displaying-data#ngIf
 - guide/lifecycle-hooks
 - guide/template-syntax
 - guide/template-syntax#ngClass
 - guide/template-syntax#ngStyle
 - guide/template-syntax#ngSwitch
 - guide/template-syntax#property-binding
 - guide/user-input#binding-to-user-input-events
 - tutorial/index
 - https://angular.cn/api/common/DatePipe
 - https://angular.cn/api?type=pipe
 - https://angular.cn/guide/template-syntax#pipe
 - https://angular.cno/api/common/CurrencyPipe
 - https://angular.io/api/common/CurrencyPipe
 - https://angular.io/api/common/DatePipe
 - https://angular.io/api?type=pipe
 - https://angular.io/guide/template-syntax#pipe
--></div></aio-doc-viewer><aio-dt><!----></aio-dt></section></mat-sidenav-content></mat-sidenav-container><!----><div class="toc-container no-print ng-star-inserted" style="max-height: 3682px;"><aio-toc><!----><div class="toc-inner no-print collapsed ng-star-inserted"><!----><!----><ul class="toc-list"><!----><!----><!----><li title="组件简介link" class="h1 active ng-star-inserted"><a href="https://angular.cn/guide/architecture-components#introduction-to-components">组件简介</a></li><!----><!----><!----><li title="组件的元数据link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/architecture-components#component-metadata">组件的元数据</a></li><!----><!----><!----><li title="模板与视图link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/architecture-components#templates-and-views">模板与视图</a></li><!----><!----><!----><li title="模板语法link" class="h2 ng-star-inserted"><a href="https://angular.cn/guide/architecture-components#template-syntax">模板语法</a></li><!----><!----><!----><li title="数据绑定link" class="h3 ng-star-inserted"><a href="https://angular.cn/guide/architecture-components#data-binding">数据绑定</a></li><!----><!----><!----><li title="管道link" class="h3 ng-star-inserted"><a href="https://angular.cn/guide/architecture-components#pipes-1">管道</a></li><!----><!----><!----><li title="指令link" class="h3 ng-star-inserted"><a href="https://angular.cn/guide/architecture-components#directives">指令</a></li><!----></ul><!----></div></aio-toc></div><footer class="no-print"><aio-footer><div class="grid-fluid"><!----><div class="footer-block ng-star-inserted"><h3>资源</h3><ul><!----><li class="ng-star-inserted"><a class="link" href="https://angular.cn/about" title="Angular 贡献者。">关于</a></li><li class="ng-star-inserted"><a class="link" href="https://angular.cn/resources" title="网络上的 Angular 工具、培训、博客等">资源列表</a></li><li class="ng-star-inserted"><a class="link" href="https://angular.cn/presskit" title="我们的联系方式、LOGO 和品牌">宣传资料</a></li><li class="ng-star-inserted"><a class="link" href="https://blog.angular.io/" title="Angular 官方博客">博客</a></li></ul></div><div class="footer-block ng-star-inserted"><h3>帮助</h3><ul><!----><li class="ng-star-inserted"><a class="link" href="https://stackoverflow.com/questions/tagged/angular" title="Stack Overflow: 这里的社区会回答你关于 Angular 的技术问题">Stack Overflow</a></li><li class="ng-star-inserted"><a class="link" href="https://gitter.im/angular/angular" title="和老鸟聊 Angular">Gitter</a></li><li class="ng-star-inserted"><a class="link" href="https://github.com/angular/angular/issues" title="在 github 上报告问题和建议。">报告问题</a></li><li class="ng-star-inserted"><a class="link" href="https://github.com/angular/code-of-conduct/blob/master/CODE_OF_CONDUCT.md" title="让我们彼此尊重">行为规范</a></li></ul></div><div class="footer-block ng-star-inserted"><h3>社区</h3><ul><!----><li class="ng-star-inserted"><a class="link" href="https://angular.cn/events" title="Post issues and suggestions on github.">活动</a></li><li class="ng-star-inserted"><a class="link" href="http://www.meetup.com/topics/angularjs/" title="参加聚会，向别的开发人员学习">聚会</a></li><li class="ng-star-inserted"><a class="link" href="https://twitter.com/angular" title="Twitter">Twitter</a></li><li class="ng-star-inserted"><a class="link" href="https://github.com/angular/angular" title="GitHub">GitHub</a></li><li class="ng-star-inserted"><a class="link" href="https://angular.cn/contribute" title="向 Angular 做贡献">做贡献</a></li></ul></div><div class="footer-block ng-star-inserted"><h3>多语言</h3><ul><!----><li class="ng-star-inserted"><a class="link" href="https://angular.io/" title="English Version.">English Version</a></li><li class="ng-star-inserted"><a class="link" href="https://angular.jp/" title="日本語版">日本語版</a></li></ul></div></div><p> Powered by Google ©2010-2018. 代码授权方式：<a href="https://angular.cn/license" title="License text">MIT-style License</a>. 文档授权方式：<a href="http://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a>. </p><p><span class="text-caption">本网站由第三方公司洛阳永欣维护 &nbsp;<a href="http://www.miitbeian.gov.cn/">豫ICP备16019859号-1</a></span></p><p> 当前版本：6.0.1-build.180+sha.8494cf4. </p></aio-footer></footer></aio-shell>

  <noscript>
    &lt;div class="background-sky hero"&gt;&lt;/div&gt;
    &lt;section id="intro"&gt;
      &lt;div class="hero-logo"&gt;
        &lt;img src="assets/images/logos/angular/angular.svg" width="250" height="250"&gt;
      &lt;/div&gt;
      &lt;div class="homepage-container"&gt;
        &lt;div class="hero-headline"&gt;一套框架，多种平台&lt;br&gt;移动 &amp;amp; 桌面&lt;/div&gt;
      &lt;/div&gt;
    &lt;/section&gt;
    &lt;h2 style="color: red; text-align: center; margin-top: -50px;"&gt;
      &lt;b&gt;&lt;i&gt;该网站需要浏览器支持 JavaScript &lt;/i&gt;&lt;/b&gt;
    &lt;/h2&gt;
  </noscript>


<script type="text/javascript" src="./Angular - 组件简介_files/runtime.e7e60529879ffb07e28e.js.下载"></script><script type="text/javascript" src="./Angular - 组件简介_files/polyfills.56dafdd128abda80a86c.js.下载"></script><script type="text/javascript" src="./Angular - 组件简介_files/main.e580488e21fdad9d749c.js.下载"></script><div class="cdk-visually-hidden" aria-atomic="true" aria-live="polite"></div></body></html>